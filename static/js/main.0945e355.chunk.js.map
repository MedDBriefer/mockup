{"version":3,"sources":["data/traumaScenarioIndexer.js","components/MockupButton.js","components/MDBNavBar.js","components/MDBModal.js","components/ScenarioInfo.js","components/MDBContainer.js","components/CheckBox.js","components/CallOutText.js","components/CallOutIcon.js","components/InterventionButton.js","components/InterventionForm.js","components/CheckListItem.js","components/Panel.js","components/RevealTableRow.js","components/RevealTable.js","components/RaterInfo.js","components/MDBDetailsPane.js","components/Outline.js","Mockup1.js","components/CheckList.js","Mockup2.js","Mockup3.js","data/scenario.js","App.js","index.js"],"names":["HEADING","ASSESS","INTERV","REQURED","CRIT_FAIL","TRAUMA_SCENARIO_STRUCTURE","nodeLabels","tree","id","type","children","leaves","label","callouts","stepId","calloutLabel","criticalCriteria","parent","interventionForms","interventions","steps","addLeavesToBranches","items","map","step","item","deepCopy","object","JSON","parse","stringify","traumaScenarioIndexer","scenario","data","scenarioType","info","initialVitalSigns","SAMPLE","reassessmentVitals","assessmentFindings","Object","entries","key","value","found","find","ca","calloutText","console","log","process","exit","keys","callout","addAssessmentFindingsToLeaves","forEach","element","push","critsWithParents","filter","crit","heading","addCriticalCriteriaToLeaves","intervention","addInterventionCategorizationsToLeaves","addNodeLabelsToBranches","labelsMap","error","assessments","getAssessmentNodes","node","assessmentSteps","MockupButton","to","Button","color","MDBNavBar","branding","title","toggler","Navbar","dark","Nav","tabs","NavItem","NavbarText","tag","onClick","MDBModal","props","show","Modal","isOpen","toggle","size","backdrop","ModalHeader","className","ModalBody","ScenarioInfo","instructorInformation","patientInformation","moulage","position","actions","dispatchInfo","sceneAssessment","MDBContainer","lhs","rhs","lhsWidth","rhsWidth","Container","fluid","Row","Col","md","CheckBox","clickHandler","inlineChildren","config","classnames","isChecked","CallOutText","currentCallOut","getCurrentCallout","CallOutIcon","style","InterventionButton","InterventionForm","formData","getDisplayForm","intv","checklist","cl","crits","cc","toggleChecked","CheckListItem","inlines","toggleCallout","displayCalloutText","toggleDisplayForm","ib","displayInterventionForms","Panel","centerTitle","titleSize","Card","CardHeader","CardTitle","CardBody","RevealTableRow","values","useState","setShow","autoRevealRaterInfo","index","hidden","RevealTable","headings","rows","Table","striped","row","RaterInfo","defaultTab","activeTab","setActiveTab","tab","sample","rec","vitalsHeaders","getVitalsRecomputed","vitals","iv","getCurrentVital","NavLink","active","TabContent","TabPane","tabId","MDBDetailsPane","raterInfoConfig","assign","getCurrentNode","child","Outline","depth","first","length","hasChildren","every","allChildrenAreHeadings","setCurrentNode","initKeysToFalse","dict","reduce","obj","Mockup","React","Component","constructor","super","this","state","currentVitals","vitalsRecomputed","currentNode","checkListItems","showForm","bind","setChecked","setCurrentVital","recomputeVitals","setDisplayForm","window","lhsConfig","mkConfig","rhsConfig","setState","retVal","nodeId","boolVal","prevState","vital","scen","Math","random","goodVitals","badVitals","includes","dispCalloutIcons","dispCalloutText","dispForms","displayCalloutIcons","componentDidMount","render","CheckList","collapsed","setCollapsed","isLeafNode","scenarioData","BP","P","R","Skin","Spo2","ETCO2","GCS","Glucose","Pain","Temp","S","A","M","L","E","App","showInfo","toggleShowInfo","path","Mockup1","Mockup2","Mockup3","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.0945e355.chunk.js","sourcesContent":["// the scenarios entered via forms are merely a set of fields and values and\n// aren't organized as steps.  the purpose of this file is to define the\n// structure of a trauma scenario, as\n// * a tree of steps (and weave the scenario-speific info into them)\n// * various other mappings of things so they can be looked up by id,  more details later\n\n// const CHECK = \"check-box\";\n// const RADIO = \"radio-button\";\n\nconst HEADING = \"heading\"; //not a leaf node, simply a step which has child steps\n\nconst ASSESS    = \"assessment\";\nconst INTERV    = \"intervention\"; // an action performed on the patient\nconst REQURED   = \"required-action\"   // an action the EMT performs, but not on the patient\nconst CRIT_FAIL = \"critical-criteria\";\n\nconst TRAUMA_SCENARIO_STRUCTURE = {\n    nodeLabels: {\n        \"bsi\":                              \"BSI\",\n        \"scene-size-up\":                    \"Scene Size-Up\",\n        \"initial-assessment-resuscitation\": \"Primary Survey/Resuscitation\",\n        \"general-assessment\":               \"General Impression and LOC\",\n        \"airway\":                           \"Airway\",\n        \"breathing\":                        \"Breathing\",\n        \"circulation\":                      \"Circulation\",\n        \"transport-decision\":               \"Transport Decision\",\n        \"history-taking\":                   \"History Taking\",\n        \"detailed-physical-examination\":    \"Secondary Assessment\",\n        \"head\":                             \"Head\",\n        \"neck\":                             \"Neck**\",\n        \"chest\":                            \"Chest**\",\n        \"abdomen-pelvis\":                   \"Abdomen/pelvis**\",\n        \"lower-extremities\":                \"Lower extremities**\",\n        \"upper-extremities\":                \"Upper extremities\",\n        \"posterior-thorax-lumbar-buttocks\": \"Posterior thorax, lumbar, and buttocks**\",\n        \"misc\":                             \"Ongoing management and reassessment\",\n        \"critical-criteria\":                \"Critical Criteria\"\n    },\n    tree: [\n        { id: \"bsi\",           type: HEADING },\n        { id: \"scene-size-up\", type: HEADING },\n        {\n            id: \"initial-assessment-resuscitation\",\n            type: HEADING,\n            children: [\n                { id: 'general-assessment', type: HEADING },\n                { id: \"airway\",             type: HEADING },\n                { id: \"breathing\",          type: HEADING },\n                { id: \"circulation\",        type: HEADING },\n                { id: \"transport-decision\", type: HEADING }\n            ]\n        },\n        { id: \"history-taking\", type: HEADING },\n        {\n            id: \"detailed-physical-examination\",\n            type: HEADING,\n            children: [\n                { id: \"head\",                             type: HEADING },\n                { id: \"neck\",                             type: HEADING },\n                { id: \"chest\",                            type: HEADING },\n                { id: \"abdomen-pelvis\",                   type: HEADING },\n                { id: \"lower-extremities\",                type: HEADING },\n                { id: \"upper-extremities\",                type: HEADING },\n                { id: \"posterior-thorax-lumbar-buttocks\", type: HEADING },\n                { id: \"misc\",                             type: HEADING }\n            ]\n        },\n        { id: \"critical-criteria\", type: HEADING }\n    ],\n    leaves: {\n        'bsi': [\n            { id: \"apply-ppe\",  type: REQURED, label: \"Takes or verbalizes appropriate PPE precautions.\" } // crit criteria 590\n        ],\n        'scene-size-up': [\n            { id: \"assess-scene-safety\",     type: ASSESS, label: \"Determines the scene/situation is safe\" },\n            { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\" },\n            { id: \"assess-num-patients\",     type: ASSESS, label: \"Determines the number of patients\" },\n            { id: \"request-addl-help\",       type: ASSESS, label: \"Requests additional help if necessary\" },\n            { id: \"stabilizes-spine\",        type: INTERV, label: \"Stabilizes or directs assistant to stabilize the cervical spine, as indicated\" } // crit criteria 610\n        ],\n        'general-assessment': [\n            { id: \"verbalizes-patient-condition\", type: ASSESS, label: \"Verbalizes general impression of the patient\" },\n            { id: \"determines-loc\",               type: ASSESS, label: \"Determines responsiveness/level of consciousness\" },\n            { id: \"determines-life-threats\",      type: ASSESS, label: \"Determines chief complaint/apparent life-threats\" }\n        ],\n        'airway': [\n            { id: \"assess-airway\",    type: ASSESS, label: \"Opens and assesses airway\" },\n            { id: \"inserts-adjunct\",  type: INTERV, label: \"Inserts adjunct as indicated\" }, // action / crit criteria 690\n            { id: \"manages-airway\",   type: INTERV, label: \"Appropriately manages any problems associated with airway\"}\n        ],\n        'breathing': [\n            { id: \"assess-breathing\",        type: ASSESS, label: \"Assesses breathing\" },\n            { id: \"assess-ventilation\",      type: ASSESS, label: \"Assures adequate ventilation\" },\n            { id: \"oxygen-therapy\",          type: INTERV, label: \"Initiates appropriate oxygen therapy\" }, // crit criteria 620\n            { id: \"manage-breathing-injury\", type: INTERV, label: \"Manages any injury that may compromise breathing/ventilation\" } // crit criteria 630\n        ],\n        'circulation': [\n            { id: \"assess-pulse\",     type: ASSESS, label: \"Checks pulse\" },\n            { id: \"assess-skin\",      type: ASSESS, label: \"Assesses skin [either skin color, temperature, or condition]\" },\n            { id: \"assess-bleeding\",  type: ASSESS, label: \"Assesses for major bleeding\" },\n            { id: \"control-bleeding\", type: INTERV, label: \"Controls major bleeding if present\" },\n            { id: \"control-shock\",    type: INTERV, label: \"Initiates shock management as indicated\" } // crit criteria 640\n        ],\n        'transport-decision': [\n            { id: \"transport-priority\", type: REQURED, label: \"Identifies priority patients/makes transport decision based upon calculated GCS\" } // crit criteria 650\n        ],\n        'history-taking': [\n            { id: \"obtains-vitals\",        type: ASSESS, label: \"Obtains, or directs assistant to obtain, baseline vital signs\" }, // point to vitals\n            { id: \"attempt-obtain-sample\", type: ASSESS, label: \"Attempts to obtain SAMPLE history\" } // point to SAMPLE\n        ],\n        'head': [\n            { id: \"assess-mouth-nose-face\", type: ASSESS, label: \"Inspects mouth**, nose**, and assesses facial area\" },\n            { id: \"assess-scape-ears\",      type: ASSESS, label: \"Inspects and palpates scalp and ears\" },\n            { id: \"assess-perrl\",           type: ASSESS, label: \"Assesses eyes for PERRL**\" }\n        ],\n        'neck': [\n            { id: \"assess-trachea\", type: ASSESS, label: \"Checks position of trachea\" },\n            { id: \"assess-jugular\", type: ASSESS, label: \"Checks jugular veins\" },\n            { id: \"assess-spine\",   type: ASSESS, label: \"Palpates cervical spine\" }\n        ],\n        'chest': [\n            { id: \"inspects-chest\",   type: ASSESS, label: \"Inspects chest\" },\n            { id: \"palpate-chest\",    type: ASSESS, label: \"Palpates chest\" },\n            { id: \"auscultate-chest\", type: ASSESS, label: \"Auscultates chest\" }\n        ],\n        'abdomen-pelvis': [\n            { id: \"assess-abdomen\",   type: ASSESS, label: \"Inspects and palpates abdomen\" },\n            { id: \"assess-pelvis\",    type: ASSESS, label: \"Assesses pelvis\" },\n            { id: \"assess-genitalia\", type: ASSESS, label: \"Verbalizes assessment of genitalia/perineum as needed\" }\n        ],\n        'lower-extremities': [\n            { id: \"assess-right-leg\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right lower extremity\" },\n            { id: \"assess-left-leg\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left lower extremity\" }\n        ],\n        'upper-extremities': [\n            { id: \"assess-right-arm\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right upper extremity\" },\n            { id: \"assess-left-arm\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left upper extremity\" }\n        ],\n        \"posterior-thorax-lumbar-buttocks\": [\n            { id: \"assess-posterior-thorax\", type: ASSESS, label: \"Inspects and palpates posterior thorax\" },\n            { id: \"assess-lumbar-buttocks\",  type: ASSESS, label: \"Inspects and palpates lumbar and buttocks area\" }\n        ],\n        \"misc\": [\n            { id: \"manage-secondary-injuries\", type: REQURED, label: \"Manages secondary injuries and wounds appropriately\" },\n            { id: \"performs-ongoing-assessment\", type: REQURED, label: \"Performs ongoing assessment\" }\n        ],\n        \"critical-criteria\": [] // these need to all be woven in by the scenario builder, as what goes here is depending on some options\n    },\n    callouts: [\n        { stepId: \"assess-scene-safety\",           calloutLabel: \"Scene Safety\" },\n        { stepId: \"assess-injury-mechanism\",       calloutLabel: \"Mechanism of Injury\" },\n        { stepId: \"assess-num-patients\",           calloutLabel: \"Num Patients\" },\n        { stepId: \"request-addl-help\",             calloutLabel: \"Additional Help\" },\n        { stepId: \"verbalizes-patient-condition\",  calloutLabel: \"Condition\" },\n        { stepId: \"determines-loc\",                calloutLabel: \"LOC\" },\n        { stepId: \"determines-life-threats\",       calloutLabel: \"Life Threats\" },\n        { stepId: \"assess-airway\",                 calloutLabel: \"Airway\" },\n        { stepId: \"assess-breathing\",              calloutLabel: \"Breathing\" },\n        { stepId: \"assess-ventilation\",            calloutLabel: \"Ventilations\" },\n        { stepId: \"assess-pulse\",                  calloutLabel: \"Pulse\" },\n        { stepId: \"assess-skin\",                   calloutLabel: \"Skin\" },\n        { stepId: \"assess-bleeding\",               calloutLabel: \"Bleeding\" },\n        { stepId: \"assess-mouth-nose-face\",        calloutLabel: \"Face\" },\n        { stepId: \"assess-scape-ears\",             calloutLabel: \"Ears\" },\n        { stepId: \"assess-perrl\",                  calloutLabel: \"PERRL\" },\n        { stepId: \"assess-trachea\",                calloutLabel: \"Trachea\" },\n        { stepId: \"assess-jugular\",                calloutLabel: \"Jugular\" },\n        { stepId: \"assess-spine\",                  calloutLabel: \"Assess C-Spine\" },\n        { stepId: \"inspects-chest\",                calloutLabel: \"Inspect Chest\" },\n        { stepId: \"palpate-chest\",                 calloutLabel: \"Palpate Chest\" },\n        { stepId: \"auscultate-chest\",              calloutLabel: \"Auscultates Chest\" },\n        { stepId: \"assess-abdomen\",                calloutLabel: \"Abdomen\" },\n        { stepId: \"assess-pelvis\",                 calloutLabel: \"Pelvis\" },\n        { stepId: \"assess-genitalia\",              calloutLabel: \"Genitalia\" },\n        { stepId: \"assess-left-leg\",               calloutLabel: \"Left Leg\" },\n        { stepId: \"assess-right-leg\",              calloutLabel: \"Right Leg\" },\n        { stepId: \"assess-left-arm\",               calloutLabel: \"Left Arm\" },\n        { stepId: \"assess-right-arm\",              calloutLabel: \"Right Arm\" },\n        { stepId: \"assess-posterior-thorax\",       calloutLabel: \"Posterior/Thorax\" },\n        { stepId: \"assess-lumbar-buttocks\",        calloutLabel: \"Lumbar/Buttocks\" }\n    ],\n    criticalCriteria: [\n        // we might be able to auto-check based off of timer expiring\n        { id: \"critial-failure-timely-transport-decision\",       type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to initiate or call for transport of the patient within 10 minute time limit\" },\n        // true if 'apply-ppe' not checked?\n        { id: \"critical-failure-ppe\",                            type: CRIT_FAIL, parent: \"bsi\",                label: \"Failure to take or verbalize appropriate PPE precautions\" },\n        // true if 'assess-scene-safety' not checked?\n        { id: \"critical-failure-scene-safety\",                   type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to determine scene safety\" },\n        // true if 'stabilize-spine' not checked AND indicated?\n        { id: \"critical-failure-spinal-protection\",              type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to assess for and provide spinal protection when indicated\" },\n        { id: \"critical-failure-oxygen-supply\",                  type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to voice and ultimately provide high concentration of oxygen\" },\n        // true if ANY of the ventiliation\n        { id: \"critical-failure-ventilation\",                    type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to assess/provide adequate ventilation\" },\n        // not giving this one a parent, as it belongs to a heading whose only other children are other headings, making it\n        // problematic in the navigation/details layout - readdress this if we don't go with that\n        { id: \"critical-failure-manage-life-threats\",            type: CRIT_FAIL,                               label: \"Failure to find or appropriately manage problems associated with airway, breathing, hemorrhage or shock [hypoperfusion]\" },\n        // combine below with 580?\n        { id: \"critical-failure-differentiate-immediate-transport-vs-on-scene-treatment\",  type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to differentiate patient's need for immediate transportation versus continued assessment/treatment at the scene\" },\n        { id: \"critical-failure-prioritizing-non-life-threats\",  type: CRIT_FAIL,                               label: \"Does other detailed history or physical exam before assessing/treating threats to airway, breathing, and circulation\" },\n        { id: \"critical-failure-incompetence\",                   type: CRIT_FAIL,                               label: \"Failure to manage the patient as a competent EMT\" },\n        { id: \"critical-failure-unacceptable-affect\",            type: CRIT_FAIL,                               label: \"Exhibits unacceptable affect with patient or other personnel\" },\n        { id: \"critical-failure-inapproriate-intervention\",      type: CRIT_FAIL,                               label: \"Uses or orders a dangerous or inappropriate intervention\" }\n    ],\n    interventionForms: {\n        // Each selected intervention should, by default, also include an 'other / incorrect intervention' option\n        // Each object title matches checklist item id for easier mapping\n        \"stabilizes-spine\": {\n            id: \"c-spine-interventions\",\n            interventions: [\n                { id: \"c-spine-intervention-10\", label: \"Holds manual stabilization\" },\n                { id: \"c-spine-intervention-20\", label: \"Applies cervical collar\" }\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" },\n                { id: 'bogus-step-2', label: \"bogus step 2\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"inserts-adjunct\": {\n            id: \"adjunct-interventions\",\n            interventions: [\n                { id: \"adjunct-intervention-10\", label: \"Inserts OPA\" },\n                { id: \"adjunct-intervention-20\", label: \"Inserts NPA\" },\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" },\n                { id: 'bogus-step-2', label: \"bogus step 2\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"manages-airway\": {\n            id: \"airway-interventions\",\n            interventions: [\n                { id: \"airway-intervention-10\", label: \"bogus intervetion1\" },\n                { id: \"airway-intervention-20\", label: \"bogus intervention2\" },\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n                { id: \"bogus-crit-3\", label: \"bogus critical criteria 3\" },\n            ]\n        },\n        \"oxygen-therapy\": {\n            id: \"oxygen-therapy-interventions\",\n            interventions: [\n                { id: \"ventilation-intervention-10\", label: \"Endotracheal intubation\" },\n                { id: \"ventilation-intervention-20\", label: \"Bag-valve mask\" },\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"manage-breathing-injury\": {\n            id: \"manage-breathing-injury-intervention\",\n            interventions: [\n                {id: \"manage-breathing-intervention-10\", label: \"bogus intervention 1\"},\n                {id: \"manage-breathing-intervention-29\", label: \"bogus intervention 2\"}\n            ],\n            steps: [\n                {id: \"bogus-step-1\", label: \"bogus step 1\" },\n                {id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n\n            ]\n        },\n        \"control-bleeding\": {\n            id: \"bleeding-interventions\",\n            interventions: [\n                { id: \"bleeding-intervention-10\", label: \"Applies direct pressure\" },\n                { id: \"bleeding-intervention-20\", label: \"Applies tourniquet\" }\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [ // Critical criteria should automatically be check boxes\n                { id: \"bleeding-crit-30\", type: CRIT_FAIL, label: \"Did not control hemorrhage using correct procedures in a timely manner\" },\n                { id: \"bleeding-crit-40\", type: CRIT_FAIL, label: \"Did not apply direct pressure to wound before applying tourniquet\" },\n                { id: \"bleeding-crit-50\", type: CRIT_FAIL, label: \"Did not properly position the patient\" },\n                { id: \"bleeding-crit-60\", type: CRIT_FAIL, label: \"Did not take steps to prevent heat loss\" }\n            ]\n        },\n        \"control-shock\": {\n            id: \"shock-interventions\",\n            interventions: [\n                { id: \"shock-intervention-10\", label: \"IV fluid therapy--Peripheral IV insertion\" },\n                { id: \"shock-intervention-20\", label: \"IV fluid therapy--IV Push/Bolus\" },\n                { id: \"shock-intervention-30\", label: \"Covers patient\" }\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"shock-crit-10\", type: CRIT_FAIL, label: \"Fails to establish a patent and properly adjusted IV within 6-minute time limit\" },\n                { id: \"shock-crit-20\", type: CRIT_FAIL, label: \"Fails to establish IV within 3 attempts during 6-minute time limit\" },\n                { id: \"shock-crit-30\", type: CRIT_FAIL, label: \"Contaminates equipment or site without appropriately correcting situation\" },\n                { id: \"shock-crit-40\", type: CRIT_FAIL, label: \"Performs any improper technique resulting in the potential for uncontrolled hemorrhage, catheter shear, or air embolism\" },\n                { id: \"shock-crit-50\", type: CRIT_FAIL, label: \"Fails to dispose/verbalize disposal of blood-contaminated sharps immediately in proper container at point of use\" }\n            ]\n        },\n        \"transport-priority\": {\n            id: \"transport-interventions\",\n            interventions: [\n                { id: \"transport-intervention-10\", label: \"Scoop Stretcher\" },\n                { id: \"transport-intervention-20\", label: \"Supine Long Backboard\" },\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"transport-crit-10\", type: CRIT_FAIL, label: \"Did not immediately direct or take manual immobilization of head\" },\n                { id: \"transport-crit-20\", type: CRIT_FAIL, label: \"Did not properly apply appropriately sized cervical collar before ordering releaseof manual immobilization\" },\n                { id: \"transport-crit-30\", type: CRIT_FAIL, label: \"Released or ordered relase of manual immobilization before it was maintained mechanically\" },\n                { id: \"transport-crit-40\", type: CRIT_FAIL, label: \"Manipulated or moved patient excessively causing potential spinal compromise\" },\n                { id: \"transport-crit-50\", type: CRIT_FAIL, label: \"Head immobilized to the device before device sufficiently secured to torso\" },\n                { id: \"transport-crit-60\", type: CRIT_FAIL, label: \"Patient moves excessively up, down, left, or right on the device\" },\n                { id: \"transport-crit-70\", type: CRIT_FAIL, label: \"Head immobilization allows for excessive movement\" },\n                { id: \"transport-crit-80\", type: CRIT_FAIL, label: \"Upon completion of immobilization, head is not in a neutral, in-line position\" },\n                { id: \"transport-crit-90\", type: CRIT_FAIL, label: \"Did not reassess motor, sensory, and circulatory functions in each extremity after immobilizing patient to the device\" }\n            ]\n        }\n    }\n};\n\n\n\nfunction addAssessmentFindings(assessmentFindings) {\n    return Object.entries(assessmentFindings).map(([key, value]) => {\n        const found = TRAUMA_SCENARIO_STRUCTURE.callouts.find((ca) => ca.stepId === key)\n        if (found) {\n            found.calloutText = value;\n        } else {\n            console.log(\"ERROR key not found!\", key);\n            process.exit(1)\n        }\n        return found;\n    })\n}\n\n\n// eslint-disable-next-line\nfunction addAssessmentFindingsToLeaves(items, callouts) {\n\n    for (const { stepId, calloutLabel, calloutText } of callouts) {\n        // console.log(stepId, calloutLabel, calloutText)\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? { ...item, calloutLabel: calloutLabel, callout: calloutText }\n                    : item\n            )\n            items[key] = children\n        }\n    }\n    return items;\n}\n\nfunction addInterventionCategorizationsToLeaves(items, interventions) {\n    for (const [stepId, value] of Object.entries(interventions)) {\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? {...item, intervention: value}\n                    : item\n            )\n            items[key] = children\n        }\n    }\n}\n\nfunction addCriticalCriteriaToLeaves(items, criticalCriteria) {\n    // add all to the critical criteria step, components can elect not to display\n    // ones with parents\n    criticalCriteria.forEach(element => {\n        items['critical-criteria'].push(element)\n    });\n    // append specific ones to the approriate 'items' based off their parent\n    // (if present)\n\n    const critsWithParents = criticalCriteria.filter((crit) => !!crit.parent)\n    for (const heading of Object.keys(items)) {\n        // console.log(\"\\n\", heading)\n        for (const crit of critsWithParents.filter((crit) => crit.parent === heading)) {\n            items[heading].push(crit)\n        }\n    }\n    // process.exit(0)\n}\n\n\n\nfunction addEmptyChildren(array) {\n    return array.map((item) =>\n        !item.children\n            ? { ...item, children: [] }\n            : item\n    )\n}\n\nfunction addNodeLabelsToBranches(steps, labelsMap) {\n    return steps.map((step) => {\n        let found = (step.id in labelsMap) ? labelsMap[step.id] : false;\n        if (!found) {\n            console.error(`label for ${step.id} not found!`)\n        } else {\n            step.label = found;\n        }\n        if (step.children) {\n            step.children = addNodeLabelsToBranches(step.children, labelsMap)\n        }\n        return step\n    })\n}\n\nfunction addLeavesToBranches(steps, items) {\n    return steps.map((step) => {\n        if (!step.children) {\n            step.children = (step.id in items) ? addEmptyChildren(items[step.id]) : []\n        } else {\n            step.children = addLeavesToBranches(step.children, items);\n        }\n        return step;\n    });\n}\n\nfunction deepCopy(object) {\n    return JSON.parse(JSON.stringify(object))\n}\n\nfunction getAssessmentNodes(tree, assessments=[]) {\n    // console.log(tree)\n    for (const node of tree) {\n        if (node.type === 'assessment') {\n            assessments.push(node)\n        } else if (node.type === 'heading') {\n            assessments = getAssessmentNodes(node.children, assessments)\n        }\n    }\n    return assessments;\n}\n\nconst traumaScenarioIndexer = (scenario) => {\n    const data = {\n        id: scenario.id,\n        scenarioType: scenario.scenarioType,\n        info: scenario.info,\n        initialVitalSigns: scenario.initialVitalSigns,\n        SAMPLE: scenario.SAMPLE,\n        reassessmentVitals: scenario.reassessmentVitals,\n        interventionForms: deepCopy(TRAUMA_SCENARIO_STRUCTURE.interventionForms),\n        criticalCriteria: deepCopy(TRAUMA_SCENARIO_STRUCTURE.criticalCriteria),\n        nodeLabels: deepCopy(TRAUMA_SCENARIO_STRUCTURE.nodeLabels),\n        items: deepCopy(TRAUMA_SCENARIO_STRUCTURE.leaves),\n    }\n    // callouts are defined separately, as 1. it's easier to access them from the\n    // right pane this way, and 2. it's easier to modify their labels if they're listed\n    // sequentially, rather than in the tree or leaves structures\n    // also, while we've changed the labels to 'Assessment Findings', I'm keeping things\n    // as callouts now, so we don't have to change all of the props, code, etc\n    data.callouts = addAssessmentFindings(scenario.assessmentFindings)\n    addAssessmentFindingsToLeaves(data.items, data.callouts)\n    addCriticalCriteriaToLeaves(data.items, TRAUMA_SCENARIO_STRUCTURE.criticalCriteria)\n    addInterventionCategorizationsToLeaves(data.items, scenario.interventions)\n    const steps = addNodeLabelsToBranches(TRAUMA_SCENARIO_STRUCTURE.tree, TRAUMA_SCENARIO_STRUCTURE.nodeLabels)\n    data.steps = addLeavesToBranches(steps, data.items)\n\n    // filter through tree of steps, creating ordered list of assessment steps'\n    const assessments = getAssessmentNodes(steps)\n    // console.log(assessments)\n    data.assessmentSteps = assessments;\n    return data;\n}\n\n\nexport default traumaScenarioIndexer\n","import React from \"react\"\n// , { useState }\n\nimport { Button } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n\n// This component wraps a bootstrap Button with a Link.  We're using NavLink\n// rather than Link, as it has an isActive() method.  I'm using the defalt\n// behavior for this method, but as a side-effect, setting some state within\n// the componenet so I can style the Button with the color I want when Link\n// is active\nconst MockupButton = ({ to, label }) => {\n\n    // the following seems to the be cause of a rendering compoment\n    // with the function of another component error, so I'm disabling\n\n    // const [isCurrent,  setIsCurrent] = useState(false);\n\n    // const toggleCurrent = (match, location) => {\n    //     setIsCurrent(!match ? false : true);\n    //     return isCurrent;\n    // }\n    // { isCurrent ? \"success\" : \"primary\" }\n    // isActive = { toggleCurrent }\n    return (\n        <Link to={to}>\n            <Button color=\"primary\">\n                {label}\n            </Button>\n        </Link>\n    )\n}\n\nexport default MockupButton","import React from 'react';\n\nimport {\n    Button,\n    Nav,\n    NavItem,\n    // NavLink\n    Navbar,\n    // NavbarBrand,\n    NavbarText,\n} from \"reactstrap\";\n\nimport MockupButton from \"./MockupButton\"\n\n\nconst MDBNavBar = ({branding, title, toggler}) => {\n    return (\n        <Navbar color=\"dark\" dark>\n            {/* <NavbarBrand href=\"#\">\n                {branding}\n            </NavbarBrand>\n             */}\n            <Nav tabs>\n                <NavItem>\n                    <MockupButton to=\"/mockup1\" label=\"Navigation/Details 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup2\" label=\"Checklist/Rater Info 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup3\" label=\"Checklist/Rater Info 2\" />\n                </NavItem>\n            </Nav>\n           {!!title &&\n                <NavbarText tag=\"h3\">{title}</NavbarText>\n            }\n            <Button color=\"success\" onClick={toggler}>\n                Scenario Info\n            </Button>\n        </Navbar>\n    )\n}\n\nexport default MDBNavBar;\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nconst MDBModal = (props) => {\n    const {title, show, toggler, children} = props;\n    return (\n        <Modal isOpen={show} toggle={toggler} size=\"xl\" backdrop=\"static\">\n            <ModalHeader toggle={toggler}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\nexport default MDBModal;","\nimport React from \"react\"\n\nexport default function ScenarioInfo({scenario}) {\n    const info = scenario.info;\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <h3>Instructor Information</h3>\n                    <p>{info.instructorInformation}</p>\n                </div>\n                <div className=\"col-6\">\n                    <h3>Patient Information</h3>\n                    <ul>\n                        <li><b>Moulage:</b> {info.patientInformation.moulage}</li>\n                        <li><b>Position:</b> {info.patientInformation.position}</li>\n                        <li><b>Actions:</b> {info.patientInformation.actions}</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <h3>Dispatch Information</h3>\n                    <p>{info.dispatchInfo}</p>\n                </div>\n                <div className=\"col-6\">\n                    <h3>Scene Assessment</h3>\n                    <p>{info.sceneAssessment}</p>\n                </div>\n            </div>\n        </div>\n)\n}","import React from 'react'\nimport {\n    Container,\n    Row,\n    Col\n} from 'reactstrap'\n\nconst MDBContainer = ({lhs, rhs, lhsWidth=6, rhsWidth=6}) => {\n\n    return (\n        <Container fluid={true} className=\"main\">\n            <Row>\n                <Col md={lhsWidth} className=\"col\">\n                    {lhs}\n                </Col>\n                <Col md={rhsWidth} className=\"col\">\n                    {rhs}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MDBContainer","import React from \"react\";\n\n\nimport classnames from \"classnames\"\n\n\nconst CheckBox = (props) => {\n  // need props param to exist in order to access props.children\n  // eslint-disable-next-line no-unused-vars\n  const { scenario, step, clickHandler, inlineChildren = [], config } = props\n\n  return (\n    <>\n      <label\n        className={classnames({\"text-danger\": step.type === 'critical-criteria'})}\n        onClick={() => clickHandler(step.id)}\n      >\n        <span\n          className=\"checkbox-icon material-icons-outlined\"\n        >\n          {config.isChecked(step.id) ? \"check_box\": \"check_box_outline_blank\"}\n        </span>\n        <b>{step.label}</b>\n        {inlineChildren}\n      </label>\n      { !!props.children &&\n        props.children\n      }\n    </>\n  )\n\n}\n\nexport default CheckBox;\n","import React from \"react\";\nimport classnames from \"classnames\";\n\nconst CallOutText = ({ step, config }) => {\n\n  return  (\n    <span className={classnames(\"callout\", {currentCallOut: config.getCurrentCallout() === step.id})}>\n      {step.callout}\n    </span>\n  )\n\n}\nexport default CallOutText;\n\n","import React from \"react\";\n\n// import classnames from \"classnames\"\n\nconst CallOutIcon = ({ step, config }) => {\n\n\n  return (config.isChecked(step.id))\n          ?\n          <span\n              className=\"callout-icon material-icons-outlined\" style={{color:'grey'}}\n            >\n              message\n            </span>\n          :\n            <span\n              className=\"callout-icon material-icons-outlined\"\n            >\n              message\n            </span>\n\n}\nexport default CallOutIcon;\n","import React from \"react\"\n\nimport classnames from \"classnames\"\nconst InterventionButton = ({scenario, step, config}) => {\n\n    return (\n        <>\n        &nbsp;\n        <button\n            className={classnames(\"btn\", \"btn-sm\", (step.intervention === \"na\") ? \"btn-danger\" :\"btn-primary\")}\n            type=\"button\"\n        >\n            {step.intervention}\n        </button>\n        </>\n    )\n}\n\nexport default InterventionButton","import React from \"react\"\n\nconst InterventionForm = ({scenario, step, config}) => {\n\n    const formData = scenario.interventionForms[step.id]\n    if (!config.getDisplayForm(step.id)) {\n        return (\n            <div></div>\n        )\n    } else {\n\n        const interventions = (\n            formData.interventions.map((intv) => (\n                <div key={intv.id}>\n                    <label>\n                        <input type=\"checkbox\" />\n                        {intv.label}\n                    </label>\n                </div>\n            ))\n        )\n        const checklist = (\n            formData.steps.map((cl) => (\n                <div key={cl.id}>\n                    <label>\n                        <input type=\"checkbox\" />\n                        {cl.label}\n                    </label>\n                </div>\n            ))\n        )\n        const crits = (\n            formData.criticalCriteria.map((cc) => (\n                <div key={cc.id}>\n                    <label className=\"text-danger\">\n                        <input type=\"checkbox\" />\n                        {cc.label}\n                    </label>\n                </div>\n            ))\n        )\n        return (\n            <div className=\"intervention-form\">\n                <form>\n                    <h5>Relevant Interventions</h5>\n                    {interventions}\n                    <h5>Checklist</h5>\n                    {checklist}\n                    <h5>Critical Criteria</h5>\n                    {crits}\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-small\"\n                        onClick={() => config.toggleChecked(step.id)}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default InterventionForm","import React from \"react\"\n\nimport CheckBox from \"./CheckBox\"\nimport CallOutText from \"./CallOutText\"\nimport CallOutIcon from \"./CallOutIcon\"\nimport InterventionButton from \"./InterventionButton\"\nimport InterventionForm from \"./InterventionForm\"\n\nconst CheckListItem = ({scenario, step, config}) => {\n\n    switch (step.type) {\n        case 'assessment':\n            const inlines = (\n                <CallOutIcon\n                    scenario={scenario}\n                    step={step}\n                    config={config}\n                />\n            )\n            return (\n                <CheckBox\n                    scenario={scenario}\n                    step={step}\n                    config={config}\n                    clickHandler={config.toggleCallout}\n                    inlineChildren={inlines}\n                >\n                    {config.displayCalloutText &&\n                        <div>\n                            {config.isChecked(step.id) &&\n                                <CallOutText\n                                    scenario={scenario}\n                                    step={step}\n                                    config={config}\n                                />\n                            }\n                        </div>\n                    }\n                </CheckBox>\n            )\n        case 'required-action':\n        case 'critical-criteria':\n        case 'execution-error':\n            // perhaps this should just be the 'default'\n            return (\n                <CheckBox\n                    scenario={scenario}\n                    step={step}\n                    clickHandler={config.toggleChecked}\n                    config={config}\n                />\n            )\n        case 'intervention':\n            const clickHandler = (step.intervention === \"say\")\n                ? config.toggleChecked\n                : config.toggleDisplayForm\n\n            const ib = (\n                <InterventionButton\n                    scenario={scenario}\n                    step={step}\n                    config={config}\n                />\n            )\n\n            return (\n                <CheckBox\n                    scenario={scenario}\n                    step={step}\n                    config={config}\n                    clickHandler={clickHandler}\n                    inlineChildren={ib}\n                >\n                    {config.displayInterventionForms &&\n                        <InterventionForm\n                            scenario={scenario}\n                            step={step}\n                            config={config}\n                        />\n                    }\n                </CheckBox>\n            )\n        default:\n            return <p>{JSON.stringify(step, null, 4)}</p>\n        }\n\n}\n\n\nexport default CheckListItem;","// Implements a bootstrap 3 panel using Bootstrap4/5 card\n// this *should* be a reusable, purely presentational component\n// not making use of any of our app-specific props/state\nimport React from \"react\"\n\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody\n} from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nexport default function Panel(props) {\n    const {centerTitle = true, titleSize = \"h3\"} = props\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle\n                    className={classnames({\"text-center\": centerTitle}, titleSize)}\n                >\n                    {props.title}\n                </CardTitle>\n            </CardHeader>\n            <CardBody>\n                {props.children}\n            </CardBody>\n        </Card>\n    )\n}","import React, {\n    useState\n} from \"react\"\n\n\nimport classnames from \"classnames\"\n\n\nexport default function RevealTableRow({label, values, config}) {\n    const [show, setShow] = useState(false)\n    const toggle = () => setShow(!show)\n\n    return (\n        <tr>\n            { (config.autoRevealRaterInfo)\n            ?\n                <th>{label}</th>\n            :\n                <th onClick={() => toggle()}>{label} </th>\n            }\n            {\n                values.map((value, index) => (\n                    <td key={ index }>\n                        {(config.autoRevealRaterInfo)\n                            ?\n                            <span >{value}</span>\n                            :\n                            <span className={classnames({ hidden: !show })}>\n                                {value}\n                            </span>\n                        }\n                    </td>\n                ))\n            }\n        </tr>\n    )\n\n}","import React from \"react\"\n\nimport {\n    Table\n} from \"reactstrap\"\n\n\nimport Panel from \"./Panel\"\nimport RevealTableRow from \"./RevealTableRow\"\n\nexport default function RevealTable({title, headings=[], rows=[], config}) {\n\n    return (\n        <Panel title={title} titleSize={\"h5\"}>\n            <Table striped={true}>\n                <thead>\n                    <tr>\n                        {\n                            headings.map((heading, index) => (\n                                <th key={index}>{heading}</th>\n                            ))\n                        }\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map((row, index) =>\n                        <RevealTableRow\n                            key={index}\n                            label={row.label}\n                            values={row.value}\n                            config={config}\n                        />\n                    )}\n                </tbody>\n            </Table>\n        </Panel>\n    )\n}","\nimport React,\n{ useState }\nfrom \"react\"\nimport CallOutText from \"./CallOutText\"\n\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane\n } from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nimport RevealTable from \"./RevealTable\"\n\nexport default function RaterInfo({scenario, defaultTab = \"callouts\", config}) {\n    const [activeTab, setActiveTab] = useState(defaultTab)\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    // conditionally compute callouts array only if they are supposed to be\n    // displayed within this pane\n    let callouts = []\n    if (config.displayCalloutText) {\n        // here you'd be passing actual Callout/CalloutText (whatever you call it)\n        // components as the value instead of merely step.callout\n        callouts = scenario.assessmentSteps.map(step => {\n            return {\n                id: step.id,\n                label: step.calloutLabel,\n                value: [\n                    <CallOutText\n                        scenario={scenario}\n                        step={step}\n                        config={config}\n                    />\n                ]\n            }\n        })\n    }\n\n\n    const sample = Object.entries(scenario.SAMPLE).map(rec => {\n        return {label: rec[0], value: [rec[1]]}\n    })\n\n\n    const vitalsHeaders =\n        (config.getVitalsRecomputed())\n        ? [\"Type\", \"Initial Value\", \"Current Value\"]\n        : [\"Type\", \"Current Value\"]\n\n    const vitals = Object.entries(scenario.initialVitalSigns).map(iv => {\n        const value =\n            (config.getVitalsRecomputed())\n            ? [ iv[1], config.getCurrentVital(iv[0]) ]\n            : [ iv[1] ]\n\n        return {\n            label: iv[0],\n            value: value\n        }\n    })\n\n    return (\n        <>\n            <Nav tabs>\n                {config.displayCalloutText &&\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: activeTab === 'callouts' })}\n                            onClick={() => toggle('callouts')}\n                        >\n                            Assessment Findings\n                        </NavLink>\n                    </NavItem>\n                }\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'vitals' })}\n                        onClick={() => toggle('vitals')}\n                    >\n                        Vitals\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'sample' })}\n                        onClick={() => toggle('sample')}\n                    >\n                        SAMPLE\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                {config.displayCalloutText &&\n                    <TabPane tabId=\"callouts\">\n                        <RevealTable\n                            title=\"Assessment Findings\"\n                            headings={[\"Type\", \"Value\"]}\n                            rows={callouts}\n                            config={config}\n                        />\n                    </TabPane>\n                }\n                <TabPane tabId=\"vitals\">\n                    <RevealTable\n                        title=\"Vitals\"\n                        headings={vitalsHeaders}\n                        rows={vitals}\n                        config={config}\n                    />\n                </TabPane>\n                <TabPane tabId=\"sample\">\n                    <RevealTable\n                        title=\"SAMPLE\"\n                        headings={[\"Type\", \"Value\"]}\n                        rows={sample}\n                        config={config}\n                    />\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}","import React from 'react'\n\nimport CheckListItem from \"./CheckListItem\"\nimport RaterInfo from \"./RaterInfo\"\n\nimport Panel from \"./Panel\"\n\nconst MDBDetailsPane = ({scenario, config }) => {\n\n    const raterInfoConfig = Object.assign(config, {displayCalloutText: false})\n    const {label, children} = config.getCurrentNode()\n    if (null === label) {\n        return <div></div>\n    }\n    return (\n        <>\n            <Panel title={`${label} Details`}>\n                <ul>\n                    {children.map((child) =>\n                        <li key={child.id}>\n                            <CheckListItem\n                                scenario={scenario}\n                                step={child}\n                                config={config}\n                            />\n                        </li>\n                    )}\n                </ul>\n            </Panel>\n            <RaterInfo\n                scenario={scenario}\n                defaultTab={\"vitals\"}\n                config={raterInfoConfig}\n            />\n        </>\n    )\n}\n\nexport default MDBDetailsPane;","import React from \"react\"\n\nimport {Button} from \"reactstrap\"\n\n// I guess I don't need these functions anymore, now that they are only\n// evaluated in a single location\nfunction hasChildren(step) {\n    return step.children && step.children.length > 0\n}\nfunction allChildrenAreHeadings(step) {\n    return step.children.every((child) => child.type === 'heading')\n}\n\n\nconst Outline = ({ scenario, steps, depth = 3, first=false, config}) => {\n\n    return (\n        <ul className={first ? \"first\" : \"\"}>\n        {steps.map((step) => (\n            <li key={step.id}>\n            {\n                (hasChildren(step) && allChildrenAreHeadings(step))\n                ?\n                    <>\n                        <div className={`h${depth + 1} text-primary empty-heading`}>\n                            {step.label}\n                        </div>\n                        <Outline\n                            scenario={scenario}\n                            steps={step.children}\n                            depth={depth + 1}\n                            config={config}\n                        />\n                    </>\n                :\n                    <Button\n                        color=\"link\"\n                        onClick={() => config.setCurrentNode(step.id)}>\n                        <span className={`h${depth + 1}`}>\n                            {step.label}\n                        </span>\n                    </Button>\n            }\n            </li>\n\n        ))}\n        </ul>\n    )\n}\n\nexport default Outline;","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport MDBDetailsPane from \"./components/MDBDetailsPane\"\nimport Outline from \"./components/Outline\";\n\nfunction initKeysToFalse(dict) {\n  const newDict = Object.keys(dict).reduce((obj, key) => {\n    obj[key] = false;\n    return obj;\n  }, {})\n  return newDict;\n}\n\nclass Mockup extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      callouts: {},\n      currentVitals: {},\n      vitalsRecomputed: false,\n      currentNode: null,\n      checkListItems: {},\n      criticalCriteria: {},\n      showForm: {}\n    }\n    // bind event handlers and other methods being passed down as props\n    this.setCurrentNode      = this.setCurrentNode.bind(this)\n    this.getCurrentNode      = this.getCurrentNode.bind(this)\n    this.toggleChecked       = this.toggleChecked.bind(this)\n    this.setChecked          = this.setChecked.bind(this)\n    this.isChecked           = this.isChecked.bind(this)\n    this.getCurrentVital     = this.getCurrentVital.bind(this)\n    this.setCurrentVital     = this.setCurrentVital.bind(this)\n    this.recomputeVitals     = this.recomputeVitals.bind(this)\n    this.getVitalsRecomputed = this.getVitalsRecomputed.bind(this)\n    this.toggleCallout       = this.toggleCallout.bind(this)\n    this.getCurrentCallout   = this.getCurrentCallout.bind(this)\n    this.setDisplayForm      = this.setDisplayForm.bind(this)\n    this.toggleDisplayForm   = this.toggleDisplayForm.bind(this)\n    this.getDisplayForm      = this.getDisplayForm.bind(this)\n\n    // total hack for now\n    window.recomputeVitals = this.recomputeVitals\n\n    this.lhsConfig = this.mkConfig(false, false, false, false)\n    this.rhsConfig = this.mkConfig(true, true, true, true)\n  }\n\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  getCurrentNode() {\n    const retVal = {\n      label: null,\n      children: []\n    }\n    const nodeId = this.state.currentNode || null;\n    if (nodeId) {\n      retVal.label = this.props.scenario.nodeLabels[nodeId]\n      retVal.children = this.props.scenario.items[nodeId]\n    }\n    return retVal;\n  }\n\n  isChecked(id) {\n    return this.state.checkListItems[id]\n  }\n\n  setChecked(id, boolVal) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: boolVal }\n    }))\n  }\n\n  toggleChecked(id) {\n    this.setChecked(id, !this.state.checkListItems[id])\n  }\n\n  getCurrentVital(vital) {\n    return this.state.currentVitals[vital]\n  }\n\n  setCurrentVital(vital, value) {\n    this.setState((prevState) => ({\n      currentVitals: { ...prevState.currentVitals, [vital]: value }\n   }))\n  }\n\n  getVitalsRecomputed() {\n    return this.state.vitalsRecomputed\n  }\n\n  recomputeVitals() {\n    let scen = this.props.scenario\n    for (const [vital, obj] of Object.entries(scen.reassessmentVitals)) {\n      this.setCurrentVital(vital, (Math.random() > 0.5) ? obj.goodVitals : obj.badVitals)\n    }\n    this.setState((prevState) => ({\n      vitalsRecomputed: true\n    }));\n  }\n\n  toggleCallout(id) {\n    if (this.isChecked(id)) {\n      this.setState((prevState) => ({ currentCallOut: null }))\n    }\n    else {\n      this.setState((prevState) => ({ currentCallOut: id }))\n    }\n    this.toggleChecked(id)\n  }\n\n  getCurrentCallout() {\n    return this.state.currentCallOut\n  }\n\n  getDisplayForm(stepId) {\n    return Object.keys(this.state.showForm).includes(stepId)\n      ? this.state.showForm[stepId]\n      : false\n  }\n\n  setDisplayForm(stepId, boolVal) {\n    this.setState((prevState) => ({\n      showForm: { ...prevState.showForm, [stepId]: boolVal }\n    }))\n  }\n\n  toggleDisplayForm(stepId) {\n    this.setDisplayForm(stepId, !this.getDisplayForm(stepId))\n  }\n\n  mkConfig(dispCalloutIcons, dispCalloutText, dispForms, autoRevealRaterInfo) {\n    const config = {\n      getCurrentNode: this.getCurrentNode,\n      setCurrentNode: this.setCurrentNode,\n      isChecked: this.isChecked,\n      toggleChecked: this.toggleChecked,\n      setChecked: this.setChecked,\n      getCurrentVital: this.getCurrentVital,\n      getVitalsRecomputed: this.getVitalsRecomputed,\n      toggleCallout: this.toggleCallout,\n      getCurrentCallout: this.getCurrentCallout,\n      setDisplayForm: this.setDisplayForm,\n      toggleDisplayForm: this.toggleDisplayForm,\n      getDisplayForm: this.getDisplayForm,\n      displayCalloutIcons: dispCalloutIcons,\n      displayCalloutText: dispCalloutText,\n      displayInterventionForms: dispForms,\n      autoRevealRaterInfo: autoRevealRaterInfo\n    }\n    if (dispCalloutText !== config.displayCalloutText) {\n      console.log(\"Mockup1::config\", config)\n    }\n    return config\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    this.setState({\n      callouts: {},\n      currentVitals: Object.assign({}, scen.initialVitalSigns),\n      currentNode: null,\n      vitalsRecomputed: false,\n      checkListItems: initKeysToFalse(scen.items),\n      criticalCriteria: crits,\n      showForm: initKeysToFalse(scen.interventionForms)\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = (\n      <Outline\n        heading=\"Navigation\"\n        scenario={scen}\n        steps={scen.steps}\n        first={true}\n        config={this.lhsConfig}\n      />\n    )\n    const rhs = (\n      <MDBDetailsPane\n        scenario={scen}\n        config={this.rhsConfig}\n      />\n    )\n    return (\n      <MDBContainer\n        lhs={lhs}\n        rhs={rhs}\n        lhsWidth={5}\n        rhsWidth={7}\n      />\n    )\n  }\n}\n\nexport default Mockup;\n","import React\n, { useState }\n from \"react\";\n\nimport classnames from \"classnames\";\n\nimport CheckListItem from \"./CheckListItem\"\n\nconst isLeafNode = (step) => {\n  return !step.children.length > 0\n}\n\nexport default function CheckList({ scenario, steps, heading, depth = 3, first = false, config }){\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = () => {\n    console.log(\"toggling\");\n    setCollapsed(!collapsed);\n  }\n  return (\n    <ul className={classnames({first:  first})}>\n      {steps.map((step) => (\n        <li key={`li-${step.id}`}>\n          {isLeafNode(step)\n          ?\n            <CheckListItem\n                scenario={scenario}\n                step={step}\n                config={config}\n            />\n          :\n            <>\n              <p\n                className={`h${depth}`}\n                onClick={() => toggle()}>\n                  {step.label}\n              </p>\n              <CheckList\n                  scenario={scenario}\n                  steps={step.children}\n                  depth={depth + 1}\n                  config={config}\n              />\n            </>\n          }\n        </li>\n      )\n      )}\n    </ul>\n  )\n\n}\n","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport CheckList from \"./components/CheckList\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nfunction initKeysToFalse(dict) {\n  const newDict = Object.keys(dict).reduce((obj, key) => {\n    obj[key] = false;\n    return obj;\n  }, {})\n  return newDict;\n}\n\nclass Mockup extends React.Component {\n  constructor(props) {\n    super(props)\n    this.state = {\n      callouts: {},\n      currentVitals: {},\n      vitalsRecomputed: false,\n      currentNode: null,\n      checkListItems: {},\n      criticalCriteria: {},\n      showForm: {}\n    }\n    // bind event handlers and other methods being passed down as props\n    this.setCurrentNode      = this.setCurrentNode.bind(this)\n    this.getCurrentNode      = this.getCurrentNode.bind(this)\n    this.toggleChecked       = this.toggleChecked.bind(this)\n    this.setChecked          = this.setChecked.bind(this)\n    this.isChecked           = this.isChecked.bind(this)\n    this.getCurrentVital     = this.getCurrentVital.bind(this)\n    this.setCurrentVital     = this.setCurrentVital.bind(this)\n    this.recomputeVitals     = this.recomputeVitals.bind(this)\n    this.getVitalsRecomputed = this.getVitalsRecomputed.bind(this)\n    this.toggleCallout       = this.toggleCallout.bind(this)\n    this.getCurrentCallout   = this.getCurrentCallout.bind(this)\n    this.setDisplayForm      = this.setDisplayForm.bind(this)\n    this.toggleDisplayForm   = this.toggleDisplayForm.bind(this)\n    this.getDisplayForm      = this.getDisplayForm.bind(this)\n\n    // total hack for now\n    window.recomputeVitals = this.recomputeVitals\n\n    this.lhsConfig = this.mkConfig(true, true, true, false)\n    this.rhsConfig = this.mkConfig(false, false, false, false)\n  }\n\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  getCurrentNode() {\n    const retVal = {\n      label: null,\n      children: []\n    }\n    const nodeId = this.state.currentNode || null;\n    if (nodeId) {\n      retVal.label = this.props.scenario.nodeLabels[nodeId]\n      retVal.children = this.props.scenario.items[nodeId]\n    }\n    return retVal;\n  }\n\n  isChecked(id) {\n    return this.state.checkListItems[id]\n  }\n\n  setChecked(id, boolVal) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: boolVal }\n    }))\n  }\n\n  toggleChecked(id) {\n    this.setChecked(id, !this.state.checkListItems[id])\n  }\n\n  getCurrentVital(vital) {\n    return this.state.currentVitals[vital]\n  }\n\n  setCurrentVital(vital, value) {\n    this.setState((prevState) => ({\n      currentVitals: { ...prevState.currentVitals, [vital]: value }\n    }))\n  }\n\n  getVitalsRecomputed() {\n    return this.state.vitalsRecomputed\n  }\n\n  recomputeVitals() {\n    let scen = this.props.scenario\n    for (const [vital, obj] of Object.entries(scen.reassessmentVitals)) {\n      this.setCurrentVital(vital, (Math.random() > 0.5) ? obj.goodVitals : obj.badVitals)\n    }\n    this.setState((prevState) => ({\n      vitalsRecomputed: true\n    }));\n  }\n\n  toggleCallout(id) {\n    if (this.isChecked(id)) {\n      this.setState((prevState) => ({ currentCallOut: null }))\n    }\n    else {\n      this.setState((prevState) => ({ currentCallOut: id }))\n    }\n    this.toggleChecked(id)\n  }\n\n  getCurrentCallout() {\n    return this.state.currentCallOut\n  }\n\n  getDisplayForm(stepId) {\n    return Object.keys(this.state.showForm).includes(stepId)\n      ? this.state.showForm[stepId]\n      : false\n  }\n\n  setDisplayForm(stepId, boolVal) {\n    this.setState((prevState) => ({\n      showForm: { ...prevState.showForm, [stepId]: boolVal }\n    }))\n  }\n\n  toggleDisplayForm(stepId) {\n    this.setDisplayForm(stepId, !this.getDisplayForm(stepId))\n  }\n\n  mkConfig(dispCalloutIcons, dispCalloutText, dispForms, autoRevealRaterInfo) {\n    const config = {\n      getCurrentNode: this.getCurrentNode,\n      setCurrentNode: this.setCurrentNode,\n      isChecked: this.isChecked,\n      toggleChecked: this.toggleChecked,\n      setChecked: this.setChecked,\n      getCurrentVital: this.getCurrentVital,\n      getVitalsRecomputed: this.getVitalsRecomputed,\n      toggleCallout: this.toggleCallout,\n      getCurrentCallout: this.getCurrentCallout,\n      setDisplayForm: this.setDisplayForm,\n      toggleDisplayForm: this.toggleDisplayForm,\n      getDisplayForm: this.getDisplayForm,\n      displayCalloutIcons: dispCalloutIcons,\n      displayCalloutText: dispCalloutText,\n      displayInterventionForms: dispForms,\n      autoRevealRaterInfo: autoRevealRaterInfo\n    }\n    if (dispCalloutText !== config.displayCalloutText) {\n      console.log(\"Mockup2::config\", config)\n    }\n    return config\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    this.setState({\n      callouts: {},\n      currentVitals: Object.assign({}, scen.initialVitalSigns),\n      currentNode: null,\n      vitalsRecomputed: false,\n      checkListItems: initKeysToFalse(scen.items),\n      criticalCriteria: crits,\n      showForm: initKeysToFalse(scen.interventionForms)\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = (\n      <CheckList\n          scenario={scen}\n          steps={scen.steps}\n          heading=\"Checklist\"\n          first={true}\n          config={this.lhsConfig}\n      />\n    )\n    const rhs = (\n      <RaterInfo\n        scenario={scen}\n        defaultTab={this.rhsConfig.dispCalloutText ? \"callouts\" : \"vitals\"}\n        config={this.rhsConfig}\n      />\n    )\n    return (\n      <MDBContainer\n        lhs={lhs}\n        rhs={rhs}\n        lhsWidth={7}\n        rhsWidth={5}\n      />\n    )\n  }\n}\n\nexport default Mockup;\n","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport CheckList from \"./components/CheckList\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nfunction initKeysToFalse(dict) {\n  const newDict = Object.keys(dict).reduce((obj, key) => {\n    obj[key] = false;\n    return obj;\n  }, {})\n  return newDict;\n}\n\nclass Mockup extends React.Component {\n constructor(props) {\n   super(props)\n   this.state = {\n     callouts: {},\n     currentVitals: {},\n     vitalsRecomputed: false,\n     currentNode: null,\n     checkListItems: {},\n     criticalCriteria: {},\n     showForm: {}\n}\n   // bind event handlers and other methods being passed down as props\n   this.setCurrentNode      = this.setCurrentNode.bind(this)\n   this.getCurrentNode      = this.getCurrentNode.bind(this)\n   this.toggleChecked       = this.toggleChecked.bind(this)\n   this.setChecked          = this.setChecked.bind(this)\n   this.isChecked           = this.isChecked.bind(this)\n   this.getCurrentVital     = this.getCurrentVital.bind(this)\n   this.setCurrentVital     = this.setCurrentVital.bind(this)\n   this.recomputeVitals     = this.recomputeVitals.bind(this)\n   this.getVitalsRecomputed = this.getVitalsRecomputed.bind(this)\n   this.toggleCallout       = this.toggleCallout.bind(this)\n   this.getCurrentCallout   = this.getCurrentCallout.bind(this)\n   this.setDisplayForm      = this.setDisplayForm.bind(this)\n   this.toggleDisplayForm   = this.toggleDisplayForm.bind(this)\n   this.getDisplayForm      = this.getDisplayForm.bind(this)\n\n   // total hack for now\n   window.recomputeVitals = this.recomputeVitals\n\n   this.lhsConfig = this.mkConfig(true, false, true, true)\n   this.rhsConfig = this.mkConfig(false, true, false, true)\n  }\n\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  getCurrentNode() {\n    const retVal = {\n      label: null,\n      children: []\n    }\n    const nodeId = this.state.currentNode || null;\n    if (nodeId) {\n      retVal.label = this.props.scenario.nodeLabels[nodeId]\n      retVal.children = this.props.scenario.items[nodeId]\n    }\n    return retVal;\n  }\n\n  isChecked(id) {\n    return this.state.checkListItems[id]\n  }\n\n  setChecked(id, boolVal) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: boolVal }\n    }))\n  }\n\n  toggleChecked(id) {\n    this.setChecked(id, !this.state.checkListItems[id])\n  }\n\n  getCurrentVital(vital) {\n    return this.state.currentVitals[vital]\n  }\n\n  setCurrentVital(vital, value) {\n    this.setState((prevState) => ({\n      currentVitals: { ...prevState.currentVitals, [vital]: value }\n    }))\n  }\n\n  getVitalsRecomputed() {\n    return this.state.vitalsRecomputed\n  }\n\n  recomputeVitals() {\n    let scen = this.props.scenario\n    for (const [vital, obj] of Object.entries(scen.reassessmentVitals)) {\n      this.setCurrentVital(vital, (Math.random() > 0.5) ? obj.goodVitals : obj.badVitals)\n    }\n    this.setState((prevState) => ({\n      vitalsRecomputed: true\n    }));\n  }\n\n  toggleCallout(id) {\n    if (this.isChecked(id)) {\n      this.setState((prevState) => ({ currentCallOut: null }))\n    }\n    else {\n      this.setState((prevState) => ({ currentCallOut: id }))\n    }\n    this.toggleChecked(id)\n  }\n\n  getCurrentCallout() {\n    return this.state.currentCallOut\n  }\n\n  getDisplayForm(stepId) {\n    return Object.keys(this.state.showForm).includes(stepId)\n      ? this.state.showForm[stepId]\n      : false\n  }\n\n  setDisplayForm(stepId, boolVal) {\n    this.setState((prevState) => ({\n      showForm: { ...prevState.showForm, [stepId]: boolVal }\n    }))\n  }\n\n  toggleDisplayForm(stepId) {\n    this.setDisplayForm(stepId, !this.getDisplayForm(stepId))\n  }\n\n  mkConfig(dispCalloutIcons, dispCalloutText, dispForms, autoRevealRaterInfo) {\n    const config = {\n      getCurrentNode: this.getCurrentNode,\n      setCurrentNode: this.setCurrentNode,\n      isChecked: this.isChecked,\n      toggleChecked: this.toggleChecked,\n      setChecked: this.setChecked,\n      getCurrentVital: this.getCurrentVital,\n      getVitalsRecomputed: this.getVitalsRecomputed,\n      toggleCallout: this.toggleCallout,\n      getCurrentCallout: this.getCurrentCallout,\n      setDisplayForm: this.setDisplayForm,\n      toggleDisplayForm: this.toggleDisplayForm,\n      getDisplayForm: this.getDisplayForm,\n      displayCalloutIcons: dispCalloutIcons,\n      displayCalloutText: dispCalloutText,\n      displayInterventionForms: dispForms,\n      autoRevealRaterInfo: autoRevealRaterInfo\n    }\n    if (dispCalloutText !== config.displayCalloutText) {\n      console.log(\"Mockup3:config\", config)\n    }\n    return config\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    this.setState({\n      callouts: {},\n      currentVitals: Object.assign({}, scen.initialVitalSigns),\n      currentNode: null,\n      vitalsRecomputed: false,\n      checkListItems: initKeysToFalse(scen.items),\n      criticalCriteria: crits,\n      showForm: initKeysToFalse(scen.interventionForms)\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = (\n      <CheckList\n            scenario={scen}\n            steps={scen.steps}\n            heading=\"Checklist\"\n            first={true}\n            config={this.lhsConfig}\n          />\n    )\n    const rhs = (\n      <RaterInfo\n          scenario={scen}\n          defaultTab={this.rhsConfig.dispCalloutText ? \"callouts\" : \"vitals\"}\n          config={this.rhsConfig}\n        />\n    )\n    return (\n      <MDBContainer\n        lhs={lhs}\n        rhs={rhs}\n        lhsWidth={7}\n        rhsWidth={5}\n      />\n    )\n  }\n}\n\nexport default Mockup;\n","const scenarioData = {\n  id: \"PHTC M2CA\",\n  scenarioType: \"trauma\",\n  info: {\n    instructorInformation: \"This skill station involves a middle-aged patient who experienced a rollover with a riding lawn mower. The patient requires airway/breathing management, hemorrhage control, immobilization, and rapid transport to a trauma center. Follow the written scenario, and provide information to all team members as the scenario progresses or as the team members ask.\",\n    patientInformation: {\n      moulage: \"Multiple lacerations to upper and lower extremities; partial amputation of right lower extremity with active bleeding; multiple bruises to chest and abdomen; flail segment to right upper chest; pale, cool, and diaphoretic skin\",\n      position: \"Supine\",\n      actions: \"Opens eyes to pain and becomes progressively more unresponsive\"\n    },\n    dispatchInfo: \"You and your partners work for a transporting EMS agency and have been dispatched to a residential housing development for a lawn mower accident. It is 1330 hr on a Saturday afternoon and the temperature is 90°F (32°C). You are 5 minutes away from a level III trauma center and 25 minutes from a level I trauma center.\",\n    sceneAssessment: \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  },\n  assessmentFindings: {\n      \"assess-scene-safety\": \"scene is safe\",\n      \"assess-injury-mechanism\": \"Patient experienced a rollover with a riding lawn mower\",\n      \"assess-num-patients\": \"1 patient\",\n      \"request-addl-help\": \"Additional EMS is on the way.\",\n      \"verbalizes-patient-condition\": \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n      \"determines-loc\": \"Opens eyes to pain and becomes progressively more unresponsive\",\n      \"determines-life-threats\": \"Multiple lacerations to face, scalp, right arm, amputation at the right ankle\",\n      \"assess-airway\": \"Airway is patent\",\n      \"assess-breathing\": \"8 BPM\", // point to vitals?\n      \"assess-ventilation\": \"shallow, irregular\",\n      \"assess-pulse\": \"130; weak radial pulses\", // point to vitals?\n      \"assess-skin\": \"Cyanonic, diaphoretic\",\n      \"assess-bleeding\": \"Major external hemorrhage at lower right leg\",\n      \"assess-mouth-nose-face\": \"Multiple lacerations with minor bleeding\",\n      \"assess-scape-ears\": \"Unremarkable\",\n      \"assess-perrl\": \"Pupils equal, round, and responsive\", // point to vitals?\n      \"assess-trachea\": \"Neck unremarkable\",\n      \"assess-jugular\": \"No JVD\",\n      \"assess-spine\": \"Unremarkable / No step-off\",\n      \"inspects-chest\": \"Multiple lacerations; red marks to right chest\",\n      \"palpate-chest\": \"Flail segment to right upper chest\",\n      \"auscultate-chest\": \"Crepitus on right\",\n      \"assess-abdomen\": \"Soft, nontender\",\n      \"assess-pelvis\": \"Stable\",\n      \"assess-genitalia\": \"Unremarkable\",\n      \"assess-left-leg\": \"Multiple lacerations\",\n      \"assess-right-leg\": \"Amputation of right leg at the ankle\",\n      \"assess-left-arm\": \"Multiple lacerations\",\n      \"assess-right-arm\": \"Multiple lacerations\",\n      \"assess-posterior-thorax\": \"Unremarkable\",\n      \"assess-lumbar-buttocks\": \"Unremarkable\"\n  },\n  initialVitalSigns: {\n    BP: \"96 / palpation\",\n    P: \"130, weak radial pulses\",\n    R: \"38, shallow; LS clear and equal with crepitus on right\",\n    Skin: \"Cyanonic, diaphoretic\",\n    Spo2: \"78 % /RA\",\n    ETCO2: \"64 mm Hg\",\n    GCS: \"8 (E-2, V-2, M-4), PERRLA\",\n    Glucose: \"86 mg/dl(4.8 mmol / l)\",\n    Pain: \"Unable to access\",\n    Temp: \"96.5 F(35.8 C)\"\n  },\n  SAMPLE: {\n    S: \"shortness of breath\",\n    A: \"unknown\",\n    M: \"unknown\",\n    P: \"unknown\",\n    L: \"unknown\",\n    E: \"Riding a lawnmower on an incline and it rolled over the patient\"\n  },\n  reassessmentVitals: {\n    BP: {\n      \"goodVitals\": \"96 / P\",\n      \"badVitals\": \"78 / P\"\n    },\n    P: {\n      \"goodVitals\": \"120, weak\",\n      \"badVitals\": \"130, weak radial pulses\"\n    },\n    R: {\n      \"goodVitals\": \"12, LS clear and equal with crepitus on right\",\n      \"badVitals\": \"38, shallow; LS clear and equal with crepitus on right\"\n    },\n    Skin: {\n      \"goodVitals\": \"Pale, diaphoretic\",\n      \"badVitals\": \"Cyanonic, diaphoretic\"\n    },\n    Spo2: {\n      \"goodVitals\": \"99%, O2 \",\n      \"badVitals\": \"No capture\"\n    },\n    ETCO2: {\n      goodVitals: \"45 mm Hg\",\n      badVitals: \"32 mm Hg\"\n    },\n    GCS: {\n      \"goodVitals\": \"8\",\n      \"badVitals\": \"4\"\n    },\n    Glucose: {\n      \"goodVitals\": \"86 mg/dl(4.8 mmol / l)\",\n      \"badVitals\": \"86 mg/dl(4.8 mmol / l)\"\n    },\n    Pain: {\n      \"goodVitals\": \"Unable to access\",\n      \"badVitals\": \"Unable to access\"\n    },\n    Temp: {\n      \"goodVitals\": \"96.5 F(35.8 C)\",\n      \"badVitals\": \"94.8\"\n    }\n  },\n  interventions: {\n    \"stabilizes-spine\": \"do\", // \"c-spine-interventions\"\n    \"inserts-adjunct\": \"na\",\n    \"manages-airway\": \"do\", // \"airway-interventions\"\n    \"oxygen-therapy\": \"do\", // na?? - no intervention list for it but should be done\n    \"manage-breathing-injury\": \"do\", // ventilation-interventions\n    \"control-bleeding\": \"do\", // \"bleeding-interventions\"\n    \"control-shock\": \"say\", // \"shock-interventions\"\n    \"transport-priority\": \"do\", // \"transport-interventions\"\n  }\n};\n\n\nexport default scenarioData;","import React from \"react\"\n\nimport MDBNavBar from \"./components/MDBNavBar\"\nimport MDBModal from \"./components/MDBModal\"\nimport ScenarioInfo from \"./components/ScenarioInfo\"\n\nimport Mockup1 from \"./Mockup1\"\nimport Mockup2 from \"./Mockup2\"\nimport Mockup3 from \"./Mockup3\"\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nimport scenarioData  from \"./data/scenario\"\nimport traumaScenarioIndexer from \"./data/traumaScenarioIndexer\"\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props)\n        this.state = {\n            showInfo: false\n        }\n        this.toggleShowInfo = this.toggleShowInfo.bind(this)\n        this.scen = traumaScenarioIndexer(scenarioData)\n        console.log(this.scen)\n    }\n\n    toggleShowInfo() {\n        this.setState((prevState) => ({\n            showInfo: !prevState.showInfo\n        }))\n    }\n\n    render() {\n        return (\n            <Router>\n                <MDBNavBar\n                    title={this.scen.id}\n                    toggler={this.toggleShowInfo}\n                />\n\n                <Switch>\n                    <Route path=\"/mockup1\">\n                        <Mockup1 scenario={this.scen} />\n                    </Route>\n                    <Route path=\"/mockup2\">\n                        <Mockup2 scenario={this.scen} />\n                    </Route>\n                    <Route path=\"/mockup3\">\n                        <Mockup3 scenario={this.scen} />\n                    </Route>\n                    <Route path=\"*\">\n                        <h3>Click on one of the mockups listed above</h3>\n                    </Route>\n                </Switch>\n\n                <MDBModal\n                    title=\"Scenario Info\"\n                    show={this.state.showInfo}\n                    toggler={this.toggleShowInfo}\n                >\n                    <ScenarioInfo scenario={this.scen} />\n                </MDBModal>\n\n            </Router>\n        )\n    }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\"\n\n// reactstrap is using some deprecated stuff, which is causing React.StrictMode\n// to output warnings which make the console difficult to read. Disabling for now\n// TODO: re-add this once we're beyond exploratory coding phase\n// <React.StrictMode>\n//     <App scenario={builtScen} />\n// </React.StrictMode>\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}