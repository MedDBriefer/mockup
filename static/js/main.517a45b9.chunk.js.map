{"version":3,"sources":["data/scenario.js","data/trauma2.js","scenario-builder.js","components/MockupButton.js","components/MDBNavBar.js","components/MDBModal.js","components/ScenarioInfo.js","components/MDBContainer.js","components/CallOut.js","components/CheckBox.js","components/DetailsItem.js","components/MDBDetailsPane.js","components/Outline.js","Mockup1.js","components/CheckList.js","components/Accordian.js","components/RevealTableRow.js","components/RevealTable.js","components/RaterInfo.js","Mockup2.js","App.js","index.js"],"names":["data","require","AND","newCallouts","Object","entries","map","key","value","found","callouts","find","co","stepId","calloutText","console","log","process","exit","filter","item","scenario","assign","info","name","dispatchInfo","sceneAssessment","initialVitalSigns","BP","P","R","Skin","Spo2","ETCO2","GCS","Glucose","Pain","Temp","SAMPLE","S","A","M","L","E","reassessmentVitals","goodVitals","badVitals","interventions","module","exports","ASSESS","INTERV","RADIO","CRIT_FAIL","HEADING","outline","id","type","label","children","items","calloutLabel","criticalCriteria","parent","interventionForms","steps","annotateStepsTree","step","MockupButton","to","Button","color","MDBNavBar","branding","title","toggler","Navbar","dark","Nav","tabs","NavItem","NavbarText","tag","onClick","MDBModal","props","show","Modal","isOpen","toggle","backdrop","ModalHeader","className","ModalBody","ScenarioInfo","MDBContainer","lhs","rhs","lhsWidth","rhsWidth","Container","fluid","Row","Col","md","CallOut","text","CheckBox","isChecked","toggleChecked","showCallouts","Label","Input","checked","onChange","callout","DetailsItem","JSON","stringify","MDBDetailsPane","child","Outline","switcher","depth","first","length","Mockup1","React","Component","constructor","super","this","state","vitals","currentNode","checkListItems","setCurrentNode","bind","node","setState","prevState","componentDidMount","scen","crits","forEach","cc","cli","render","heading","CheckList","useState","collapsed","setCollapsed","classnames","Accordian","Card","CardHeader","CardBody","childrenAreHeadings","RevealTableRow","setShow","hidden","RevealTable","rows","CardTitle","Table","striped","row","index","RaterInfo","activeTab","setActiveTab","tab","initVitals","iv","sample","rec","reassessVitals","NavLink","active","TabContent","TabPane","tabId","Mockup2","App","showInfo","setShowInfo","toggleShowInfo","path","builtScen","keys","annotateItems","scenarioBuilder","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.517a45b9.chunk.js","sourcesContent":["const data = require(\"./trauma2.js\");\nconst AND = \"and\";\nconst OR = \"or\";\n// console.log(steps);\n\nconst calloutText = {\n  \"assess-scene-safety\": \"scene is safe\",\n  \"assess-injury-mechanism\": \"Patient experienced a rollover with a riding lawn mower\",\n  \"assess-num-patients\": \"1 patient\",\n  \"request-addl-help\": \"Additional EMS is on the way.\",\n  \"verbalizes-patient-condition\": \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  \"determines-loc\": \"Opens eyes to pain and becomes progressively more unresponsive\",\n  \"determines-life-threats\": \"Multiple lacerations to face, scalp, right arm, amputation at the right ankle\",\n  \"assess-airway\": \"Airway is patent\",\n  \"assess-breathing\": \"8 BPM\", // point to vitals?\n  \"assess-ventilation\": \"shallow, irregular\",\n  \"assess-pulse\": \"130; weak radial pulses\", // point to vitals?\n  \"assess-skin\": \"Cyanonic, diaphoretic\",\n  \"assess-bleeding\": \"Major external hemorrhage at lower right leg\",\n  \"assess-mouth-nose-face\": \"Multiple lacerations with minor bleeding\",\n  \"assess-scape-ears\": \"Unremarkable\",\n  \"assess-perrl\": \"Pupils equal, round, and responsive\", // point to vitals?\n  \"assess-trachea\": \"Neck unremarkable\",\n  \"assess-jugular\": \"No JVD\",\n  \"assess-spine\": \"Unremarkable / No step-off\",\n  \"inspects-chest\": \"Multiple lacerations; red marks to right chest\",\n  \"palpate-chest\": \"Flail segment to right upper chest\",\n  \"auscultate-chest\": \"Crepitus on right\",\n  \"assess-abdomen\": \"Soft, nontender\",\n  \"assess-pelvis\": \"Stable\",\n  \"assess-genitalia\": \"Unremarkable\",\n  \"assess-left-leg\": \"Multiple lacerations\",\n  \"assess-right-leg\": \"Amputation of right leg at the ankle\",\n  \"assess-left-arm\": \"Multiple lacerations\",\n  \"assess-right-arm\": \"Multiple lacerations\",\n  \"assess-posterior-thorax\": \"Unremarkable\",\n  \"assess-lumbar-buttocks\": \"Unremarkable\"\n}\n\n// let traumacallouts = [...data.callouts]\n// console.log(callouts)\n// process.exit(0)\nconst newCallouts = Object.entries(calloutText).map(([key, value]) => {\n  // const [key, value] = pair;\n  // console.log(key, \"=>\", value);\n  let found = data.callouts.find((co) => co.stepId === key);\n  if (found) {\n    found.calloutText = value;\n  } else {\n    console.log(`ERROR: CALLOUT ID NOT FOUND: ${key}`);\n    process.exit(1);\n    // found = {[key]: \"NOT FOUND\"}\n  }\n  return found;\n}).filter(item => !!item);\n\n// console.log(newCallouts);\ndata.callouts = newCallouts;\n// console.log(data.callouts)\n// process.exit(0)\n\nconst scenario = Object.assign({}, data, {\n  info: {\n    name: \"PHTC M2CA\",\n    dispatchInfo: \"You and your partners work for a transporting EMS agency and have been dispatched to a residential housing development for a lawn mower accident. It is 1330 hr on a Saturday afternoon and the temperature is 90°F (32°C). You are 5 minutes away from a level III trauma center and 25 minutes from a level I trauma center.\",\n    sceneAssessment: \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  },\n  initialVitalSigns: {\n    BP: \"96 / palpation\",\n    P: \"130, weak radial pulses\",\n    R: \"38, shallow; LS clear and equal with crepitus on right\",\n    Skin: \"Cyanonic, diaphoretic\",\n    Spo2: \"78 % /RA\",\n    ETCO2: \"64 mm Hg\",\n    GCS: \"8 (E-2, V-2, M-4), PERRLA\",\n    Glucose: \"86 mg/dl(4.8 mmol / l)\",\n    Pain: \"Unable to access\",\n    Temp: \"96.5 F(35.8 C)\"\n  },\n  SAMPLE: {\n    S: \"shortness of breath\",\n    A: \"unknown\",\n    M: \"unknown\",\n    P: \"unknown\",\n    L: \"unknown\",\n    E: \"Riding a lawnmower on an incline and it rolled over the patient\"\n  },\n  reassessmentVitals: {\n    BP: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"96 / P\",\n      \"badVitals\": \"78 / P\"\n    },\n    P: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"120, weak\",\n      \"badVitals\": \"130, weak radial pulses\"\n    },\n    R: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"12, LS clear and equal with crepitus on right\",\n      \"badVitals\": \"38, shallow; LS clear and equal with crepitus on right\"\n    },\n    Skin: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\", \"manage-breathing-injury\"] // Hemorrhage control, IV, intubates, ventilates\n      },\n      \"goodVitals\": \"Pale, diaphoretic\",\n      \"badVitals\": \"Cyanonic, diaphoretic\"\n    },\n    Spo2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"99%, O2 \",\n      \"badVitals\": \"No capture\"\n    },\n    ETCO2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      goodVitals: \"45 mm Hg\",\n      badVitals: \"32 mm Hg\"\n    },\n    GCS: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\" ] // hemorrhage control, IV, intubation\n      },\n      \"goodVitals\": \"8\",\n      \"badVitals\": \"4\"\n    },\n    Glucose: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"86 mg/dl(4.8 mmol / l)\",\n      \"badVitals\": \"86 mg/dl(4.8 mmol / l)\"\n    },\n    Pain: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"Unable to access\",\n      \"badVitals\": \"Unable to access\"\n    },\n    Temp: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [\"shock-intervention-30\"] // covers patient\n      },\n      \"goodVitals\": \"96.5 F(35.8 C)\",\n      \"badVitals\": \"94.8\"\n    }\n  },\n  interventions: {\n    \"stabilizes-spine\": \"do\", // \"c-spine-interventions\"\n    \"manages-airway\": \"do\", // \"airway-interventions\"\n    \"oxygen-therapy\": \"do\", // na?? - no intervention list for it but should be done\n    \"manage-breathing-injury\": \"do\", // ventilation-interventions\n    \"control-bleeding\": \"do\", // \"bleeding-interventions\"\n    \"control-shock\": \"say\", // \"shock-interventions\"\n    \"transport-priority\": \"do\", // \"transport-interventions\"\n  }\n});\n\n\n\nmodule.exports = {scenario};","const ASSESS = \"assessment\";\nconst INTERV = \"intervention\";\nconst CHECK = \"check-box\";\nconst RADIO = \"radio-button\";\nconst CRIT_FAIL = \"critical-criteria\";\nconst HEADING = \"heading\";\n\nconst data = {\n    outline: [\n        { id: \"bsi\", type: HEADING, label: \"BSI\" },\n        { id: \"scene-size-up\", type: HEADING, label: \"Scene Size-Up\" },\n        {\n            id: \"initial-assessment-resuscitation\",\n            type: HEADING,\n            label: \"Primary Assessment/Resuscitation\",\n            children: [\n                { id: 'general-assessment', type: HEADING, label: 'General Assessment' },\n                { id: \"airway\", type: HEADING, label: \"Airway\" },\n                { id: \"breathing\", type: HEADING, label: \"Breathing\" },\n                { id: \"circulation\", type: HEADING, label: \"Circulation\" },\n                { id: \"transport-decision\", type: HEADING, label: \"Transport Decision\" }\n            ]\n        },\n        { id: \"history-taking\", type: HEADING, label: \"History Taking\" },\n        {\n            id: \"detailed-physical-examination\",\n            type: HEADING,\n            label: \"Secondary Assessment\",\n            children: [\n                { id: \"head\", type: HEADING, label: \"Head\" },\n                { id: \"neck\", type: HEADING, label: \"Neck\" },\n                { id: \"chest\", type: HEADING, label: \"Chest\" },\n                { id: \"abdomen-pelvis\", type: HEADING, label: \"Abdomen/pelvis\" },\n                { id: \"lower-extremities\", type: HEADING, label: \"Lower extremities\" },\n                { id: \"upper-extremities\", type: HEADING, label: \"Upper extremities\" },\n                { id: \"posterior-thorax-lumbar-buttocks\", type: HEADING, label: \"Posterior thorax, lumbar, & buttocks\" },\n                { id: \"misc\", type: HEADING, label: \"Misc.\"}\n            ]\n        },\n\n    ],\n    items: {\n        'bsi': [\n            { id: \"apply-ppe\", type: ASSESS, label: \"Takes or verbalizes body substance isolation precautions.\" } // crit criteria 590\n        ],\n        'scene-size-up': [\n            { id: \"assess-scene-safety\",     type: ASSESS, label: \"Determines the scene/situation is safe\" },\n            { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\" },\n            { id: \"assess-num-patients\",     type: ASSESS, label: \"Determines the number of patients\" },\n            { id: \"request-addl-help\",       type: ASSESS, label: \"Requests additional help if necessary\" },\n            { id: \"assess-spinal-stability\", type: ASSESS, label: \"Considers stabilization of spine\" }, // crit criteria 610\n            { id: \"stabilizes-spine\",        type: INTERV, label: \"Stabilizes or directs assistant to stabilize the cervical spine, as indicated\" } // crit criteria 610\n        ],\n        'general-assessment': [\n            { id: \"verbalizes-patient-condition\", type: ASSESS, label: \"Verbalizes general impression of the patient\" },\n            { id: \"determines-loc\",               type: ASSESS, label: \"Determines responsiveness/level of consciousness\" },\n            { id: \"determines-life-threats\",      type: ASSESS, label: \"Determines chief complaint/apparent life-threats\" }\n        ],\n        'airway': [\n            { id: \"assess-airway\",   type: ASSESS, label: \"Opens & assesses airway\" },\n            { id: \"manages-airway\",  type: INTERV, label: \"Inserts adjunct as indicated\" } // action / crit criteria 690\n        ],\n        'breathing': [\n            { id: \"assess-breathing\",        type: ASSESS, label: \"Assess breathing\" },\n            { id: \"assess-ventilation\",      type: ASSESS, label: \"Assess adequate ventilation\" },\n            { id: \"oxygen-therapy\",          type: INTERV, label: \"Initiates appropriate oxygen therapy\" }, // crit criteria 620\n            { id: \"manage-breathing-injury\", type: INTERV, label: \"Manages any injury which may compromise breathing/ventilation\" } // crit criteria 630\n        ],\n        'circulation': [\n            { id: \"assess-pulse\",     type: ASSESS, label: \"Checks pulse\" },\n            { id: \"assess-skin\",      type: ASSESS, label: \"Assess skin [color, temperature, or condition]\" },\n            { id: \"assess-bleeding\",  type: ASSESS, label: \"Assesses for major bleeding\" },\n            { id: \"control-bleeding\", type: INTERV, label: \"Manages major bleeding if present\" },\n            { id: \"control-shock\",    type: INTERV, label: \"Initiates shock management\" } // crit criteria 640\n        ],\n        'transport-decision': [\n            { id: \"transport-priority\", type: ASSESS, label: \"Identifies priority patients/makes transport decision based upon calculated GCS\" } // crit criteria 650\n        ],\n        'history-taking': [\n            { id: \"obtains-vitals\", type: ASSESS, label: \"Obtains, or directs assistant to obtain, baseline vital signs\" }, // point to vitals\n            { id: \"attempt-obtain-sample\", type: ASSESS, label: \"Attempts to obtain SAMPLE history\" } // point to SAMPLE\n        ],\n        'head': [\n            { id: \"assess-mouth-nose-face\", type: ASSESS, label: \"Inspects mouth, nose, & assesses facial area\" },\n            { id: \"assess-scape-ears\",      type: ASSESS, label: \"Inspects & palpates scalp & ears\" },\n            { id: \"assess-perrl\",           type: ASSESS, label: \"Assesses eyes for PERRL\" }\n        ],\n        'neck': [\n            { id: \"assess-trachea\", type: ASSESS, label: \"Checks position of trachea\" },\n            { id: \"assess-jugular\",          type: ASSESS, label: \"Checks jugular veins\" },\n            { id: \"assess-spine\",            type: ASSESS, label: \"Palpates cervical spine\" }\n        ],\n        'chest': [\n            { id: \"inspects-chest\",    type: ASSESS, label: \"Inspects chest\" },\n            { id: \"palpate-chest\",    type: ASSESS, label: \"Palpates chest\" },\n            { id: \"auscultate-chest\", type: ASSESS, label: \"Auscultates chest\" }\n        ],\n        'abdomen-pelvis': [\n            { id: \"assess-abdomen\",   type: ASSESS, label: \"Inspects & palpates abdomen\" },\n            { id: \"assess-pelvis\",    type: ASSESS, label: \"Assesses pelvis\" },\n            { id: \"assess-genitalia\", type: ASSESS, label: \"Verbalizes assessment of genitalia/perineum as needed\" }\n        ],\n        'lower-extremities': [\n            { id: \"assess-left-leg\",  type: ASSESS, label: \"Left Leg: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\" },\n            { id: \"assess-right-leg\", type: ASSESS, label: \"Right Leg: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\" }\n        ],\n        'upper-extremities': [\n            { id: \"assess-left-arm\", type: ASSESS, label: \"Left Arm: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Left Arm\" },\n            { id: \"assess-right-arm\", type: ASSESS, label: \"Right Arm: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Right Arm\" }\n        ],\n        \"posterior-thorax-lumbar-buttocks\": [\n            { id: \"assess-posterior-thorax\", type: ASSESS, label: \"Inspects & palpates posterior thorax\" },\n            { id: \"assess-lumbar-buttocks\",  type: ASSESS, label: \"Inspects & palpates lumbar & buttocks area\" }\n        ],\n        \"misc\": [\n            { id: \"550\", type: ASSESS, label: \"Manages secondary injuries & wounds appropriately\" },\n            { id: \"560\", type: ASSESS, label: \"Performs ongoing assessment\" }\n        ]\n    },\n    callouts: [\n        { stepId: \"assess-scene-safety\",           calloutLabel: \"Scene Safety\" },\n        { stepId: \"assess-injury-mechanism\",       calloutLabel: \"Mechanism of Injury\" },\n        { stepId: \"assess-num-patients\",           calloutLabel: \"Num Patients\" },\n        { stepId: \"request-addl-help\",             calloutLabel: \"Additional Help\" },\n        { stepId: \"verbalizes-patient-condition\",  calloutLabel: \"Condition\" },\n        { stepId: \"determines-loc\",                calloutLabel: \"LOC\" },\n        { stepId: \"determines-life-threats\",       calloutLabel: \"Life Threats\" },\n        { stepId: \"assess-airway\",                 calloutLabel: \"Airway\" },\n        { stepId: \"assess-breathing\",              calloutLabel: \"Breathing\" },\n        { stepId: \"assess-ventilation\",            calloutLabel: \"Ventilations\" },\n        { stepId: \"assess-pulse\",                  calloutLabel: \"Pulse\" },\n        { stepId: \"assess-skin\",                   calloutLabel: \"Skin\" },\n        { stepId: \"assess-bleeding\",               calloutLabel: \"Bleeding\" },\n        { stepId: \"assess-mouth-nose-face\",        calloutLabel: \"Face\" },\n        { stepId: \"assess-scape-ears\",             calloutLabel: \"Ears\" },\n        { stepId: \"assess-perrl\",                  calloutLabel: \"PERRL\" },\n        { stepId: \"assess-trachea\",                calloutLabel: \"Trachea\" },\n        { stepId: \"assess-jugular\",                calloutLabel: \"Jugular\" },\n        { stepId: \"assess-spine\",                  calloutLabel: \"Assess C-Spine\" },\n        { stepId: \"inspects-chest\",                calloutLabel: \"Inspect Chest\" },\n        { stepId: \"palpate-chest\",                 calloutLabel: \"Palpate Chest\" },\n        { stepId: \"auscultate-chest\",              calloutLabel: \"Auscultates Chest\" },\n        { stepId: \"assess-abdomen\",                calloutLabel: \"Abdomen\" },\n        { stepId: \"assess-pelvis\",                 calloutLabel: \"Pelvis\" },\n        { stepId: \"assess-genitalia\",              calloutLabel: \"Genitalia\" },\n        { stepId: \"assess-left-leg\",               calloutLabel: \"Left Leg\" },\n        { stepId: \"assess-right-leg\",              calloutLabel: \"Right Leg\" },\n        { stepId: \"assess-left-arm\",               calloutLabel: \"Left Arm\" },\n        { stepId: \"assess-right-arm\",              calloutLabel: \"Right Arm\" },\n        { stepId: \"assess-posterior-thorax\",       calloutLabel: \"Posterior/Thorax\" },\n        { stepId: \"assess-lumbar-buttocks\",        calloutLabel: \"Lumbar/Buttocks\" }\n    ],\n    criticalCriteria: [\n        { id: \"580\", type: CRIT_FAIL, parent: \"transport-priority\", label: \"Failure to initiate or call for transport of the patient within 10 minutes of time limit\" },\n\n        // true if 'apply-ppe' not checked?\n        { id: \"590\", type: CRIT_FAIL, parent: \"apply-ppe\", label: \"Failure to take or verbalize body substance isolation precautions\" },\n        // true if 'assess-scene-safety' not checked?\n        { id: \"600\", type: CRIT_FAIL, parent: \"assess-scene-safety\", label: \"Failure to determine scene safety\" },\n        // true if 'stabilize-spine' not checked AND indicated?\n        { id: \"610\", type: CRIT_FAIL, parent: \"stabilizes-spine\", label: \"Failure to assess for and provide spinal protection when indicated\" },\n\n        { id: \"620\", type: CRIT_FAIL, parent: \"oxygen-therapy\", label: \"Failure to voice & ultimately provide high concentration of oxygen\" },\n        // true if ANY of the ventiliation\n        { id: \"630\", type: CRIT_FAIL, parent: \"assess-ventilation\", label: \"Failure to assess/provide adequate ventilation\" },\n        { id: \"640\", type: CRIT_FAIL, parent: \"Primary Assessment/Resuscitation\", label: \"Failure to find or appropriately manage problems associated with airway, breathing, hemorrhage or shock [hypoperfusion]\" },\n        // combine below with 580?\n        { id: \"650\", type: CRIT_FAIL, parent: \"transport-priority\", label: \"Failure to differentiate patient's need for immediate transportation versus continued assessment/treatment at the scene\" },\n\n        { id: \"660\", type: CRIT_FAIL, label: \"Does other detailed/focused history or physical exam before assessing/treating threats to airway, breathing, & circulation\" },\n        { id: \"670\", type: CRIT_FAIL, label: \"Exhibits unacceptable affect with patient or other personnel\" },\n        { id: \"680\", type: CRIT_FAIL, label: \"Failure to manage the patient as a competent EMT-P\" },\n        { id: \"690\", type: CRIT_FAIL, label: \"Uses or orders a dangerous or inappropriate intervention\" }\n    ],\n    interventionForms: {\n        // Each selected intervention should, by default, also include an 'other / incorrect intervention' option\n        // Each object title matches checklist item id for easier mapping\n        // TODO: may have to assign type to individual steps to account for medical scenarios (or for a mix or radios/checks)\n        \"stabilizes-spine\": {\n            id: \"c-spine-interventions\",\n            type: CHECK,\n            steps: [\n                { id: \"c-spine-intervention-10\", label: \"Holds manual stabilization\" },\n                { id: \"c-spine-intervention-20\", label: \"Applies cervical collar\" }\n            ],\n            criticalCriteria: []\n        },\n        \"manages-aiway\": {\n            id: \"airway-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"airway-intervention-10\", label: \"Inserts OPA\" },\n                { id: \"airway-intervention-20\", label: \"Inserts NPA\" },\n            ],\n            criticalCriteria: []\n        },\n        \"assess-ventilation\": {\n            id: \"ventilation-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"ventilation-intervention-10\", label: \"Endotracheal intubation\" },\n                { id: \"ventilation-intervention-20\", label: \"Bag-valve mask\" },\n            ],\n            criticalCriteria: []\n        },\n        \"control-bleeding\": {\n            id: \"bleeding-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"bleeding-intervention-10\", label: \"Applies direct pressure\" },\n                { id: \"bleeding-intervention-20\", label: \"Applies tourniquet\" }\n            ],\n            criticalCriteria: [ // Critical criteria should automatically be check boxes\n                { id: \"bleeding-crit-30\", type: CRIT_FAIL, label: \"Did not control hemorrhage using correct procedures in a timely manner\" },\n                { id: \"bleeding-crit-40\", type: CRIT_FAIL, label: \"Did not apply direct pressure to wound before applying tourniquet\" },\n                { id: \"bleeding-crit-50\", type: CRIT_FAIL, label: \"Did not properly position the patient\" },\n                { id: \"bleeding-crit-60\", type: CRIT_FAIL, label: \"Did not take steps to prevent heat loss\" }\n            ]\n        },\n        \"control-shock\": {\n            id: \"shock-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"shock-intervention-10\", label: \"IV fluid therapy--Peripheral IV insertion\" },\n                { id: \"shock-intervention-20\", label: \"IV fluid therapy--IV Push/Bolus\" },\n                { id: \"shock-intervention-30\", label: \"Covers patient\" }\n            ],\n            criticalCriteria: [\n                { id: \"shock-crit-10\", type: CRIT_FAIL, label: \"Fails to establish a patent and properly adjusted IV within 6-minute time limit\" },\n                { id: \"shock-crit-20\", type: CRIT_FAIL, label: \"Fails to establish IV within 3 attempts during 6-minute time limit\" },\n                { id: \"shock-crit-30\", type: CRIT_FAIL, label: \"Contaminates equipment or site without appropriately correcting situation\" },\n                { id: \"shock-crit-40\", type: CRIT_FAIL, label: \"Performs any improper technique resulting in the potential for uncontrolled hemorrhage, catheter shear, or air embolism\" },\n                { id: \"shock-crit-50\", type: CRIT_FAIL, label: \"Fails to dispose/verbalize disposal of blood-contaminated sharps immediately in proper container at point of use\" }\n            ]\n        },\n        \"transport-decision\": {\n            id: \"transport-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"transport-intervention-10\", label: \"Scoop Stretcher\" },\n                { id: \"transport-intervention-20\", label: \"Supine Long Backboard\" },\n            ],\n            criticalCriteria: [\n                { id: \"transport-crit-10\", type: CRIT_FAIL, label: \"Did not immediately direct or take manual immobilization of head\" },\n                { id: \"transport-crit-20\", type: CRIT_FAIL, label: \"Did not properly apply appropriately sized cervical collar before ordering releaseof manual immobilization\" },\n                { id: \"transport-crit-30\", type: CRIT_FAIL, label: \"Released or ordered relase of manual immobilization before it was maintained mechanically\" },\n                { id: \"transport-crit-40\", type: CRIT_FAIL, label: \"Manipulated or moved patient excessively causing potential spinal compromise\" },\n                { id: \"transport-crit-50\", type: CRIT_FAIL, label: \"Head immobilized to the device before device sufficiently secured to torso\" },\n                { id: \"transport-crit-60\", type: CRIT_FAIL, label: \"Patient moves excessively up, down, left, or right on the device\" },\n                { id: \"transport-crit-70\", type: CRIT_FAIL, label: \"Head immobilization allows for excessive movement\" },\n                { id: \"transport-crit-80\", type: CRIT_FAIL, label: \"Upon completion of immobilization, head is not in a neutral, in-line position\" },\n                { id: \"transport-crit-90\", type: CRIT_FAIL, label: \"Did not reassess motor, sensory, and circulatory functions in each extremity after immobilizing patient to the device\" }\n            ]\n        }\n    }\n};\n\nmodule.exports = data;\n// export default data;","// eslint-disable-next-line\nfunction annotateItems(items, callouts) {\n\n  for (const { stepId, calloutLabel, calloutText } of callouts) {\n    // console.log(stepId, calloutLabel, calloutText)\n    for (const key of Object.keys(items)) {\n      let children = items[key].map((item) =>\n        item.id === stepId\n        ?  {...item, calloutLabel: calloutLabel, callout: calloutText}\n        : item\n      )\n      items[key] = children\n    }\n  }\n  return items;\n}\n\nfunction addEmptyChildren(array) {\n  return array.map((item) =>\n    !item.children\n    ? {...item, children: []}\n    : item\n  )\n}\n\n// eslint-disable-next-line\nfunction annotateStepsTree(steps, items) {\n  // console.log(steps);\n  // console.log(items)\n  return steps.map((step) => {\n      if (!step.children) {\n        step.children = (step.id in items) ? addEmptyChildren(items[step.id]) : []\n        // let callout = callouts.find((ca) => ca.step === step.id);\n        // // let callout = callouts[]\n        // if (callout) {\n        //   step.callout = callout.id;\n        // }\n      } else {\n        step.children = annotateStepsTree(step.children, items);\n    }\n    return step;\n  });\n}\n\nexport const scenarioBuilder = (scen) => {\n  let { info, callouts, outline, items, criticalCriteria, initialVitalSigns, SAMPLE, reassessmentVitals} = scen;\n  // console.log(info)\n  // console.log(callouts)\n  // console.log(outline)\n  items = annotateItems(items, callouts)\n  let newScen = {\n    info,\n    callouts,\n    steps: annotateStepsTree(outline, items),\n    items,\n    criticalCriteria,\n    initialVitalSigns,\n    SAMPLE,\n    reassessmentVitals\n  };\n  return newScen;\n};\n","import React from \"react\"\n// , { useState }\n\nimport { Button } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n\n// This component wraps a bootstrap Button with a Link.  We're using NavLink\n// rather than Link, as it has an isActive() method.  I'm using the defalt\n// behavior for this method, but as a side-effect, setting some state within\n// the componenet so I can style the Button with the color I want when Link\n// is active\nconst MockupButton = ({ to, label }) => {\n\n    // the following seems to the be cause of a rendering compoment\n    // with the function of another component error, so I'm disabling\n\n    // const [isCurrent,  setIsCurrent] = useState(false);\n\n    // const toggleCurrent = (match, location) => {\n    //     setIsCurrent(!match ? false : true);\n    //     return isCurrent;\n    // }\n    // { isCurrent ? \"success\" : \"primary\" }\n    // isActive = { toggleCurrent }\n    return (\n        <Link to={to}>\n            <Button color=\"primary\">\n                {label}\n            </Button>\n        </Link>\n    )\n}\n\nexport default MockupButton","import React from 'react';\n\nimport {\n    Button,\n    Nav,\n    NavItem,\n    // NavLink\n    Navbar,\n    // NavbarBrand,\n    NavbarText,\n} from \"reactstrap\";\n\nimport MockupButton from \"./MockupButton\"\n\n\nconst MDBNavBar = ({branding, title, toggler}) => {\n    return (\n        <Navbar color=\"dark\" dark>\n            {/* <NavbarBrand href=\"#\">\n                {branding}\n            </NavbarBrand>\n             */}\n            <Nav tabs>\n                <NavItem>\n                    <MockupButton to=\"/mockup1\" label=\"Mockup 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup2\" label=\"Mockup 2\" />\n                </NavItem>\n            </Nav>\n           {!!title &&\n                <NavbarText tag=\"h3\">{title}</NavbarText>\n            }\n            <Button color=\"success\" onClick={toggler}>\n                Scenario Info\n            </Button>\n        </Navbar>\n    )\n}\n\nexport default MDBNavBar;\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nconst MDBModal = (props) => {\n    const {title, show, toggler, children} = props;\n    return (\n        <Modal isOpen={show} toggle={toggler} backdrop=\"static\">\n            <ModalHeader toggle={toggler}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\nexport default MDBModal;","\nimport React from \"react\"\n\nexport default function ScenarioInfo({scenario}) {\n\n    return (\n        <>\n            <h3>Dispatch Information</h3>\n            <p>{scenario.info.dispatchInfo}</p>\n            <h3>Scene Assessment</h3>\n            <p>{scenario.info.sceneAssessment}</p>\n        </>\n    )\n}","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\n// import CheckListPane from \"./CheckListPane\"\n// import CheckList from \"./CheckList\"\n// import InfoPane from \"./InfoPane\";\n\nconst MDBContainer = ({lhs, rhs, lhsWidth=6, rhsWidth=6}) => {\n\n    return (\n        <Container fluid={true} className=\"main\">\n            <Row>\n                <Col md={lhsWidth} className=\"col\">\n                    {lhs}\n                </Col>\n                <Col md={rhsWidth} className=\"col\">\n                    {rhs}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MDBContainer","import React from \"react\";\n\nconst CallOut = ({ text, show }) => {\n\n  if (show) {\n    return <span className=\"callout\">{text}</span>;\n  } else {\n      return <i className=\"callout-icon fa fa-comment\" />;\n  }\n}\nexport default CallOut;\n","import React from \"react\";\n\nimport CallOut from \"./CallOut\";\n\nimport {Input, Label } from \"reactstrap\"\nconst CheckBox = ({ step, isChecked, toggleChecked , showCallouts=true}) => {\n\n  return (\n      <Label className={step.type === 'critical-criteria' ? \"text-danger\" : \"text-default\"}>\n        <Input\n          type=\"checkbox\"\n          checked={isChecked(step.id)}\n          onChange={() => toggleChecked(step.id)}\n        />\n        <b>{step.label}</b>\n\n        {showCallouts && step.callout &&\n        <CallOut\n          text={step.callout}\n          show={isChecked(step.id)}\n        />\n        }\n      </Label>\n  );\n};\n\nexport default CheckBox;\n","import React from \"react\"\n\nimport CheckBox from \"./CheckBox\"\n\nconst DetailsItem = ({item, isChecked, toggleChecked, showCallouts=true}) => {\n\n    if (\"assessment\" === item.type) {\n        return <CheckBox\n                    step={item}\n                    isChecked={isChecked}\n                    toggleChecked={toggleChecked}\n                    showCallouts={showCallouts}\n                />\n    } else {\n        return <p>{JSON.stringify(item, null, 4)}</p>\n    }\n}\n\nexport default DetailsItem;","import React from 'react'\n\nimport DetailsItem from \"./DetailsItem\"\n\nconst MDBDetailsPane = ({children, isChecked, toggleChecked, showCallouts=true}) => {\n\n    return (\n    <ul>\n        {children.map((child) =>\n            <li key={child.id}>\n                <DetailsItem\n                    item={child}\n                    isChecked={isChecked}\n                    toggleChecked={toggleChecked}\n                    showCallouts={showCallouts}\n                />\n            </li>\n\n        )}\n    </ul>\n    )\n}\n\nexport default MDBDetailsPane;","import React from \"react\"\n\nimport {Button} from \"reactstrap\"\n\nconst Outline = ({switcher, steps, depth=3, first=false}) => {\n\n\n    return (\n        <ul className={first ? \"first\" : \"\"}>\n            {steps.map((step) => (\n            <li key={step.id}>\n\n                <Button\n                    color=\"link\"\n                    onClick={() => switcher(step.id)}>\n                    <span className={`h${depth + 1}`}>\n                        {step.label}\n                    </span>\n                </Button>\n\n                {\n                    step.children && step.children.length > 0 && step.children[0].type === 'heading' &&\n                    <Outline\n                        switcher={switcher}\n                        steps={step.children}\n                        depth={depth+1} />\n                }\n            </li>\n\n            ))}\n\n        </ul>\n    )\n}\n\nexport default Outline;","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport MDBDetailsPane from \"./components/MDBDetailsPane\"\nimport Outline from \"./components/Outline\";\n\n\nclass Mockup1 extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      checkListItems: {},\n      criticalCriteria: {}\n    };\n    // bind event event handlers;\n    this.setCurrentNode          = this.setCurrentNode.bind(this)\n    this.toggleChecked     = this.toggleChecked.bind(this)\n    // need to bind this as well as functional components don't have a 'this'\n    this.isChecked         = this.isChecked.bind(this)\n  }\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  isChecked(id) {\n    return this.state.checkListItems[id]\n  }\n\n  toggleChecked(id) {\n    this.setState((prevState) => ({\n        checkListItems: {...prevState.checkListItems, [id]: !prevState.checkListItems[id]}\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => {crits[cc.id] = false});\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = <Outline\n                  switcher={this.setCurrentNode}\n                  heading=\"Navigation\"\n                  steps={scen.steps}\n                  first={true}\n                />\n    const currentNode = scen.items[this.state.currentNode] || [];\n    const rhs = <MDBDetailsPane\n                  children={currentNode}\n                  isChecked={this.isChecked}\n                  toggleChecked={this.toggleChecked}\n                />\n\n    return <MDBContainer\n            lhs={lhs}\n            rhs={rhs}\n            />;\n  }\n}\n\nexport default Mockup1;\n","import React\n, { useState }\n from \"react\";\n\nimport {\n  // Collapse,\n  // ListGroup,\n  // ListGroupItem\n} from \"reactstrap\"\n\nimport classnames from \"classnames\";\n\nimport CheckBox from \"./CheckBox\";\n\n\nexport default function CheckList({ isChecked, toggleChecked, heading, steps, depth=3, first=false, showCallouts=true}){\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = () => setCollapsed(!collapsed);\n\n  return (\n    <ul className={classnames({first:  first})}>\n      {steps.map((step) => (\n        <li key={`li-${step.id}`}>\n          {!step.children.length > 0\n           ?\n           <CheckBox\n            step={step}\n            isChecked={isChecked}\n            toggleChecked={toggleChecked}\n            showCallouts={showCallouts}\n            />\n          :\n            <>\n            <p className={`h${depth}`} onClick={() => toggle()}>{step.label}</p>\n            <CheckList\n              isChecked={isChecked}\n              toggleChecked={toggleChecked}\n              steps={step.children}\n              depth={depth+1}\n              showCallouts={showCallouts}\n            />\n            </>\n          }\n        </li>\n      )\n      )}\n    </ul>\n  )\n  // console.log(steps)\n  // return (\n  //   <>\n  //   <ListGroup\n  //     className={classnames(\"collapse\", {\"show\": !collapsed})}\n  //     key={`lg-${steps[0].id}`}\n  //   >\n  //     {steps.map((step) => (\n  //       <ListGroupItem key={`lgi-${step.id}`}>\n  //       {\n  //         step.children && step.children.length > 0\n  //         ?\n  //           <>\n  //           <p\n  //             className={`h${depth}`}\n  //             onClick={() => {toggle()}}>\n  //               {step.label}\n  //           </p>\n  //           <CheckList\n  //             key={`cl-${step.id}`}\n  //             stateGetter={stateGetter}\n  //             stateToggler={stateToggler}\n  //             // heading={step.label}\n  //             steps={step.children}\n  //             depth={depth+1}\n  //           />\n  //           </>\n  //       :\n  //         <CheckBox\n  //           key={`cb-${step.id}`}\n  //           step={step}\n  //           stateGetter={stateGetter}\n  //           stateToggler={stateToggler}\n  //         />\n  //       }\n  //       </ListGroupItem>\n  //     ))}\n  //     </ListGroup>\n  //   </>\n  // );\n}\n","import React from \"react\"\n// , {useState}\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    // Collapse\n} from \"reactstrap\"\n\nimport  CheckList  from \"./CheckList\"\n\nconst Accordian = ({isChecked, toggleChecked, steps, showCallouts}) => {\n\n    const childrenAreHeadings = (step) => {\n        return step.children && step.children[0].type === 'heading'\n    }\n    return (\n        <>\n        {steps.map((step) => (\n            <Card key={`card-${step.id}`}>\n                <CardHeader>\n                    {step.label}\n                </CardHeader>\n                <CardBody>\n                    { childrenAreHeadings(step)\n                      ?  <Accordian\n                            isChecked={isChecked}\n                            toggleChecked={toggleChecked}\n                            steps={step.children}\n                            showCallouts={showCallouts}\n                        />\n                      :  <CheckList\n                            isChecked={isChecked}\n                            toggleChecked={toggleChecked}\n                            steps={step.children}\n                            showCallouts={showCallouts}\n                        />\n                    }\n                </CardBody>\n            </Card>\n        ))}\n        </>\n    )\n}\n\nexport default Accordian;","import React,\n{useState}\nfrom \"react\"\n\n// import { Button } from \"reactstrap\"\n// <Button onClick={() => toggle()}>\n//     {label}\n// </Button>\n\nimport classnames from \"classnames\"\n\nexport default function RevealTableRow({label, value}) {\n    const [show, setShow] = useState(false)\n    const toggle = () => setShow(!show)\n\n    return (\n        <tr>\n            <th onClick={() => toggle()}>\n                {label}\n            </th>\n            <td>\n                <p className={classnames({hidden: !show})}>\n                    {value}\n                </p>\n            </td>\n        </tr>\n    )\n\n}","import React from \"react\"\n\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody,\n    Table\n} from \"reactstrap\"\n\n// eslint-disable-next-line no-unused-vars\nimport classnames from \"classnames\"\n\nimport RevealTableRow from \"./RevealTableRow\"\n\nexport default function RevealTable({heading, rows=[]}) {\n    // color = { \"primary\"} inverse = { false}\n    return (\n        <Card >\n            <CardHeader>\n                <CardTitle className=\"h3 text-center\">{heading}</CardTitle>\n            </CardHeader>\n            <CardBody>\n                <Table striped={true} dark={false}>\n                    <thead>\n                        <tr>\n                            <th>Type</th>\n                            <th>Value</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {rows.map((row, index) =>\n                            <RevealTableRow\n                                key={index}\n                                label={row.label}\n                                value={row.value}\n                            />\n                        )}\n                    </tbody>\n                </Table>\n            </CardBody>\n        </Card>\n\n    )\n}","\nimport React,\n{ useState }\nfrom \"react\"\n\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane\n } from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nimport ScenarioInfo from \"./ScenarioInfo\"\n\nimport RevealTable from \"./RevealTable\"\n\nexport default function RaterInfo({scenario, showCallouts=true}) {\n\n    const [activeTab, setActiveTab] = useState('scenInfo')\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    const callouts = scenario.callouts.map(co => {\n        return {\n            id: co.stepId,\n            label: co.calloutLabel,\n            value: co.calloutText\n        }\n    })\n\n    const initVitals = Object.entries(scenario.initialVitalSigns).map(iv => {\n        return {label: iv[0], value: iv[1]}\n    })\n\n    const sample = Object.entries(scenario.SAMPLE).map(rec => {\n        return {label: rec[0], value: rec[1]}\n    })\n\n    // need to put some smarts in here or elsewhere\n    const reassessVitals = Object.entries(scenario.reassessmentVitals).map(rec => {\n        const [key, obj] = rec;\n        return {label: key, value: obj.goodVitals}\n    })\n\n    return (\n        <>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({active: activeTab === 'scenInfo'})}\n                        onClick={() => toggle('scenInfo')}\n                    >\n                        Scenario Info\n                    </NavLink>\n                </NavItem>\n                {showCallouts &&\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'callouts' })}\n                        onClick={() => toggle('callouts')}\n                    >\n                        Callouts\n                    </NavLink>\n                </NavItem>\n                }\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'initVitals' })}\n                        onClick={() => toggle('initVitals')}\n                    >\n                        Initial Vitals\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'sample' })}\n                        onClick={() => toggle('sample')}\n                    >\n                        SAMPLE\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'reassessVitals' })}\n                        onClick={() => toggle('reassessVitals')}\n                    >\n                        Reassessment Vitals\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"scenInfo\">\n                    <ScenarioInfo scenario={scenario} />\n                </TabPane>\n                <TabPane tabId=\"callouts\">\n                    <RevealTable\n                        heading=\"Callouts\"\n                        rows={callouts}\n                    />\n                </TabPane>\n                <TabPane tabId=\"initVitals\">\n                    <RevealTable\n                        heading=\"Initial Vitals\"\n                        rows={initVitals}\n                    />\n                </TabPane>\n                <TabPane tabId=\"sample\">\n                    <RevealTable\n                        heading=\"SAMPLE\"\n                        rows={sample}\n                    />\n                </TabPane>\n                <TabPane tabId=\"reassessVitals\">\n                    <RevealTable\n                        heading=\"Reassessment Vitals\"\n                        rows={reassessVitals}\n                    />\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\n\n// import CheckList from \"./components/CheckList\";\nimport Accordian from \"./components/Accordian\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nclass Mockup2 extends React.Component {\n\n constructor(props) {\n   super(props);\n   this.state = {\n     callouts: {},\n     vitals: {},\n     checkListItems: {},\n     criticalCriteria: {}\n   };\n    // bind event event handlers;\n    this.toggleChecked = this.toggleChecked.bind(this)\n    // state accessor needs to be bound also as 'this' isn't defined in\n    // function components\n    this.isChecked = this.isChecked.bind(this)\n  }\n\n  isChecked(id) {\n    return (id in this.state.checkListItems) ? this.state.checkListItems[id] : false\n  }\n\n  toggleChecked(id) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: !prevState.checkListItems[id] }\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    // const lhs = <CheckList\n    //               isChecked = { this.isChecked }\n    //               toggleChecked = { this.toggleChecked }\n    //               key=\"first\"\n    //               heading=\"Checklist\"\n    //               steps={scen.steps}\n    //               first={true}\n    //               showCallouts={false}\n    //             />\n    const lhs = <Accordian\n                  isChecked={this.isChecked}\n                  toggleChecked={this.toggleChecked}\n                  key=\"first\"\n                  heading=\"Checklist\"\n                  steps={scen.steps}\n                  first={true}\n                  showCallouts={false}\n                />\n    const rhs = <RaterInfo\n                  scenario={scen}\n                  showCallouts={true}\n                />\n\n    return <MDBContainer\n              lhs={lhs}\n              rhs={rhs}\n              lhsWidth={7}\n              rhsWidth={5}\n            />;\n    }\n}\n\nexport default Mockup2;\n","import React, {useState} from \"react\"\n\nimport MDBNavBar from \"./components/MDBNavBar\"\nimport MDBModal from \"./components/MDBModal\"\nimport ScenarioInfo from \"./components/ScenarioInfo\"\n\nimport Mockup1 from \"./Mockup1\"\nimport Mockup2 from \"./Mockup2\"\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nconst App = (props) => {\n    const [showInfo, setShowInfo] = useState(false);\n    const toggleShowInfo = () => {\n        setShowInfo(!showInfo);\n    }\n    const scen = props.scenario;\n\n    return (\n        <Router>\n            <MDBNavBar\n                title={scen.info.name}\n                toggler={toggleShowInfo}\n            />\n            <Switch>\n                <Route path=\"/mockup1\">\n                    <Mockup1 scenario={scen} />\n                </Route>\n                <Route path=\"/mockup2\">\n                    <Mockup2 scenario={scen} />\n                </Route>\n                <Route path=\"*\">\n                    <h3>Click on one of the mockups listed above</h3>\n                </Route>\n            </Switch>\n\n            <MDBModal\n                title=\"Scenario Info\"\n                show={showInfo}\n                toggler={toggleShowInfo}\n            >\n                <ScenarioInfo scenario={scen} />\n            </MDBModal>\n\n        </Router>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { scenarioBuilder } from \"./scenario-builder\";\nimport { scenario } from \"./data/scenario\";\n\nimport App from \"./App\"\n\nconsole.log(scenario)\n\n// hack to load in the scenario data. this would be coming from some database\n// after you logged in and clicked on your assignment, but this works for now\n// scenarioBuilder() reads in scen file which in turn loads in the trauma file and\n// *weaves* them together.  this would be done beforehand by some scenario editing\n// too, but it's instantaneous, so I'm just doing it here for now\nlet builtScen = scenarioBuilder(scenario);\nconsole.log(builtScen)\n// reactstrap is using some deprecated stuff, which is causing React.StrictMode\n// to output warnings which make the console difficult to read. Disabling for now\n// <React.StrictMode>\n//     <App scenario={builtScen} />\n// </React.StrictMode>\n\nReactDOM.render(\n  <App scenario={builtScen} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}