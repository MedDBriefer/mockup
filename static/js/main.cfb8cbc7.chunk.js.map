{"version":3,"sources":["data/traumaScenarioIndexer.js","components/MockupButton.js","components/MDBNavBar.js","components/MDBModal.js","components/ScenarioInfo.js","components/MDBContainer.js","components/CallOut.js","components/CheckBox.js","components/CheckListItem.js","components/Panel.js","components/RevealTableRow.js","components/RevealTable.js","components/RaterInfo.js","components/MDBDetailsPane.js","components/Outline.js","Mockup1.js","components/CheckList.js","components/Accordian.js","Mockup2.js","Mockup3.js","data/scenario.js","App.js","index.js"],"names":["ASSESS","INTERV","REQURED","RADIO","CRIT_FAIL","HEADING","TRAUMA_SCENARIO_STRUCTURE","nodeLabels","tree","id","type","children","leaves","label","callouts","stepId","calloutLabel","criticalCriteria","parent","interventionForms","interventions","addLeavesToBranches","steps","items","map","step","item","deepCopy","object","JSON","parse","stringify","traumaScenarioIndexer","scenario","data","scenarioType","info","initialVitalSigns","SAMPLE","reassessmentVitals","assessmentFindings","Object","entries","key","value","found","find","ca","calloutText","console","log","process","exit","keys","callout","addAssessmentFindingsToLeaves","forEach","element","push","critsWithParents","filter","crit","heading","addCriticalCriteriaToLeaves","intervention","addInterventionCategorizationsToLeaves","addNodeLabelsToBranches","labelsMap","error","MockupButton","to","Button","color","MDBNavBar","branding","title","toggler","Navbar","dark","Nav","tabs","NavItem","NavbarText","tag","onClick","MDBModal","props","show","Modal","isOpen","toggle","size","backdrop","ModalHeader","className","ModalBody","ScenarioInfo","instructorInformation","patientInformation","moulage","position","actions","dispatchInfo","sceneAssessment","MDBContainer","lhs","rhs","lhsWidth","rhsWidth","Container","fluid","Row","Col","md","CallOut","text","CheckBox","isChecked","toggleChecked","showCallouts","showCalloutIcon","Label","Input","checked","onChange","DetailsItem","Panel","centerTitle","titleSize","Card","CardHeader","CardTitle","classnames","CardBody","RevealTableRow","useState","setShow","hidden","RevealTable","rows","Table","striped","row","index","RaterInfo","defaultTab","activeTab","setActiveTab","tab","co","initVitals","iv","sample","rec","reassessVitals","goodVitals","NavLink","active","TabContent","TabPane","tabId","MDBDetailsPane","getCurrentNode","setChecked","child","CheckListItem","Outline","depth","switcher","first","length","hasChildren","every","allChildrenAreHeadings","Mockup1","React","Component","constructor","super","this","state","vitals","currentNode","checkListItems","setCurrentNode","bind","node","setState","retVal","nodeId","boolVal","prevState","componentDidMount","scen","crits","cc","cli","render","showCalloutIcons","CheckList","collapsed","setCollapsed","Accordian","childrenAreHeadings","Mockup2","Mockup3","AND","scenarioData","BP","P","R","Skin","Spo2","ETCO2","GCS","Glucose","Pain","Temp","S","A","M","L","E","badVitals","App","showInfo","setShowInfo","toggleShowInfo","path","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cfb8cbc7.chunk.js","sourcesContent":["// the scenarios entered via forms are merely a set of fields and values and\n// aren't organized as steps.  the purpose of this file is to define the\n// structure of a trauma scenario, as\n// * a tree of steps (and weave the scenario-speific info into them)\n// * various other mappings of things so they can be looked up by id,  more details later\n\n\nconst ASSESS = \"assessment\";\nconst INTERV = \"intervention\";\nconst REQURED = \"required-action\"\n\nconst CHECK = \"check-box\";\nconst RADIO = \"radio-button\";\nconst CRIT_FAIL = \"critical-criteria\";\nconst HEADING = \"heading\";\n\nconst TRAUMA_SCENARIO_STRUCTURE = {\n    nodeLabels: {\n        \"bsi\":                              \"BSI\",\n        \"scene-size-up\":                    \"Scene Size-Up\",\n        \"initial-assessment-resuscitation\": \"Primary Survey/Resuscitation\",\n        \"general-assessment\":               \"General Impression and LOC\",\n        \"airway\":                           \"Airway\",\n        \"breathing\":                        \"Breathing\",\n        \"circulation\":                      \"Circulation\",\n        \"transport-decision\":               \"Transport Decision\",\n        \"history-taking\":                   \"History Taking\",\n        \"detailed-physical-examination\":    \"Secondary Assessment\",\n        \"head\":                             \"Head\",\n        \"neck\":                             \"Neck**\",\n        \"chest\":                            \"Chest**\",\n        \"abdomen-pelvis\":                   \"Abdomen/pelvis**\",\n        \"lower-extremities\":                \"Lower extremities**\",\n        \"upper-extremities\":                \"Upper extremities\",\n        \"posterior-thorax-lumbar-buttocks\": \"Posterior thorax, lumbar, and buttocks**\",\n        \"misc\":                             \"Ongoing management and reassessment\",\n        \"critical-criteria\":                \"Critical Criteria\"\n    },\n    tree: [\n        { id: \"bsi\",           type: HEADING },\n        { id: \"scene-size-up\", type: HEADING },\n        {\n            id: \"initial-assessment-resuscitation\",\n            type: HEADING,\n            children: [\n                { id: 'general-assessment', type: HEADING },\n                { id: \"airway\",             type: HEADING },\n                { id: \"breathing\",          type: HEADING },\n                { id: \"circulation\",        type: HEADING },\n                { id: \"transport-decision\", type: HEADING }\n            ]\n        },\n        { id: \"history-taking\", type: HEADING },\n        {\n            id: \"detailed-physical-examination\",\n            type: HEADING,\n            children: [\n                { id: \"head\",                             type: HEADING },\n                { id: \"neck\",                             type: HEADING },\n                { id: \"chest\",                            type: HEADING },\n                { id: \"abdomen-pelvis\",                   type: HEADING },\n                { id: \"lower-extremities\",                type: HEADING },\n                { id: \"upper-extremities\",                type: HEADING },\n                { id: \"posterior-thorax-lumbar-buttocks\", type: HEADING },\n                { id: \"misc\",                             type: HEADING }\n            ]\n        },\n        { id: \"critical-criteria\", type: HEADING }\n    ],\n    leaves: {\n        'bsi': [\n            { id: \"apply-ppe\",  type: REQURED, label: \"Takes or verbalizes appropriate PPE precautions.\" } // crit criteria 590\n        ],\n        'scene-size-up': [\n            { id: \"assess-scene-safety\",     type: ASSESS, label: \"Determines the scene/situation is safe\" },\n            { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\" },\n            { id: \"assess-num-patients\",     type: ASSESS, label: \"Determines the number of patients\" },\n            { id: \"request-addl-help\",       type: ASSESS, label: \"Requests additional help if necessary\" },\n            { id: \"stabilizes-spine\",        type: INTERV, label: \"Stabilizes or directs assistant to stabilize the cervical spine, as indicated\" } // crit criteria 610\n        ],\n        'general-assessment': [\n            { id: \"verbalizes-patient-condition\", type: ASSESS, label: \"Verbalizes general impression of the patient\" },\n            { id: \"determines-loc\",               type: ASSESS, label: \"Determines responsiveness/level of consciousness\" },\n            { id: \"determines-life-threats\",      type: ASSESS, label: \"Determines chief complaint/apparent life-threats\" }\n        ],\n        'airway': [\n            { id: \"assess-airway\",    type: ASSESS, label: \"Opens and assesses airway\" },\n            { id: \"inserts-adjunct\",  type: INTERV, label: \"Inserts adjunct as indicated\" }, // action / crit criteria 690\n            { id: \"manages-airway\",   type: INTERV, label: \"Appropriately manages any problems associated with airway\"}\n        ],\n        'breathing': [\n            { id: \"assess-breathing\",        type: ASSESS, label: \"Assesses breathing\" },\n            { id: \"assess-ventilation\",      type: ASSESS, label: \"Assures adequate ventilation\" },\n            { id: \"oxygen-therapy\",          type: INTERV, label: \"Initiates appropriate oxygen therapy\" }, // crit criteria 620\n            { id: \"manage-breathing-injury\", type: INTERV, label: \"Manages any injury that may compromise breathing/ventilation\" } // crit criteria 630\n        ],\n        'circulation': [\n            { id: \"assess-pulse\",     type: ASSESS, label: \"Checks pulse\" },\n            { id: \"assess-skin\",      type: ASSESS, label: \"Assesses skin [either skin color, temperature, or condition]\" },\n            { id: \"assess-bleeding\",  type: ASSESS, label: \"Assesses for major bleeding\" },\n            { id: \"control-bleeding\", type: INTERV, label: \"Controls major bleeding if present\" },\n            { id: \"control-shock\",    type: INTERV, label: \"Initiates shock management as indicated\" } // crit criteria 640\n        ],\n        'transport-decision': [\n            { id: \"transport-priority\", type: REQURED, label: \"Identifies priority patients/makes transport decision based upon calculated GCS\" } // crit criteria 650\n        ],\n        'history-taking': [\n            { id: \"obtains-vitals\", type: ASSESS, label: \"Obtains, or directs assistant to obtain, baseline vital signs\" }, // point to vitals\n            { id: \"attempt-obtain-sample\", type: ASSESS, label: \"Attempts to obtain SAMPLE history\" } // point to SAMPLE\n        ],\n        'head': [\n            { id: \"assess-mouth-nose-face\", type: ASSESS, label: \"Inspects mouth**, nose**, and assesses facial area\" },\n            { id: \"assess-scape-ears\",      type: ASSESS, label: \"Inspects and palpates scalp and ears\" },\n            { id: \"assess-perrl\",           type: ASSESS, label: \"Assesses eyes for PERRL**\" }\n        ],\n        'neck': [\n            { id: \"assess-trachea\", type: ASSESS, label: \"Checks position of trachea\" },\n            { id: \"assess-jugular\", type: ASSESS, label: \"Checks jugular veins\" },\n            { id: \"assess-spine\",   type: ASSESS, label: \"Palpates cervical spine\" }\n        ],\n        'chest': [\n            { id: \"inspects-chest\",   type: ASSESS, label: \"Inspects chest\" },\n            { id: \"palpate-chest\",    type: ASSESS, label: \"Palpates chest\" },\n            { id: \"auscultate-chest\", type: ASSESS, label: \"Auscultates chest\" }\n        ],\n        'abdomen-pelvis': [\n            { id: \"assess-abdomen\",   type: ASSESS, label: \"Inspects and palpates abdomen\" },\n            { id: \"assess-pelvis\",    type: ASSESS, label: \"Assesses pelvis\" },\n            { id: \"assess-genitalia\", type: ASSESS, label: \"Verbalizes assessment of genitalia/perineum as needed\" }\n        ],\n        'lower-extremities': [\n            { id: \"assess-right-leg\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right lower extremity\" },\n            { id: \"assess-left-leg\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left lower extremity\" }\n        ],\n        'upper-extremities': [\n            { id: \"assess-right-arm\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right upper extremity\" },\n            { id: \"assess-left-arm\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left upper extremity\" }\n        ],\n        \"posterior-thorax-lumbar-buttocks\": [\n            { id: \"assess-posterior-thorax\", type: ASSESS, label: \"Inspects and palpates posterior thorax\" },\n            { id: \"assess-lumbar-buttocks\",  type: ASSESS, label: \"Inspects and palpates lumbar and buttocks area\" }\n        ],\n        \"misc\": [\n            { id: \"manage-secondary-injuries\", type: REQURED, label: \"Manages secondary injuries and wounds appropriately\" },\n            { id: \"performs-ongoing-assessment\", type: REQURED, label: \"Performs ongoing assessment\" }\n        ],\n        \"critical-criteria\": [] // these need to all be woven in by the scenario builder, as what goes here is depending on some options\n    },\n    callouts: [\n        { stepId: \"assess-scene-safety\",           calloutLabel: \"Scene Safety\" },\n        { stepId: \"assess-injury-mechanism\",       calloutLabel: \"Mechanism of Injury\" },\n        { stepId: \"assess-num-patients\",           calloutLabel: \"Num Patients\" },\n        { stepId: \"request-addl-help\",             calloutLabel: \"Additional Help\" },\n        { stepId: \"verbalizes-patient-condition\",  calloutLabel: \"Condition\" },\n        { stepId: \"determines-loc\",                calloutLabel: \"LOC\" },\n        { stepId: \"determines-life-threats\",       calloutLabel: \"Life Threats\" },\n        { stepId: \"assess-airway\",                 calloutLabel: \"Airway\" },\n        { stepId: \"assess-breathing\",              calloutLabel: \"Breathing\" },\n        { stepId: \"assess-ventilation\",            calloutLabel: \"Ventilations\" },\n        { stepId: \"assess-pulse\",                  calloutLabel: \"Pulse\" },\n        { stepId: \"assess-skin\",                   calloutLabel: \"Skin\" },\n        { stepId: \"assess-bleeding\",               calloutLabel: \"Bleeding\" },\n        { stepId: \"assess-mouth-nose-face\",        calloutLabel: \"Face\" },\n        { stepId: \"assess-scape-ears\",             calloutLabel: \"Ears\" },\n        { stepId: \"assess-perrl\",                  calloutLabel: \"PERRL\" },\n        { stepId: \"assess-trachea\",                calloutLabel: \"Trachea\" },\n        { stepId: \"assess-jugular\",                calloutLabel: \"Jugular\" },\n        { stepId: \"assess-spine\",                  calloutLabel: \"Assess C-Spine\" },\n        { stepId: \"inspects-chest\",                calloutLabel: \"Inspect Chest\" },\n        { stepId: \"palpate-chest\",                 calloutLabel: \"Palpate Chest\" },\n        { stepId: \"auscultate-chest\",              calloutLabel: \"Auscultates Chest\" },\n        { stepId: \"assess-abdomen\",                calloutLabel: \"Abdomen\" },\n        { stepId: \"assess-pelvis\",                 calloutLabel: \"Pelvis\" },\n        { stepId: \"assess-genitalia\",              calloutLabel: \"Genitalia\" },\n        { stepId: \"assess-left-leg\",               calloutLabel: \"Left Leg\" },\n        { stepId: \"assess-right-leg\",              calloutLabel: \"Right Leg\" },\n        { stepId: \"assess-left-arm\",               calloutLabel: \"Left Arm\" },\n        { stepId: \"assess-right-arm\",              calloutLabel: \"Right Arm\" },\n        { stepId: \"assess-posterior-thorax\",       calloutLabel: \"Posterior/Thorax\" },\n        { stepId: \"assess-lumbar-buttocks\",        calloutLabel: \"Lumbar/Buttocks\" }\n    ],\n    criticalCriteria: [\n        // we might be able to auto-check based off of timer expiring\n        { id: \"580\", type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to initiate or call for transport of the patient within 10 minute time limit\" },\n        // true if 'apply-ppe' not checked?\n        { id: \"590\", type: CRIT_FAIL, parent: \"bsi\",                label: \"Failure to take or verbalize appropriate PPE precautions\" },\n        // true if 'assess-scene-safety' not checked?\n        { id: \"600\", type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to determine scene safety\" },\n        // true if 'stabilize-spine' not checked AND indicated?\n        { id: \"610\", type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to assess for and provide spinal protection when indicated\" },\n        { id: \"620\", type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to voice and ultimately provide high concentration of oxygen\" },\n        // true if ANY of the ventiliation\n        { id: \"630\", type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to assess/provide adequate ventilation\" },\n        // not giving this one a parent, as it belongs to a heading whose only other children are other headings, making it\n        // problematic in the navigation/details layout - readdress this if we don't go with that\n        { id: \"640\", type: CRIT_FAIL,                               label: \"Failure to find or appropriately manage problems associated with airway, breathing, hemorrhage or shock [hypoperfusion]\" },\n        // combine below with 580?\n        { id: \"650\", type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to differentiate patient's need for immediate transportation versus continued assessment/treatment at the scene\" },\n        { id: \"660\", type: CRIT_FAIL,                               label: \"Does other detailed history or physical exam before assessing/treating threats to airway, breathing, and circulation\" },\n        { id: \"680\", type: CRIT_FAIL,                               label: \"Failure to manage the patient as a competent EMT\" },\n        { id: \"670\", type: CRIT_FAIL,                               label: \"Exhibits unacceptable affect with patient or other personnel\" },\n        { id: \"690\", type: CRIT_FAIL,                               label: \"Uses or orders a dangerous or inappropriate intervention\" }\n    ],\n    interventionForms: {\n        // Each selected intervention should, by default, also include an 'other / incorrect intervention' option\n        // Each object title matches checklist item id for easier mapping\n        // TODO: may have to assign type to individual steps to account for medical scenarios (or for a mix or radios/checks)\n        \"stabilizes-spine\": {\n            id: \"c-spine-interventions\",\n            type: CHECK,\n            interventions: [\n                { id: \"c-spine-intervention-10\", label: \"Holds manual stabilization\" },\n                { id: \"c-spine-intervention-20\", label: \"Applies cervical collar\" }\n            ],\n            criticalCriteria: []\n        },\n        \"manages-airway\": {\n            id: \"airway-interventions\",\n            type: RADIO,\n            interventions: [\n                { id: \"airway-intervention-10\", label: \"Inserts OPA\" },\n                { id: \"airway-intervention-20\", label: \"Inserts NPA\" },\n            ],\n            criticalCriteria: []\n        },\n        \"assess-ventilation\": {\n            id: \"ventilation-interventions\",\n            type: RADIO,\n            interventions: [\n                { id: \"ventilation-intervention-10\", label: \"Endotracheal intubation\" },\n                { id: \"ventilation-intervention-20\", label: \"Bag-valve mask\" },\n            ],\n            criticalCriteria: []\n        },\n        \"control-bleeding\": {\n            id: \"bleeding-interventions\",\n            type: RADIO,\n            interventions: [\n                { id: \"bleeding-intervention-10\", label: \"Applies direct pressure\" },\n                { id: \"bleeding-intervention-20\", label: \"Applies tourniquet\" }\n            ],\n            criticalCriteria: [ // Critical criteria should automatically be check boxes\n                { id: \"bleeding-crit-30\", type: CRIT_FAIL, label: \"Did not control hemorrhage using correct procedures in a timely manner\" },\n                { id: \"bleeding-crit-40\", type: CRIT_FAIL, label: \"Did not apply direct pressure to wound before applying tourniquet\" },\n                { id: \"bleeding-crit-50\", type: CRIT_FAIL, label: \"Did not properly position the patient\" },\n                { id: \"bleeding-crit-60\", type: CRIT_FAIL, label: \"Did not take steps to prevent heat loss\" }\n            ]\n        },\n        \"control-shock\": {\n            id: \"shock-interventions\",\n            type: RADIO,\n            interventions: [\n                { id: \"shock-intervention-10\", label: \"IV fluid therapy--Peripheral IV insertion\" },\n                { id: \"shock-intervention-20\", label: \"IV fluid therapy--IV Push/Bolus\" },\n                { id: \"shock-intervention-30\", label: \"Covers patient\" }\n            ],\n            criticalCriteria: [\n                { id: \"shock-crit-10\", type: CRIT_FAIL, label: \"Fails to establish a patent and properly adjusted IV within 6-minute time limit\" },\n                { id: \"shock-crit-20\", type: CRIT_FAIL, label: \"Fails to establish IV within 3 attempts during 6-minute time limit\" },\n                { id: \"shock-crit-30\", type: CRIT_FAIL, label: \"Contaminates equipment or site without appropriately correcting situation\" },\n                { id: \"shock-crit-40\", type: CRIT_FAIL, label: \"Performs any improper technique resulting in the potential for uncontrolled hemorrhage, catheter shear, or air embolism\" },\n                { id: \"shock-crit-50\", type: CRIT_FAIL, label: \"Fails to dispose/verbalize disposal of blood-contaminated sharps immediately in proper container at point of use\" }\n            ]\n        },\n        \"transport-priority\": {\n            id: \"transport-interventions\",\n            type: RADIO,\n            interventions: [\n                { id: \"transport-intervention-10\", label: \"Scoop Stretcher\" },\n                { id: \"transport-intervention-20\", label: \"Supine Long Backboard\" },\n            ],\n            criticalCriteria: [\n                { id: \"transport-crit-10\", type: CRIT_FAIL, label: \"Did not immediately direct or take manual immobilization of head\" },\n                { id: \"transport-crit-20\", type: CRIT_FAIL, label: \"Did not properly apply appropriately sized cervical collar before ordering releaseof manual immobilization\" },\n                { id: \"transport-crit-30\", type: CRIT_FAIL, label: \"Released or ordered relase of manual immobilization before it was maintained mechanically\" },\n                { id: \"transport-crit-40\", type: CRIT_FAIL, label: \"Manipulated or moved patient excessively causing potential spinal compromise\" },\n                { id: \"transport-crit-50\", type: CRIT_FAIL, label: \"Head immobilized to the device before device sufficiently secured to torso\" },\n                { id: \"transport-crit-60\", type: CRIT_FAIL, label: \"Patient moves excessively up, down, left, or right on the device\" },\n                { id: \"transport-crit-70\", type: CRIT_FAIL, label: \"Head immobilization allows for excessive movement\" },\n                { id: \"transport-crit-80\", type: CRIT_FAIL, label: \"Upon completion of immobilization, head is not in a neutral, in-line position\" },\n                { id: \"transport-crit-90\", type: CRIT_FAIL, label: \"Did not reassess motor, sensory, and circulatory functions in each extremity after immobilizing patient to the device\" }\n            ]\n        }\n    }\n};\n\n\n\nfunction addAssessmentFindings(assessmentFindings) {\n    return Object.entries(assessmentFindings).map(([key, value]) => {\n        const found = TRAUMA_SCENARIO_STRUCTURE.callouts.find((ca) => ca.stepId === key)\n        if (found) {\n            found.calloutText = value;\n        } else {\n            console.log(\"ERROR key not found!\", key);\n            process.exit(1)\n        }\n        return found;\n    })\n}\n\n\n// eslint-disable-next-line\nfunction addAssessmentFindingsToLeaves(items, callouts) {\n\n    for (const { stepId, calloutLabel, calloutText } of callouts) {\n        // console.log(stepId, calloutLabel, calloutText)\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? { ...item, calloutLabel: calloutLabel, callout: calloutText }\n                    : item\n            )\n            items[key] = children\n        }\n    }\n    return items;\n}\n\nfunction addInterventionCategorizationsToLeaves(items, interventions) {\n    for (const [stepId, value] of Object.entries(interventions)) {\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? {...item, intervention: value}\n                    : item\n            )\n            items[key] = children\n        }\n    }\n}\n\nfunction addCriticalCriteriaToLeaves(items, criticalCriteria) {\n    // add all to the critical criteria step, components can elect not to display\n    // ones with parents\n    criticalCriteria.forEach(element => {\n        items['critical-criteria'].push(element)\n    });\n    // append specific ones to the approriate 'items' based off their parent\n    // (if present)\n\n    const critsWithParents = criticalCriteria.filter((crit) => !!crit.parent)\n    for (const heading of Object.keys(items)) {\n        // console.log(\"\\n\", heading)\n        for (const crit of critsWithParents.filter((crit) => crit.parent === heading)) {\n            items[heading].push(crit)\n        }\n    }\n    // process.exit(0)\n}\n\n\n\nfunction addEmptyChildren(array) {\n    return array.map((item) =>\n        !item.children\n            ? { ...item, children: [] }\n            : item\n    )\n}\n\nfunction addNodeLabelsToBranches(steps, labelsMap) {\n    return steps.map((step) => {\n        let found = (step.id in labelsMap) ? labelsMap[step.id] : false;\n        if (!found) {\n            console.error(`label for ${step.id} not found!`)\n        } else {\n            step.label = found;\n        }\n        if (step.children) {\n            step.children = addNodeLabelsToBranches(step.children, labelsMap)\n        }\n        return step\n    })\n}\n    // eslint-disable-next-line\n function addLeavesToBranches(steps, items) {\n    // console.log(steps);\n    // console.log(items)\n    return steps.map((step) => {\n        if (!step.children) {\n            step.children = (step.id in items) ? addEmptyChildren(items[step.id]) : []\n            // let callout = callouts.find((ca) => ca.step === step.id);\n            // // let callout = callouts[]\n            // if (callout) {\n            //   step.callout = callout.id;\n            // }\n        } else {\n            step.children = addLeavesToBranches(step.children, items);\n        }\n        return step;\n    });\n}\n\nfunction deepCopy(object) {\n    return JSON.parse(JSON.stringify(object))\n}\n\nconst traumaScenarioIndexer = (scenario) => {\n    const data = {\n        id: scenario.id,\n        scenarioType: scenario.scenarioType,\n        info: scenario.info,\n        initialVitalSigns: scenario.initialVitalSigns,\n        SAMPLE: scenario.SAMPLE,\n        reassessmentVitals: scenario.reassessmentVitals,\n        interventionForms: deepCopy(TRAUMA_SCENARIO_STRUCTURE.interventionForms),\n        criticalCriteria: deepCopy(TRAUMA_SCENARIO_STRUCTURE.criticalCriteria),\n        nodeLabels: deepCopy(TRAUMA_SCENARIO_STRUCTURE.nodeLabels),\n        items: deepCopy(TRAUMA_SCENARIO_STRUCTURE.leaves),\n    }\n    // callouts are defined separately, as 1. it's easier to access them from the\n    // right pane this way, and 2. it's easier to modify their labels if they're listed\n    // sequentially, rather than in the tree or leaves structures\n    // also, while we've changed the labels to 'Assessment Findings', I'm keeping things\n    // as callouts now, so we don't have to change all of the props, code, etc\n    data.callouts = addAssessmentFindings(scenario.assessmentFindings)\n    addAssessmentFindingsToLeaves(data.items, data.callouts)\n    addCriticalCriteriaToLeaves(data.items, TRAUMA_SCENARIO_STRUCTURE.criticalCriteria)\n    addInterventionCategorizationsToLeaves(data.items, scenario.interventions)\n    const steps = addNodeLabelsToBranches(TRAUMA_SCENARIO_STRUCTURE.tree, TRAUMA_SCENARIO_STRUCTURE.nodeLabels)\n    data.steps = addLeavesToBranches(steps, data.items)\n\n    return data;\n}\n\n\n// export const scenarioBuilder = (scen) => {\n//     let { info, callouts, outline, items, criticalCriteria, initialVitalSigns, SAMPLE, reassessmentVitals } = scen;\n//     items = annotateItems(items, callouts, criticalCriteria)\n//     let newScen = {\n//         info,\n//         callouts,\n//         steps: annotateStepsTree(outline, items),\n//         items,\n//         criticalCriteria,\n//         initialVitalSigns,\n//         SAMPLE,\n//         reassessmentVitals\n//     };\n//     return newScen;\n// };\n\n// }\n\nexport default traumaScenarioIndexer\n","import React from \"react\"\n// , { useState }\n\nimport { Button } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n\n// This component wraps a bootstrap Button with a Link.  We're using NavLink\n// rather than Link, as it has an isActive() method.  I'm using the defalt\n// behavior for this method, but as a side-effect, setting some state within\n// the componenet so I can style the Button with the color I want when Link\n// is active\nconst MockupButton = ({ to, label }) => {\n\n    // the following seems to the be cause of a rendering compoment\n    // with the function of another component error, so I'm disabling\n\n    // const [isCurrent,  setIsCurrent] = useState(false);\n\n    // const toggleCurrent = (match, location) => {\n    //     setIsCurrent(!match ? false : true);\n    //     return isCurrent;\n    // }\n    // { isCurrent ? \"success\" : \"primary\" }\n    // isActive = { toggleCurrent }\n    return (\n        <Link to={to}>\n            <Button color=\"primary\">\n                {label}\n            </Button>\n        </Link>\n    )\n}\n\nexport default MockupButton","import React from 'react';\n\nimport {\n    Button,\n    Nav,\n    NavItem,\n    // NavLink\n    Navbar,\n    // NavbarBrand,\n    NavbarText,\n} from \"reactstrap\";\n\nimport MockupButton from \"./MockupButton\"\n\n\nconst MDBNavBar = ({branding, title, toggler}) => {\n    return (\n        <Navbar color=\"dark\" dark>\n            {/* <NavbarBrand href=\"#\">\n                {branding}\n            </NavbarBrand>\n             */}\n            <Nav tabs>\n                <NavItem>\n                    <MockupButton to=\"/mockup1\" label=\"Navigation/Details 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup2\" label=\"Checklist/Rater Info 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup3\" label=\"Checklist/Rater Info 2\" />\n                </NavItem>\n            </Nav>\n           {!!title &&\n                <NavbarText tag=\"h3\">{title}</NavbarText>\n            }\n            <Button color=\"success\" onClick={toggler}>\n                Scenario Info\n            </Button>\n        </Navbar>\n    )\n}\n\nexport default MDBNavBar;\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nconst MDBModal = (props) => {\n    const {title, show, toggler, children} = props;\n    return (\n        <Modal isOpen={show} toggle={toggler} size=\"xl\" backdrop=\"static\">\n            <ModalHeader toggle={toggler}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\nexport default MDBModal;","\nimport React from \"react\"\n\nexport default function ScenarioInfo({scenario}) {\n    const info = scenario.info;\n    return (\n        <div className=\"container-fluid\">\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <h3>Instructor Information</h3>\n                    <p>{info.instructorInformation}</p>\n                </div>\n                <div className=\"col-6\">\n                    <h3>Patient Information</h3>\n                    <ul>\n                        <li><b>Moulage:</b> {info.patientInformation.moulage}</li>\n                        <li><b>Position:</b> {info.patientInformation.position}</li>\n                        <li><b>Actions:</b> {info.patientInformation.actions}</li>\n                    </ul>\n                </div>\n            </div>\n            <div className=\"row\">\n                <div className=\"col-6\">\n                    <h3>Dispatch Information</h3>\n                    <p>{info.dispatchInfo}</p>\n                </div>\n                <div className=\"col-6\">\n                    <h3>Scene Assessment</h3>\n                    <p>{info.sceneAssessment}</p>\n                </div>\n            </div>\n        </div>\n)\n}","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\n// import CheckListPane from \"./CheckListPane\"\n// import CheckList from \"./CheckList\"\n// import InfoPane from \"./InfoPane\";\n\nconst MDBContainer = ({lhs, rhs, lhsWidth=6, rhsWidth=6}) => {\n\n    return (\n        <Container fluid={true} className=\"main\">\n            <Row>\n                <Col md={lhsWidth} className=\"col\">\n                    {lhs}\n                </Col>\n                <Col md={rhsWidth} className=\"col\">\n                    {rhs}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MDBContainer","import React from \"react\";\n\nconst CallOut = ({ text, show }) => {\n\n  if (show) {\n    return <span className=\"callout\">{text}</span>;\n  } else {\n      return <i className=\"callout-icon fa fa-comment\" />;\n  }\n}\nexport default CallOut;\n","import React from \"react\";\n\nimport CallOut from \"./CallOut\";\n\nimport {Input, Label } from \"reactstrap\"\nconst CheckBox = ({ step, isChecked, toggleChecked , showCallouts, showCalloutIcon}) => {\n\n  return (\n      <Label className={step.type === 'critical-criteria' ? \"text-danger\" : \"text-default\"}>\n        <Input\n          type=\"checkbox\"\n          checked={isChecked(step.id)}\n          onChange={() => toggleChecked(step.id)}\n        />\n        <b>{step.label}</b>\n\n        {showCallouts && step.callout && !showCalloutIcon &&\n        <CallOut\n          text={step.callout}\n          show={isChecked(step.id)}\n        />\n        }\n\n        {!showCallouts && step.callout && showCalloutIcon &&\n        <CallOut\n          text={step.callout}\n          //show={isChecked(step.id)}\n        />\n        }\n      </Label>\n  );\n};\n\nexport default CheckBox;\n","import React from \"react\"\n\nimport CheckBox from \"./CheckBox\"\n\nconst DetailsItem = ({item, isChecked, toggleChecked, showCallouts=true}) => {\n\n    switch (item.type) {\n        case \"assessment\":\n        case \"critical-criteria\":\n        case \"required-action\":\n            return <CheckBox\n                step={item}\n                isChecked={isChecked}\n                toggleChecked={toggleChecked}\n                showCallouts={showCallouts}\n            />\n        default:\n            return <p>{JSON.stringify(item, null, 4)}</p>\n    }\n}\n\nexport default DetailsItem;","// Implements a bootstrap 3 panel using Bootstrap4/5 card\n// this *should* be a reusable, purely presentational component\n// not making use of any of our app-specific props/state\nimport React from \"react\"\n\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody\n} from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nexport default function Panel(props) {\n    const {centerTitle = true, titleSize = \"h3\"} = props\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle\n                    className={classnames({\"text-center\": centerTitle}, titleSize)}\n                >\n                    {props.title}\n                </CardTitle>\n            </CardHeader>\n            <CardBody>\n                {props.children}\n            </CardBody>\n        </Card>\n    )\n}","import React,\n{useState}\nfrom \"react\"\n\n// import { Button } from \"reactstrap\"\n// <Button onClick={() => toggle()}>\n//     {label}\n// </Button>\n\nimport classnames from \"classnames\"\n\nexport default function RevealTableRow({label, value}) {\n    const [show, setShow] = useState(false)\n    const toggle = () => setShow(!show)\n\n    return (\n        <tr>\n            <th onClick={() => toggle()}>\n                {label}\n            </th>\n            <td>\n                <span className={classnames({hidden: !show})}>\n                    {value}\n                </span>\n            </td>\n        </tr>\n    )\n\n}","import React from \"react\"\n\nimport {\n    // Card,\n    // CardHeader,\n    // CardTitle,\n    // CardBody,\n    Table\n} from \"reactstrap\"\n\n// eslint-disable-next-line no-unused-vars\nimport classnames from \"classnames\"\n\nimport Panel from \"./Panel\"\nimport RevealTableRow from \"./RevealTableRow\"\n\nexport default function RevealTable({heading, rows=[]}) {\n\n    return (\n        <Panel title={heading} titleSize={\"h5\"}>\n            <Table striped={true}>\n                <thead>\n                    <tr>\n                        <th>Type</th>\n                        <th>Value</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {rows.map((row, index) =>\n                        <RevealTableRow\n                            key={index}\n                            label={row.label}\n                            value={row.value}\n                        />\n                    )}\n                </tbody>\n            </Table>\n        </Panel>\n    )\n}","\nimport React,\n{ useState }\nfrom \"react\"\n\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane\n } from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nimport ScenarioInfo from \"./ScenarioInfo\"\n\nimport RevealTable from \"./RevealTable\"\n\nexport default function RaterInfo({scenario, defaultTab = \"callouts\", showCallouts=true}) {\n\n    const [activeTab, setActiveTab] = useState(defaultTab)\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    const callouts = scenario.callouts.map(co => {\n        return {\n            id: co.stepId,\n            label: co.calloutLabel,\n            value: co.calloutText\n        }\n    })\n\n    const initVitals = Object.entries(scenario.initialVitalSigns).map(iv => {\n        return {label: iv[0], value: iv[1]}\n    })\n\n    const sample = Object.entries(scenario.SAMPLE).map(rec => {\n        return {label: rec[0], value: rec[1]}\n    })\n\n    // need to put some smarts in here or elsewhere\n    const reassessVitals = Object.entries(scenario.reassessmentVitals).map(rec => {\n        const [key, obj] = rec;\n        return {label: key, value: obj.goodVitals}\n    })\n\n    return (\n        <>\n            <Nav tabs>\n                {/* <NavItem>\n                    <NavLink\n                        className={classnames({active: activeTab === 'scenInfo'})}\n                        onClick={() => toggle('scenInfo')}\n                    >\n                        Scenario Info\n                    </NavLink>\n                </NavItem> */}\n                {showCallouts &&\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'callouts' })}\n                        onClick={() => toggle('callouts')}\n                    >\n                        Assessment Findings\n                    </NavLink>\n                </NavItem>\n                }\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'initialVitals' })}\n                        onClick={() => toggle('initialVitals')}\n                    >\n                        Initial Vitals\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'sample' })}\n                        onClick={() => toggle('sample')}\n                    >\n                        SAMPLE\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'reassessmentVitals' })}\n                        onClick={() => toggle('reassessmentVitals')}\n                    >\n                        Reassessment Vitals\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"scenInfo\">\n                    <ScenarioInfo scenario={scenario} />\n                </TabPane>\n                <TabPane tabId=\"callouts\">\n                    <RevealTable\n                        heading=\"Assessment Findings\"\n                        rows={callouts}\n                    />\n                </TabPane>\n                <TabPane tabId=\"initialVitals\">\n                    <RevealTable\n                        heading=\"Initial Vitals\"\n                        rows={initVitals}\n                    />\n                </TabPane>\n                <TabPane tabId=\"sample\">\n                    <RevealTable\n                        heading=\"SAMPLE\"\n                        rows={sample}\n                    />\n                </TabPane>\n                <TabPane tabId=\"reassessmentVitals\">\n                    <RevealTable\n                        heading=\"Reassessment Vitals\"\n                        rows={reassessVitals}\n                    />\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}","import React from 'react'\n\nimport CheckListItem from \"./CheckListItem\"\nimport RaterInfo from \"./RaterInfo\"\n\nimport Panel from \"./Panel\"\n\nconst MDBDetailsPane = ({scenario, getCurrentNode, isChecked, toggleChecked, setChecked, showCallouts, showCalloutIcon}) => {\n\n    const {label, children} = getCurrentNode()\n    if (null === label) {\n        return <div></div>\n    }\n    return (\n        <>\n        <Panel title={`${label} Details`}>\n            <ul>\n                {children.map((child) =>\n                    <li key={child.id}>\n                        <CheckListItem\n                            scenario={scenario}\n                            item={child}\n                            isChecked={isChecked}\n                            toggleChecked={toggleChecked}\n                            setChecked={setChecked}\n                            showCallouts={showCallouts}\n                            showCalloutIcon={showCalloutIcon}\n                        />\n                    </li>\n                )}\n            </ul>\n        </Panel>\n        <RaterInfo\n            scenario={scenario}\n            defaultTab={\"initialVitals\"}\n            showCallouts={false}\n            showCalloutIcon={false}\n        />\n        </>\n    )\n}\n\nexport default MDBDetailsPane;","import React from \"react\"\n\nimport {Button} from \"reactstrap\"\n\n// I guess I don't need these functions anymore, now that they are only\n// evaluated in a single location\nfunction hasChildren(step) {\n    return step.children && step.children.length > 0\n}\nfunction allChildrenAreHeadings(step) {\n    return step.children.every((child) => child.type === 'heading')\n}\n\n\nconst Outline = ({ scenario, steps, depth = 3, switcher, first=false}) => {\n\n    return (\n        <ul className={first ? \"first\" : \"\"}>\n        {steps.map((step) => (\n            <li key={step.id}>\n            {\n                (hasChildren(step) && allChildrenAreHeadings(step))\n                ?\n                    <>\n                        <div className={`h${depth + 1} text-primary empty-heading`}>\n                            {step.label}\n                        </div>\n                        <Outline\n                            scenario={scenario}\n                            steps={step.children}\n                            depth={depth + 1}\n                            switcher={switcher}\n                        />\n                    </>\n                :\n                    <Button\n                        color=\"link\"\n                        onClick={() => switcher(step.id)}>\n                        <span className={`h${depth + 1}`}>\n                            {step.label}\n                        </span>\n                    </Button>\n            }\n            </li>\n\n        ))}\n        </ul>\n    )\n}\n\nexport default Outline;","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport MDBDetailsPane from \"./components/MDBDetailsPane\"\nimport Outline from \"./components/Outline\";\n\n\nclass Mockup1 extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      checkListItems: {},\n      criticalCriteria: {}\n    };\n    // bind event event handlers;\n    this.setCurrentNode    = this.setCurrentNode.bind(this)\n    this.toggleChecked     = this.toggleChecked.bind(this)\n    this.setChecked        = this.setChecked.bind(this)\n    // need to bind these as well as functional components don't have a 'this'\n    this.isChecked         = this.isChecked.bind(this)\n    this.getCurrentNode    = this.getCurrentNode.bind(this)\n  }\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  getCurrentNode() {\n    const retVal = {\n      label: null,\n      children: []\n    }\n    const nodeId = this.state.currentNode || null;\n    if (nodeId) {\n      retVal.label = this.props.scenario.nodeLabels[nodeId]\n      retVal.children = this.props.scenario.items[nodeId]\n    }\n    return retVal;\n  }\n\n  isChecked(id) {\n    return this.state.checkListItems[id]\n  }\n\n  setChecked(id, boolVal) {\n    this.setState((prevState) => ({\n      checkListItems: {...prevState.children, [id]: boolVal}\n    }))\n  }\n\n  toggleChecked(id) {\n    this.setState((prevState) => ({\n        checkListItems: {...prevState.checkListItems, [id]: !prevState.checkListItems[id]}\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => {crits[cc.id] = false});\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = <Outline\n                  heading=\"Navigation\"\n                  scenario={scen}\n                  steps={scen.steps}\n                  switcher={this.setCurrentNode}\n                  first={true}\n                />\n    const rhs = <MDBDetailsPane\n                  scenario={scen}\n                  getCurrentNode={this.getCurrentNode}\n                  isChecked={this.isChecked}\n                  toggleChecked={this.toggleChecked}\n                  setChecked={this.setChecked}\n                  showCallouts={true}\n                  showCalloutIcons={true}\n                />\n\n    return <MDBContainer\n              lhs={lhs}\n              rhs={rhs}\n              lhsWidth={5}\n              rhsWidth={7}\n           />;\n  }\n}\n\nexport default Mockup1;\n","import React\n, { useState }\n from \"react\";\n\nimport {\n  // Collapse,\n  // ListGroup,\n  // ListGroupItem\n} from \"reactstrap\"\n\nimport classnames from \"classnames\";\n\nimport CheckBox from \"./CheckBox\";\n\n\nexport default function CheckList({ isChecked, toggleChecked, heading, steps, depth=3, first=false, showCallouts, showCalloutIcon}){\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = () => setCollapsed(!collapsed);\n\n  return (\n    <ul className={classnames({first:  first})}>\n      {steps.map((step) => (\n        <li key={`li-${step.id}`}>\n          {!step.children.length > 0\n           ?\n           <CheckBox\n            step={step}\n            isChecked={isChecked}\n            toggleChecked={toggleChecked}\n            showCallouts={showCallouts}\n            showCalloutIcon={showCalloutIcon}\n            />\n          :\n            <>\n            <p className={`h${depth}`} onClick={() => toggle()}>{step.label}</p>\n            <CheckList\n              isChecked={isChecked}\n              toggleChecked={toggleChecked}\n              steps={step.children}\n              depth={depth+1}\n              showCallouts={showCallouts}\n              showCalloutIcon={showCalloutIcon}\n            />\n            </>\n          }\n        </li>\n      )\n      )}\n    </ul>\n  )\n  // console.log(steps)\n  // return (\n  //   <>\n  //   <ListGroup\n  //     className={classnames(\"collapse\", {\"show\": !collapsed})}\n  //     key={`lg-${steps[0].id}`}\n  //   >\n  //     {steps.map((step) => (\n  //       <ListGroupItem key={`lgi-${step.id}`}>\n  //       {\n  //         step.children && step.children.length > 0\n  //         ?\n  //           <>\n  //           <p\n  //             className={`h${depth}`}\n  //             onClick={() => {toggle()}}>\n  //               {step.label}\n  //           </p>\n  //           <CheckList\n  //             key={`cl-${step.id}`}\n  //             stateGetter={stateGetter}\n  //             stateToggler={stateToggler}\n  //             // heading={step.label}\n  //             steps={step.children}\n  //             depth={depth+1}\n  //           />\n  //           </>\n  //       :\n  //         <CheckBox\n  //           key={`cb-${step.id}`}\n  //           step={step}\n  //           stateGetter={stateGetter}\n  //           stateToggler={stateToggler}\n  //         />\n  //       }\n  //       </ListGroupItem>\n  //     ))}\n  //     </ListGroup>\n  //   </>\n  // );\n}\n","import React from \"react\"\n// , {useState}\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    // Collapse\n} from \"reactstrap\"\n\nimport  CheckList  from \"./CheckList\"\n\nconst Accordian = ({isChecked, toggleChecked, steps, showCallouts, showCalloutIcon}) => {\n\n    const childrenAreHeadings = (step) => {\n        return step.children && step.children[0].type === 'heading'\n    }\n    return (\n        <>\n        {steps.map((step) => (\n            <Card key={`card-${step.id}`}>\n                <CardHeader>\n                    {step.label}\n                </CardHeader>\n                <CardBody>\n                    { childrenAreHeadings(step)\n                      ?  <Accordian\n                            isChecked={isChecked}\n                            toggleChecked={toggleChecked}\n                            steps={step.children}\n                            showCallouts={showCallouts}\n                            showCalloutIcon={showCalloutIcon}\n                        />\n                      :  <CheckList\n                            isChecked={isChecked}\n                            toggleChecked={toggleChecked}\n                            steps={step.children}\n                            showCallouts={showCallouts}\n                            showCalloutIcon={showCalloutIcon}\n                        />\n                    }\n                </CardBody>\n            </Card>\n        ))}\n        </>\n    )\n}\n\nexport default Accordian;","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\n\n// import CheckList from \"./components/CheckList\";\nimport Accordian from \"./components/Accordian\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nclass Mockup2 extends React.Component {\n\n constructor(props) {\n   super(props);\n   this.state = {\n     callouts: {},\n     vitals: {},\n     checkListItems: {},\n     criticalCriteria: {}\n   };\n    // bind event event handlers;\n    this.toggleChecked = this.toggleChecked.bind(this)\n    // state accessor needs to be bound also as 'this' isn't defined in\n    // function components\n    this.isChecked = this.isChecked.bind(this)\n  }\n\n  isChecked(id) {\n    return (id in this.state.checkListItems) ? this.state.checkListItems[id] : false\n  }\n\n  toggleChecked(id) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: !prevState.checkListItems[id] }\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    // const lhs = <CheckList\n    //               isChecked = { this.isChecked }\n    //               toggleChecked = { this.toggleChecked }\n    //               key=\"first\"\n    //               heading=\"Checklist\"\n    //               steps={scen.steps}\n    //               first={true}\n    //               showCallouts={false}\n    //             />\n    const lhs = <Accordian\n                  isChecked={this.isChecked}\n                  toggleChecked={this.toggleChecked}\n                  key=\"first\"\n                  heading=\"Checklist\"\n                  steps={scen.steps}\n                  first={true}\n                  showCallouts={false}\n                  showCalloutIcon={true}\n                />\n    const rhs = <RaterInfo\n                  scenario={scen}\n                  showCallouts={true}\n                  showCalloutIcon={true}\n                />\n\n    return <MDBContainer\n              lhs={lhs}\n              rhs={rhs}\n              lhsWidth={7}\n              rhsWidth={5}\n            />;\n    }\n}\n\nexport default Mockup2;\n","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\n\n// import CheckList from \"./components/CheckList\";\nimport Accordian from \"./components/Accordian\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nclass Mockup3 extends React.Component {\n\n constructor(props) {\n   super(props);\n   this.state = {\n     callouts: {},\n     vitals: {},\n     checkListItems: {},\n     criticalCriteria: {}\n   };\n    // bind event event handlers;\n    this.toggleChecked = this.toggleChecked.bind(this)\n    // state accessor needs to be bound also as 'this' isn't defined in\n    // function components\n    this.isChecked = this.isChecked.bind(this)\n  }\n\n  isChecked(id) {\n    return (id in this.state.checkListItems) ? this.state.checkListItems[id] : false\n  }\n\n  toggleChecked(id) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [id]: !prevState.checkListItems[id] }\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    // const lhs = <CheckList\n    //               isChecked = { this.isChecked }\n    //               toggleChecked = { this.toggleChecked }\n    //               key=\"first\"\n    //               heading=\"Checklist\"\n    //               steps={scen.steps}\n    //               first={true}\n    //               showCallouts={false}\n    //             />\n    const lhs = <Accordian\n                  isChecked={this.isChecked}\n                  toggleChecked={this.toggleChecked}\n                  key=\"first\"\n                  heading=\"Checklist\"\n                  steps={scen.steps}\n                  first={true}\n                  showCallouts={false}\n                  showCalloutIcon={true}\n                />\n    const rhs = <RaterInfo\n                  scenario={scen}\n                  showCallouts={true}\n                  showCalloutIcon={true}\n                />\n\n    return <MDBContainer\n              lhs={lhs}\n              rhs={rhs}\n              lhsWidth={7}\n              rhsWidth={5}\n            />;\n    }\n}\n\nexport default Mockup3;\n","const AND = \"and\";\nconst OR = \"or\";\n\nconst scenarioData = {\n  id: \"PHTC M2CA\",\n  scenarioType: \"trauma\",\n  info: {\n    instructorInformation: \"This skill station involves a middle-aged patient who experienced a rollover with a riding lawn mower. The patient requires airway/breathing management, hemorrhage control, immobilization, and rapid transport to a trauma center. Follow the written scenario, and provide information to all team members as the scenario progresses or as the team members ask.\",\n    patientInformation: {\n      moulage: \"Multiple lacerations to upper and lower extremities; partial amputation of right lower extremity with active bleeding; multiple bruises to chest and abdomen; flail segment to right upper chest; pale, cool, and diaphoretic skin\",\n      position: \"Supine\",\n      actions: \"Opens eyes to pain and becomes progressively more unresponsive\"\n    },\n    dispatchInfo: \"You and your partners work for a transporting EMS agency and have been dispatched to a residential housing development for a lawn mower accident. It is 1330 hr on a Saturday afternoon and the temperature is 90°F (32°C). You are 5 minutes away from a level III trauma center and 25 minutes from a level I trauma center.\",\n    sceneAssessment: \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  },\n  assessmentFindings: {\n      \"assess-scene-safety\": \"scene is safe\",\n      \"assess-injury-mechanism\": \"Patient experienced a rollover with a riding lawn mower\",\n      \"assess-num-patients\": \"1 patient\",\n      \"request-addl-help\": \"Additional EMS is on the way.\",\n      \"verbalizes-patient-condition\": \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n      \"determines-loc\": \"Opens eyes to pain and becomes progressively more unresponsive\",\n      \"determines-life-threats\": \"Multiple lacerations to face, scalp, right arm, amputation at the right ankle\",\n      \"assess-airway\": \"Airway is patent\",\n      \"assess-breathing\": \"8 BPM\", // point to vitals?\n      \"assess-ventilation\": \"shallow, irregular\",\n      \"assess-pulse\": \"130; weak radial pulses\", // point to vitals?\n      \"assess-skin\": \"Cyanonic, diaphoretic\",\n      \"assess-bleeding\": \"Major external hemorrhage at lower right leg\",\n      \"assess-mouth-nose-face\": \"Multiple lacerations with minor bleeding\",\n      \"assess-scape-ears\": \"Unremarkable\",\n      \"assess-perrl\": \"Pupils equal, round, and responsive\", // point to vitals?\n      \"assess-trachea\": \"Neck unremarkable\",\n      \"assess-jugular\": \"No JVD\",\n      \"assess-spine\": \"Unremarkable / No step-off\",\n      \"inspects-chest\": \"Multiple lacerations; red marks to right chest\",\n      \"palpate-chest\": \"Flail segment to right upper chest\",\n      \"auscultate-chest\": \"Crepitus on right\",\n      \"assess-abdomen\": \"Soft, nontender\",\n      \"assess-pelvis\": \"Stable\",\n      \"assess-genitalia\": \"Unremarkable\",\n      \"assess-left-leg\": \"Multiple lacerations\",\n      \"assess-right-leg\": \"Amputation of right leg at the ankle\",\n      \"assess-left-arm\": \"Multiple lacerations\",\n      \"assess-right-arm\": \"Multiple lacerations\",\n      \"assess-posterior-thorax\": \"Unremarkable\",\n      \"assess-lumbar-buttocks\": \"Unremarkable\"\n  },\n  initialVitalSigns: {\n    BP: \"96 / palpation\",\n    P: \"130, weak radial pulses\",\n    R: \"38, shallow; LS clear and equal with crepitus on right\",\n    Skin: \"Cyanonic, diaphoretic\",\n    Spo2: \"78 % /RA\",\n    ETCO2: \"64 mm Hg\",\n    GCS: \"8 (E-2, V-2, M-4), PERRLA\",\n    Glucose: \"86 mg/dl(4.8 mmol / l)\",\n    Pain: \"Unable to access\",\n    Temp: \"96.5 F(35.8 C)\"\n  },\n  SAMPLE: {\n    S: \"shortness of breath\",\n    A: \"unknown\",\n    M: \"unknown\",\n    P: \"unknown\",\n    L: \"unknown\",\n    E: \"Riding a lawnmower on an incline and it rolled over the patient\"\n  },\n  reassessmentVitals: {\n    BP: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"96 / P\",\n      \"badVitals\": \"78 / P\"\n    },\n    P: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"120, weak\",\n      \"badVitals\": \"130, weak radial pulses\"\n    },\n    R: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"12, LS clear and equal with crepitus on right\",\n      \"badVitals\": \"38, shallow; LS clear and equal with crepitus on right\"\n    },\n    Skin: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\", \"manage-breathing-injury\"] // Hemorrhage control, IV, intubates, ventilates\n      },\n      \"goodVitals\": \"Pale, diaphoretic\",\n      \"badVitals\": \"Cyanonic, diaphoretic\"\n    },\n    Spo2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"99%, O2 \",\n      \"badVitals\": \"No capture\"\n    },\n    ETCO2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      goodVitals: \"45 mm Hg\",\n      badVitals: \"32 mm Hg\"\n    },\n    GCS: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\" ] // hemorrhage control, IV, intubation\n      },\n      \"goodVitals\": \"8\",\n      \"badVitals\": \"4\"\n    },\n    Glucose: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"86 mg/dl(4.8 mmol / l)\",\n      \"badVitals\": \"86 mg/dl(4.8 mmol / l)\"\n    },\n    Pain: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"Unable to access\",\n      \"badVitals\": \"Unable to access\"\n    },\n    Temp: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [\"shock-intervention-30\"] // covers patient\n      },\n      \"goodVitals\": \"96.5 F(35.8 C)\",\n      \"badVitals\": \"94.8\"\n    }\n  },\n  interventions: {\n    \"stabilizes-spine\": \"do\", // \"c-spine-interventions\"\n    \"manages-airway\": \"do\", // \"airway-interventions\"\n    \"oxygen-therapy\": \"do\", // na?? - no intervention list for it but should be done\n    \"manage-breathing-injury\": \"do\", // ventilation-interventions\n    \"control-bleeding\": \"do\", // \"bleeding-interventions\"\n    \"control-shock\": \"say\", // \"shock-interventions\"\n    \"transport-priority\": \"do\", // \"transport-interventions\"\n  }\n};\n\n\nexport default scenarioData;","import React, {useState} from \"react\"\n\nimport MDBNavBar from \"./components/MDBNavBar\"\nimport MDBModal from \"./components/MDBModal\"\nimport ScenarioInfo from \"./components/ScenarioInfo\"\n\nimport Mockup1 from \"./Mockup1\"\nimport Mockup2 from \"./Mockup2\"\nimport Mockup3 from \"./Mockup3\"\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nimport scenarioData  from \"./data/scenario\"\nimport traumaScenarioIndexer from \"./data/traumaScenarioIndexer\"\n\nconst App = (props) => {\n    const [showInfo, setShowInfo] = useState(false);\n    const toggleShowInfo = () => {\n        setShowInfo(!showInfo);\n    }\n    const scen = traumaScenarioIndexer(scenarioData)\n    console.log(scen)\n\n    return (\n        <Router>\n            <MDBNavBar\n                title={scen.id}\n                toggler={toggleShowInfo}\n            />\n            <Switch>\n                <Route path=\"/mockup1\">\n                    <Mockup1 scenario={scen} />\n                </Route>\n                <Route path=\"/mockup2\">\n                    <Mockup2 scenario={scen} />\n                </Route>\n                <Route path=\"/mockup3\">\n                    <Mockup3 scenario={scen} />\n                </Route>\n                <Route path=\"*\">\n                    <h3>Click on one of the mockups listed above</h3>\n                </Route>\n            </Switch>\n\n            <MDBModal\n                title=\"Scenario Info\"\n                show={showInfo}\n                toggler={toggleShowInfo}\n            >\n                <ScenarioInfo scenario={scen} />\n            </MDBModal>\n\n        </Router>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\"\n\n// reactstrap is using some deprecated stuff, which is causing React.StrictMode\n// to output warnings which make the console difficult to read. Disabling for now\n// <React.StrictMode>\n//     <App scenario={builtScen} />\n// </React.StrictMode>\n\nReactDOM.render(\n  <App />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}