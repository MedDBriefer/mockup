{"version":3,"sources":["data/trauma2.js","scenario-builder.js","data/scenario.js","components/MockupButton.js","components/MDBNavBar.js","components/MDBModal.js","components/ScenarioInfo.js","components/MDBContainer.js","components/CallOut.js","components/CheckBox.js","components/DetailsItem.js","components/MDBDetailsPane.js","components/Outline.js","Mockup1.js","components/CheckList.js","components/Accordian.js","components/RaterInfo.js","Mockup2.js","App.js","index.js"],"names":["ASSESS","INTERV","RADIO","CRIT_FAIL","HEADING","data","outline","id","type","label","children","items","calloutLabel","criticalCriteria","interventionForms","steps","module","exports","annotateStepsTree","map","step","item","require","AND","scenario","Object","assign","info","name","dispatchInfo","sceneAssessment","callouts","initialVitalSigns","BP","P","R","Skin","Spo2","ETCO2","GCS","Glucose","Pain","Temp","SAMPLE","S","A","M","L","E","reassessmentVitals","bloodPressure","pulse","respirations","skin","spo2","etco2","goodVitals","badVitals","gcs","glucose","pain","temp","MockupButton","to","Button","color","MDBNavBar","branding","title","toggler","Navbar","dark","Nav","tabs","NavItem","NavbarText","tag","onClick","MDBModal","props","show","Modal","isOpen","toggle","backdrop","ModalHeader","className","ModalBody","ScenarioInfo","MDBContainer","lhs","rhs","lhsWidth","rhsWidth","Container","fluid","Row","Col","md","CallOut","text","CheckBox","stateGetter","stateToggler","Label","Input","checked","onChange","callout","DetailsItem","JSON","stringify","MDBDetailsPane","child","key","Outline","switcher","depth","first","length","Mockup1","React","Component","constructor","super","console","log","this","state","vitals","currentNode","checkListItems","setCurrentNode","bind","toggleCheckListItem","getCheckedState","node","setState","prevState","componentDidMount","scen","crits","forEach","cc","cli","entries","render","heading","CheckList","useState","collapsed","setCollapsed","classnames","Accordian","Card","CardHeader","CardBody","childrenAreHeadings","RaterInfo","dispCallouts","activeTab","setActiveTab","tab","NavLink","active","TabContent","TabPane","tabId","Mockup2","App","showInfo","setShowInfo","toggleShowInfo","exact","path","builtScen","keys","annotateItems","scenarioBuilder","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9c5c3945.chunk.js","sourcesContent":["const ASSESS = \"assessment\";\nconst INTERV = \"intervention\";\nconst CHECK = \"check-box\";\nconst RADIO = \"radio-button\";\nconst CRIT_FAIL = \"critical-criteria\";\nconst HEADING = \"heading\";\n\nconst data = {\n    outline: [\n        { id: \"bsi\", type: HEADING, label: \"BSI\" },\n        { id: \"scene-size-up\", type: HEADING, label: \"Scene Size-Up\" },\n        {\n            id: \"initial-assessment-resuscitation\",\n            type: HEADING,\n            label: \"Primary Assessment/Resuscitation\",\n            children: [\n                { id: 'general-assessment', type: HEADING, label: 'General Assessment' },\n                { id: \"airway\", type: HEADING, label: \"Airway\" },\n                { id: \"breathing\", type: HEADING, label: \"Breathing\" },\n                { id: \"circulation\", type: HEADING, label: \"Circulation\" },\n                { id: \"transport-decision\", type: HEADING, label: \"Transport Decision\" }\n            ]\n        },\n        { id: \"history-taking\", type: HEADING, label: \"History Taking\" },\n        {\n            id: \"detailed-physical-examination\",\n            type: HEADING,\n            label: \"Secondary Assessment\",\n            children: [\n                { id: \"head\", type: HEADING, label: \"Head\" },\n                { id: \"neck\", type: HEADING, label: \"Neck\" },\n                { id: \"chest\", type: HEADING, label: \"Chest\" },\n                { id: \"abdomen-pelvis\", type: HEADING, label: \"Abdomen/pelvis\" },\n                { id: \"lower-extremities\", type: HEADING, label: \"Lower extremities\" },\n                { id: \"upper-extremities\", type: HEADING, label: \"Upper extremities\" },\n                { id: \"posterior-thorax-lumbar-buttocks\", type: HEADING, label: \"Posterior thorax, lumbar, & buttocks\" },\n                { id: \"misc\", type: HEADING, label: \"Misc.\"}\n            ]\n        },\n\n    ],\n    items: {\n        'bsi': [\n            { id: \"apply-ppe\", type: ASSESS, label: \"Takes or verbalizes body substance isolation precautions.\" } // crit criteria 590\n        ],\n        'scene-size-up': [\n            { id: \"assess-scene-safety\", type: ASSESS, label: \"Determines the scene/situation is safe\", calloutLabel: \"Scene Safety\" },\n            { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\", calloutLabel: \"Mechanism of Injury\" },\n            { id: \"assess-num-patients\", type: ASSESS, label: \"Determines the number of patients\", calloutLabel: \"Num Patients\" },\n            { id: \"request-addl-help\", type: ASSESS, label: \"Requests additional help if necessary\", calloutLabel: \"Additional Help\" },\n            { id: \"assess-spinal-stability\", type: ASSESS, label: \"Considers stabilization of spine\" }, // crit criteria 610\n            { id: \"stabilizes-spine\", type: INTERV, label: \"Stabilizes or directs assistant to stabilize the cervical spine, as indicated\" } // crit criteria 610\n        ],\n        'general-assessment': [\n            { id: \"verbalizes-patient-condition\", type: ASSESS, label: \"Verbalizes general impression of the patient\", calloutLabel: \"Condition\" },\n            { id: \"determines-loc\", type: ASSESS, label: \"Determines responsiveness/level of consciousness\", calloutLabel: \"LOC\" },\n            { id: \"determines-life-threats\", type: ASSESS, label: \"Determines chief complaint/apparent life-threats\", calloutLabel: \"Life Threats\" }\n        ],\n        'airway': [\n            { id: \"assess-airway\", type: ASSESS, label: \"Opens & assesses airway\", calloutLabel: \"Airway\" },\n            { id: \"manages-aiway\",  type: INTERV, label: \"Inserts adjunct as indicated\" } // action / crit criteria 690\n        ],\n        'breathing': [\n            { id: \"assess-breathing\",        type: ASSESS, label: \"Assess breathing\", calloutLabel: \"Breathing\" },\n            { id: \"assess-ventilation\",      type: ASSESS, label: \"Assess adequate ventilation\", calloutLabel: \"Ventilations\"},\n            { id: \"oxygen-therapy\",          type: INTERV, label: \"Initiates appropriate oxygen therapy\" }, // crit criteria 620\n            { id: \"manage-breathing-injury\", type: INTERV, label: \"Manages any injury which may compromise breathing/ventilation\" } // crit criteria 630\n        ],\n        'circulation': [\n            { id: \"assess-pulse\", type: ASSESS, label: \"Checks pulse\", calloutLabel: \"Pulse\" },\n            { id: \"assess-skin\", type: ASSESS, label: \"Assess skin [color, temperature, or condition]\", calloutLabel: \"Skin\" },\n            { id: \"control-bleeding\", type: INTERV, label: \"Assesses for & controls major bleeding if present\", calloutLabel: \"Bleeding\" },\n            { id: \"control-shock\", type: INTERV, label: \"Initiates shock management\" } // crit criteria 640\n        ],\n        'transport-decision': [\n            { id: \"260\", type: ASSESS, label: \"Identifies priority patients/makes transport decision based upon calculated GCS\" } // crit criteria 650\n        ],\n        'history-taking': [\n            { id: \"obtains-vitals\", type: ASSESS, label: \"Obtains, or directs assistant to obtain, baseline vital signs\" }, // point to vitals\n            { id: \"attempt-obtain-sample\", type: ASSESS, label: \"Attempts to obtain SAMPLE history\" } // point to SAMPLE\n        ],\n        'head': [\n            { id: \"assess-mouth-nose-face\", type: ASSESS, label: \"Inspects mouth, nose, & assesses facial area\", calloutLabel: \"Face\" },\n            { id: \"assess-scape-ears\", type: ASSESS, label: \"Inspects & palpates scalp & ears\", calloutLabel: \"Ears\" },\n            { id: \"assess-perrl\", type: ASSESS, label: \"Assesses eyes for PERRL\", calloutLabel: \"PERRL\" }\n        ],\n        'neck': [\n            { id: \"assess-trachea-position\", type: ASSESS, label: \"Checks position of trachea\", calloutLabel: \"Trachea\" },\n            { id: \"assess-jugular\", type: ASSESS, label: \"Checks jugular veins\", calloutLabel: \"Jugular\" },\n            { id: \"assess-spine\", type: ASSESS, label: \"Palpates cervical spine\", calloutLabel: \"Assess C-Spine\" }\n        ],\n        'chest': [\n            { id: \"inspect-chest\", type: ASSESS, label: \"Inspects chest\", calloutLabel: \"Inspect Chest\" },\n            { id: \"palpate-chest\", type: ASSESS, label: \"Palpates chest\", calloutLabel: \"Palpate Chest\" },\n            { id: \"auscultate-chest\", type: ASSESS, label: \"Auscultates chest\", calloutLabel: \"Auscultates Chest\" }\n        ],\n        'abdomen-pelvis': [\n            { id: \"assess-abdomen\", type: ASSESS, label: \"Inspects & palpates abdomen\", calloutLabel: \"Inspect Abdomen\" },\n            { id: \"assess-pelvis\", type: ASSESS, label: \"Assesses pelvis\", calloutLabel: \"Assess Pelvis\" },\n            { id: \"assess-nads-taint\", type: ASSESS, label: \"Verbalizes assessment of genitalia/perineum as needed\", calloutLabel: \"Assess Genitalia\" }\n        ],\n        'lower-extremities': [\n            { id: \"assess-left-leg\", type: ASSESS, label: \"Left Leg: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Left Leg\" },\n            { id: \"assess-right-leg\", type: ASSESS, label: \"Right Leg: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Right Leg\" }\n        ],\n        'upper-extremities': [\n            { id: \"assess-left-arm\", type: ASSESS, label: \"Left Arm: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Left Arm\" },\n            { id: \"assess-right-arm\", type: ASSESS, label: \"Right Arm: Inspects, palpates, & assesses motor, sensory, & distal circulatory functions\", calloutLabel: \"Right Arm\" }\n        ],\n        \"posterior-thorax-lumbar-buttocks\": [\n            { id: \"assess-posterior-thorax\", type: ASSESS, label: \"Inspects & palpates posterior thorax\", calloutLabel: \"Assess posterior\" },\n            { id: \"assess-lumbar-buttocks\", type: ASSESS, label: \"Inspects & palpates lumbar & buttocks area\", calloutLabel: \"Assess buttocks\" }\n        ],\n        \"misc\": [\n            { id: \"550\", type: ASSESS, label: \"Manages secondary injuries & wounds appropriately\" },\n            { id: \"560\", type: ASSESS, label: \"Performs ongoing assessment\" }\n        ]\n    },\n    criticalCriteria: [\n        { id: \"580\", type: CRIT_FAIL, label: \"Failure to initiate or call for transport of the patient within 10 minutes of time limit\" },\n\n        // true if 'apply-ppe' not checked?\n        { id: \"590\", type: CRIT_FAIL, label: \"Failure to take or verbalize body substance isolation precautions\" },\n        // true if 'assess-scene-safety' not checked?\n        { id: \"600\", type: CRIT_FAIL, label: \"Failure to determine scene safety\" },\n        // true if 'stabilize-spine' not checked AND indicated?\n        { id: \"610\", type: CRIT_FAIL, label: \"Failure to assess for and provide spinal protection when indicated\" },\n\n        { id: \"620\", type: CRIT_FAIL, label: \"Failure to voice & ultimately provide high concentration of oxygen\" },\n        // true if ANY of the ventiliation\n        { id: \"630\", type: CRIT_FAIL, label: \"Failure to assess/provide adequate ventilation\" },\n        { id: \"640\", type: CRIT_FAIL, label: \"Failure to find or appropriately manage problems associated with airway, breathing, hemorrhage or shock [hypoperfusion]\" },\n\n        { id: \"650\", type: CRIT_FAIL, label: \"Failure to differentiate patient's need for immediate transportation versus continued assessment/treatment at the scene\" },\n\n        { id: \"660\", type: CRIT_FAIL, label: \"Does other detailed/focused history or physical exam before assessing/treating threats to airway, breathing, & circulation\" },\n        { id: \"670\", type: CRIT_FAIL, label: \"Exhibits unacceptable affect with patient or other personnel\" },\n        { id: \"680\", type: CRIT_FAIL, label: \"Failure to manage the patient as a competent EMT-P\" },\n        { id: \"690\", type: CRIT_FAIL, label: \"Uses or orders a dangerous or inappropriate intervention\" }\n    ],\n    interventionForms: {\n        // Each selected intervention should, by default, also include an 'other / incorrect intervention' option\n        // Each object title matches checklist item id for easier mapping\n        // TODO: may have to assign type to individual steps to account for medical scenarios (or for a mix or radios/checks)\n        \"stabilizes-spine\": {\n            id: \"c-spine-interventions\",\n            type: CHECK,\n            steps: [\n                { id: \"c-spine-intervention-10\", label: \"Holds manual stabilization\" },\n                { id: \"c-spine-intervention-20\", label: \"Applies cervical collar\" }\n            ],\n            criticalCriteria: []\n        },\n        \"assess-ventilation\": {\n            id: \"ventilation-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"ventilation-intervention-10\", label: \"Endotracheal intubation\" },\n                { id: \"ventilation-intervention-20\", label: \"Bag-valve mask\" },\n            ],\n            criticalCriteria: []\n        },\n        \"control-bleeding\": {\n            id: \"bleeding-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"bleeding-intervention-10\", label: \"Applies direct pressure\" },\n                { id: \"bleeding-intervention-20\", label: \"Applies tourniquet\" }\n            ],\n            criticalCriteria: [ // Critical criteria should automatically be check boxes\n                { id: \"bleeding-crit-30\", type: CRIT_FAIL, label: \"Did not control hemorrhage using correct procedures in a timely manner\" },\n                { id: \"bleeding-crit-40\", type: CRIT_FAIL, label: \"Did not apply direct pressure to wound before applying tourniquet\" },\n                { id: \"bleeding-crit-50\", type: CRIT_FAIL, label: \"Did not properly position the patient\" },\n                { id: \"bleeding-crit-60\", type: CRIT_FAIL, label: \"Did not take steps to prevent heat loss\" }\n            ]\n        },\n        \"control-shock\": {\n            id: \"shock-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"shock-intervention-10\", label: \"IV fluid therapy--Peripheral IV insertion\" },\n                { id: \"shock-intervention-20\", label: \"IV fluid therapy--IV Push/Bolus\" },\n                { id: \"shock-intervention-30\", label: \"Covers patient\" }\n            ],\n            criticalCriteria: [\n                { id: \"shock-crit-10\", type: CRIT_FAIL, label: \"Fails to establish a patent and properly adjusted IV within 6-minute time limit\" },\n                { id: \"shock-crit-20\", type: CRIT_FAIL, label: \"Fails to establish IV within 3 attempts during 6-minute time limit\" },\n                { id: \"shock-crit-30\", type: CRIT_FAIL, label: \"Contaminates equipment or site without appropriately correcting situation\" },\n                { id: \"shock-crit-40\", type: CRIT_FAIL, label: \"Performs any improper technique resulting in the potential for uncontrolled hemorrhage, catheter shear, or air embolism\" },\n                { id: \"shock-crit-50\", type: CRIT_FAIL, label: \"Fails to dispose/verbalize disposal of blood-contaminated sharps immediately in proper container at point of use\" }\n            ]\n        },\n        \"transport-decision\": {\n            id: \"transport-interventions\",\n            type: RADIO,\n            steps: [\n                { id: \"transport-intervention-10\", label: \"Scoop Stretcher\" },\n                { id: \"transport-intervention-20\", label: \"Supine Long Backboard\" },\n            ],\n            criticalCriteria: [\n                { id: \"transport-crit-10\", type: CRIT_FAIL, label: \"Did not immediately direct or take manual immobilization of head\" },\n                { id: \"transport-crit-20\", type: CRIT_FAIL, label: \"Did not properly apply appropriately sized cervical collar before ordering releaseof manual immobilization\" },\n                { id: \"transport-crit-30\", type: CRIT_FAIL, label: \"Released or ordered relase of manual immobilization before it was maintained mechanically\" },\n                { id: \"transport-crit-40\", type: CRIT_FAIL, label: \"Manipulated or moved patient excessively causing potential spinal compromise\" },\n                { id: \"transport-crit-50\", type: CRIT_FAIL, label: \"Head immobilized to the device before device sufficiently secured to torso\" },\n                { id: \"transport-crit-60\", type: CRIT_FAIL, label: \"Patient moves excessively up, down, left, or right on the device\" },\n                { id: \"transport-crit-70\", type: CRIT_FAIL, label: \"Head immobilization allows for excessive movement\" },\n                { id: \"transport-crit-80\", type: CRIT_FAIL, label: \"Upon completion of immobilization, head is not in a neutral, in-line position\" },\n                { id: \"transport-crit-90\", type: CRIT_FAIL, label: \"Did not reassess motor, sensory, and circulatory functions in each extremity after immobilizing patient to the device\" }\n            ]\n        }\n    }\n};\n\nmodule.exports = data;\n// export default data;","// eslint-disable-next-line\nfunction annotateItems(items, callouts) {\n  for (const [id, text] of Object.entries(callouts)) {\n    // console.log(id, text)\n    for (const key of Object.keys(items)) {\n      let children = items[key].map((item) =>\n        item.id === id\n        ?  {...item, callout: text}\n        : item\n      )\n      items[key] = children\n    }\n  }\n  return items;\n}\n\nfunction addEmptyChildren(array) {\n  return array.map((item) =>\n    !item.children\n    ? {...item, children: []}\n    : item\n  )\n}\n\n// eslint-disable-next-line\nfunction annotateStepsTree(steps, items) {\n  // console.log(steps);\n  // console.log(items)\n  return steps.map((step) => {\n      if (!step.children) {\n        step.children = (step.id in items) ? addEmptyChildren(items[step.id]) : []\n        // let callout = callouts.find((ca) => ca.step === step.id);\n        // // let callout = callouts[]\n        // if (callout) {\n        //   step.callout = callout.id;\n        // }\n      } else {\n        step.children = annotateStepsTree(step.children, items);\n    }\n    return step;\n  });\n}\n\nexport const scenarioBuilder = (scen) => {\n  let { info, callouts, outline, items, criticalCriteria} = scen;\n  // console.log(info)\n  // console.log(callouts)\n  // console.log(outline)\n  items = annotateItems(items, callouts)\n  let newScen = {\n    info,\n    callouts,\n    steps: annotateStepsTree(outline, items),\n    items,\n    criticalCriteria\n  };\n  return newScen;\n};\n","const data = require(\"./trauma2.js\");\nconst AND = \"and\";\nconst OR = \"or\";\n// console.log(steps);\n\nexport const scenario = Object.assign({}, data, {\n  info: {\n    name: \"PHTC M2CA\",\n    dispatchInfo: \"You and your partners work for a transporting EMS agency and have been dispatched to a residential housing development for a lawn mower accident. It is 1330 hr on a Saturday afternoon and the temperature is 90°F (32°C). You are 5 minutes away from a level III trauma center and 25 minutes from a level I trauma center.\",\n    sceneAssessment: \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  },\n  callouts: {\n    \"assess-scene-safety\": \"scene is safe\",\n    \"assess-injury-mechanism\": \"Patient experienced a rollover with a riding lawn mower\",\n    \"assess-num-patients\": \"1 patient\",\n    \"request-addl-help\": \"Additional EMS is on the way.\",\n    \"verbalizes-patient-condition\": \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n    \"determines-loc\": \"Opens eyes to pain and becomes progressively more unresponsive\",\n    \"determines-life-threats\": \"Multiple lacerations to face, scalp, right arm, amputation at the right ankle\",\n    \"assess-airway\": \"Airway is patent\",\n    \"assess-breathing\": \"8 BPM\", // point to vitals?\n    \"assess-ventilation\": \"shallow, irregular\",\n    \"assess-pulse\": \"130; weak radial pulses\", // point to vitals?\n    \"assess-skin\": \"Cyanonic, diaphoretic\",\n    \"control-bleeding\": \"Major external hemorrhage at lower right leg\",\n    \"assess-mouth-nose-face\": \"Multiple lacerations with minor bleeding\",\n    \"assess-scape-ears\": \"Unremarkable\",\n    \"assess-perrl\": \"Pupils equal, round, and responsive\", // point to vitals?\n    \"assess-trachea\": \"Neck unremarkable\",\n    \"assess-jugular\": \"No JVD\",\n    \"assess-spine\": \"Unremarkable / No step-off\",\n    \"inspects-chest\": \"Multiple lacerations; red marks to right chest\",\n    \"palpate-chest\": \"Flail segment to right upper chest\",\n    \"auscultate-chest\": \"Crepitus on right\",\n    \"assess-abdomen\": \"Soft, nontender\",\n    \"assess-pelvis\": \"Stable\",\n    \"assess-nads-taint\": \"Unremarkable\",\n    \"assess-left-leg\": \"Multiple lacerations\",\n    \"assess-right-leg\": \"Amputation of right leg at the ankle\",\n    \"assess-left-arm\": \"Multiple lacerations\",\n    \"assess-right-arm\": \"Multiple lacerations\",\n    \"assess-posterior-thorax\": \"Unremarkable\",\n    \"assess-lumbar-buttocks\": \"Unremarkable\"\n  },\n  initialVitalSigns: {\n    BP: \"96 / palpation\",\n    P: \"130, weak radial pulses\",\n    R: \"38, shallow; LS clear and equal with crepitus on right\",\n    Skin: \"Cyanonic, diaphoretic\",\n    Spo2: \"78 % /RA\",\n    ETCO2: \"64 mm Hg\",\n    GCS: \"8 (E-2, V-2, M-4), PERRLA\",\n    Glucose: \"86 mg/dl(4.8 mmol / l)\",\n    Pain: \"Unable to access\",\n    Temp: \"96.5 F(35.8 C)\"\n  },\n  SAMPLE: {\n    S: \"shortness of breath\",\n    A: \"unknown\",\n    M: \"unknown\",\n    P: \"unknown\",\n    L: \"unknown\",\n    E: \"Riding a lawnmower on an incline and it rolled over the patient\"\n  },\n  reassessmentVitals: {\n    bloodPressure: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"96 / P\",\n      \"badVitals\": \"78 / P\"\n    },\n    pulse: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\"] // hemorrhage control, IV\n      },\n      \"goodVitals\": \"120, weak\",\n      \"badVitals\": \"130, weak radial pulses\"\n    },\n    respirations: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"12, LS clear and equal with crepitus on right\",\n      \"badVitals\": \"38, shallow; LS clear and equal with crepitus on right\"\n    },\n    skin: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\", \"manage-breathing-injury\"] // Hemorrhage control, IV, intubates, ventilates\n      },\n      \"goodVitals\": \"Pale, diaphoretic\",\n      \"badVitals\": \"Cyanonic, diaphoretic\"\n    },\n    spo2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      \"goodVitals\": \"99%, O2 \",\n      \"badVitals\": \"No capture\"\n    },\n    etco2: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"ventilation-intervention-10\", \"manage-breathing-injury\"] // intubation, ventilation\n      },\n      goodVitals: \"45 mm Hg\",\n      badVitals: \"32 mm Hg\"\n    },\n    gcs: {\n      \"good-if\": {\n        \"type\": AND,\n        \"ids\": [\"bleeding-interventions\", \"shock-interventions\", \"ventilation-intervention-10\" ] // hemorrhage control, IV, intubation\n      },\n      \"goodVitals\": \"8\",\n      \"badVitals\": \"4\"\n    },\n    glucose: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"86 mg/dl(4.8 mmol / l)\",\n      \"badVitals\": \"86 mg/dl(4.8 mmol / l)\"\n    },\n    pain: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [] // always the same\n      },\n      \"goodVitals\": \"Unable to access\",\n      \"badVitals\": \"Unable to access\"\n    },\n    temp: {\n      \"good-if\": {\n        \"type\": OR,\n        \"ids\": [\"shock-intervention-30\"] // covers patient\n      },\n      \"goodVitals\": \"96.5 F(35.8 C)\",\n      \"badVitals\": \"94.8\"\n    }\n  }\n});\n","import React from \"react\"\n// , { useState }\n\nimport { Button } from \"reactstrap\"\nimport { Link } from \"react-router-dom\"\n\n// This component wraps a bootstrap Button with a Link.  We're using NavLink\n// rather than Link, as it has an isActive() method.  I'm using the defalt\n// behavior for this method, but as a side-effect, setting some state within\n// the componenet so I can style the Button with the color I want when Link\n// is active\nconst MockupButton = ({ to, label }) => {\n\n    // the following seems to the be cause of a rendering compoment\n    // with the function of another component error, so I'm disabling\n\n    // const [isCurrent,  setIsCurrent] = useState(false);\n\n    // const toggleCurrent = (match, location) => {\n    //     setIsCurrent(!match ? false : true);\n    //     return isCurrent;\n    // }\n    // { isCurrent ? \"success\" : \"primary\" }\n    // isActive = { toggleCurrent }\n    return (\n        <Link to={to}>\n            <Button color=\"primary\">\n                {label}\n            </Button>\n        </Link>\n    )\n}\n\nexport default MockupButton","import React from 'react';\n\nimport {\n    Button,\n    Nav,\n    NavItem,\n    // NavLink\n    Navbar,\n    // NavbarBrand,\n    NavbarText,\n} from \"reactstrap\";\n\nimport MockupButton from \"./MockupButton\"\n\n\nconst MDBNavBar = ({branding, title, toggler}) => {\n    return (\n        <Navbar color=\"dark\" dark>\n            {/* <NavbarBrand href=\"#\">\n                {branding}\n            </NavbarBrand>\n             */}\n            <Nav tabs>\n                <NavItem>\n                    <MockupButton to=\"/mockup1\" label=\"Mockup 1\" />\n                </NavItem>\n                <NavItem>\n                    <MockupButton to=\"/mockup2\" label=\"Mockup 2\" />\n                </NavItem>\n            </Nav>\n           {!!title &&\n                <NavbarText tag=\"h3\">{title}</NavbarText>\n            }\n            <Button color=\"success\" onClick={toggler}>\n                Info\n            </Button>\n        </Navbar>\n    )\n}\n\nexport default MDBNavBar;\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nconst MDBModal = (props) => {\n    const {title, show, toggler, children} = props;\n    return (\n        <Modal isOpen={show} toggle={toggler} backdrop=\"static\">\n            <ModalHeader toggle={toggler}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\nexport default MDBModal;","\nimport React from \"react\"\n\nexport default function ScenarioInfo({scenario}) {\n\n    return (\n        <>\n            <h3>Dispatch Information</h3>\n            <p>{scenario.info.dispatchInfo}</p>\n            <h3>Scene Assessment</h3>\n            <p>{scenario.info.sceneAssessment}</p>\n        </>\n    )\n}","import React from 'react'\nimport {Container, Row, Col} from 'reactstrap'\n// import CheckListPane from \"./CheckListPane\"\n// import CheckList from \"./CheckList\"\n// import InfoPane from \"./InfoPane\";\n\nconst MDBContainer = ({lhs, rhs, lhsWidth=6, rhsWidth=6}) => {\n\n    return (\n        <Container fluid={true} className=\"main\">\n            <Row>\n                <Col md={lhsWidth} className=\"col\">\n                    {lhs}\n                </Col>\n                <Col md={rhsWidth} className=\"col\">\n                    {rhs}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MDBContainer","import React from \"react\";\n\nconst CallOut = ({ text, show }) => {\n\n  if (show) {\n    return <span className=\"callout\">{text}</span>;\n  } else {\n      return <i className=\"callout-icon fa fa-comment\" />;\n  }\n}\nexport default CallOut;\n","import React from \"react\";\n\nimport CallOut from \"./CallOut\";\n\nimport {Input, Label } from \"reactstrap\"\nconst CheckBox = ({ step, stateGetter, stateToggler }) => {\n\n  return (\n      <Label className={step.type === 'critical-criteria' ? \"text-danger\" : \"text-default\"}>\n        <Input\n          type=\"checkbox\"\n          checked={stateGetter(step.id)}\n          onChange={() => stateToggler(step.id)}\n        />\n        <b>{step.label}</b>\n        {step.callout && <CallOut text={step.callout} show={stateGetter(step.id)} />}\n      </Label>\n  );\n};\n\nexport default CheckBox;\n","import React from \"react\"\n\nimport CheckBox from \"./CheckBox\"\n\nconst DetailsItem = ({item, stateGetter, stateToggler}) => {\n\n    if (\"assessment\" === item.type) {\n        return <CheckBox\n                    step={item}\n                    stateGetter={stateGetter}\n                    stateToggler={stateToggler} />\n    } else {\n        return <p>{JSON.stringify(item, null, 4)}</p>\n    }\n}\n\nexport default DetailsItem;","import React from 'react'\n\nimport DetailsItem from \"./DetailsItem\"\n\nconst MDBDetailsPane = ({children, stateGetter, stateToggler}) => {\n\n    return (\n    <ul>\n        {children.map((child) =>\n            <li key={child.id}>\n                <DetailsItem\n                    item={child}\n                    stateGetter={stateGetter}\n                    stateToggler={stateToggler} />\n            </li>\n\n        )}\n    </ul>\n    )\n}\n\nexport default MDBDetailsPane;","import React from \"react\"\n\nimport {Button} from \"reactstrap\"\n\nconst Outline = ({switcher, steps, depth=3, first=false}) => {\n\n\n    return (\n        <ul className={first ? \"first\" : \"\"}>\n            {steps.map((step) => (\n            <li key={step.id}>\n\n                <Button\n                    color=\"link\"\n                    onClick={() => switcher(step.id)}>\n                    <span className={`h${depth + 1}`}>\n                        {step.label}\n                    </span>\n                </Button>\n\n                {\n                    step.children && step.children.length > 0 && step.children[0].type === 'heading' &&\n                    <Outline\n                        switcher={switcher}\n                        steps={step.children}\n                        depth={depth+1} />\n                }\n            </li>\n\n            ))}\n\n        </ul>\n    )\n}\n\nexport default Outline;","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\nimport MDBDetailsPane from \"./components/MDBDetailsPane\"\nimport Outline from \"./components/Outline\";\n\n\nclass Mockup1 extends React.Component {\n  constructor(props) {\n    super(props);\n    console.log(props)\n    this.state = {\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      checkListItems: {},\n      criticalCriteria: {}\n    };\n    // bind event event handlers;\n    this.setCurrentNode          = this.setCurrentNode.bind(this)\n    this.toggleCheckListItem     = this.toggleCheckListItem.bind(this)\n    // need to bind this as well as functional components don't have a 'this'\n    this.getCheckedState         = this.getCheckedState.bind(this)\n  }\n\n  setCurrentNode(node) {\n    this.setState({\n      currentNode: node\n    });\n  }\n\n  getCheckedState(id) {\n    return this.state.checkListItems[id]\n  }\n\n  toggleCheckListItem(node) {\n    this.setState((prevState) => ({\n        checkListItems: {...prevState.checkListItems, [node]: !prevState.checkListItems[node]}\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => {crits[cc.id] = false});\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      currentNode: null,\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    const lhs = <Outline\n                  switcher={this.setCurrentNode}\n                  heading=\"Navigation\"\n                  steps={scen.steps}\n                  first={true}\n                />\n    const currentNode = scen.items[this.state.currentNode] || [];\n    const rhs = <MDBDetailsPane\n                  children={currentNode}\n                  stateGetter={this.getCheckedState}\n                  stateToggler={this.toggleCheckListItem}\n                />\n\n    return <MDBContainer\n            lhs={lhs}\n            rhs={rhs}\n            />;\n  }\n}\n\nexport default Mockup1;\n","import React\n, { useState }\n from \"react\";\n\nimport {\n  // Collapse,\n  // ListGroup,\n  // ListGroupItem\n} from \"reactstrap\"\n\nimport classnames from \"classnames\";\n\nimport CheckBox from \"./CheckBox\";\n\n\nconst CheckList = ({ stateGetter, stateToggler, heading, steps, depth=3, first=false }) => {\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = () => setCollapsed(!collapsed);\n\n  return (\n    <ul className={classnames(first ? \"first\" : \"\")}>\n      {steps.map((step) => (\n        <li key={`li-${step.id}`}>\n          {!step.children.length > 0\n           ?\n           <CheckBox\n            step={step}\n            stateGetter={stateGetter}\n            stateToggler={stateToggler}\n            />\n          :\n            <>\n            <p className={`h${depth}`} onClick={() => toggle()}>{step.label}</p>\n            <CheckList\n              stateGetter={stateGetter}\n              stateToggler={stateToggler}\n              steps={step.children}\n              depth={depth+1}\n            />\n            </>\n          }\n        </li>\n      )\n      )}\n    </ul>\n  )\n  // console.log(steps)\n  // return (\n  //   <>\n  //   <ListGroup\n  //     className={classnames(\"collapse\", {\"show\": !collapsed})}\n  //     key={`lg-${steps[0].id}`}\n  //   >\n  //     {steps.map((step) => (\n  //       <ListGroupItem key={`lgi-${step.id}`}>\n  //       {\n  //         step.children && step.children.length > 0\n  //         ?\n  //           <>\n  //           <p\n  //             className={`h${depth}`}\n  //             onClick={() => {toggle()}}>\n  //               {step.label}\n  //           </p>\n  //           <CheckList\n  //             key={`cl-${step.id}`}\n  //             stateGetter={stateGetter}\n  //             stateToggler={stateToggler}\n  //             // heading={step.label}\n  //             steps={step.children}\n  //             depth={depth+1}\n  //           />\n  //           </>\n  //       :\n  //         <CheckBox\n  //           key={`cb-${step.id}`}\n  //           step={step}\n  //           stateGetter={stateGetter}\n  //           stateToggler={stateToggler}\n  //         />\n  //       }\n  //       </ListGroupItem>\n  //     ))}\n  //     </ListGroup>\n  //   </>\n  // );\n};\n\nexport default CheckList;\n","import React from \"react\"\n// , {useState}\n\nimport {\n    Card,\n    CardHeader,\n    CardBody,\n    // Collapse\n} from \"reactstrap\"\n\nimport  CheckList  from \"./CheckList\"\n\nconst Accordian = ({stateGetter, stateToggler, steps}) => {\n\n    const childrenAreHeadings = (step) => {\n        return step.children && step.children[0].type === 'heading'\n    }\n    return (\n        <>\n        {steps.map((step) => (\n            <Card key={`card-${step.id}`}>\n                <CardHeader>\n                    {step.label}\n                </CardHeader>\n                <CardBody>\n                    { childrenAreHeadings(step)\n                      ?  <Accordian stateGetter={stateGetter} stateToggler={stateToggler} steps={step.children} />\n                      :  <CheckList stateGetter={stateGetter} stateToggler={stateToggler} steps={step.children} />\n                    }\n                </CardBody>\n            </Card>\n        ))}\n        </>\n    )\n}\n\nexport default Accordian;","\nimport React,\n{ useState }\nfrom \"react\"\n\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane\n } from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nimport ScenarioInfo from \"./ScenarioInfo\"\n\n export default function RaterInfo({scenario, dispCallouts=true}) {\n\n    const [activeTab, setActiveTab] = useState('scenInfo')\n    const toggle = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n\n    return (\n        <>\n            <Nav tabs>\n                <NavItem>\n                    <NavLink\n                        className={classnames({active: activeTab === 'scenInfo'})}\n                        onClick={() => toggle('scenInfo')}\n                    >\n                        Scenario Info\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'callouts' })}\n                        onClick={() => toggle('callouts')}\n                    >\n                        Callouts\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'initVitals' })}\n                        onClick={() => toggle('initVitals')}\n                    >\n                        Initial Vitals\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: activeTab === 'reassessVitals' })}\n                        onClick={() => toggle('reassessVitals')}\n                    >\n                        Reassessment Vitals\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                <TabPane tabId=\"scenInfo\">\n                    <ScenarioInfo scenario={scenario} />\n                </TabPane>\n                <TabPane tabId=\"callouts\">\n                    placeholder for callouts\n                </TabPane>\n                <TabPane tabId=\"initVitals\">\n                    placeholder for init vitals\n                </TabPane>\n                <TabPane tabId=\"reassessVitals\">\n                    placeholder for reassessment vitals\n                </TabPane>\n            </TabContent>\n        </>\n    );\n}","import React from \"react\";\n\nimport MDBContainer from \"./components/MDBContainer\"\n\n// import CheckList from \"./components/CheckList\";\nimport Accordian from \"./components/Accordian\"\nimport RaterInfo from \"./components/RaterInfo\"\n\nclass Mockup2 extends React.Component {\n\n constructor(props) {\n   super(props);\n   this.state = {\n     callouts: {},\n     vitals: {},\n     checkListItems: {},\n     criticalCriteria: {}\n   };\n    // bind event event handlers;\n    this.toggleCheckListItem = this.toggleCheckListItem.bind(this)\n    // state accessor needs to be bound also as 'this' isn't defined in\n    // function components\n    this.getCheckedState = this.getCheckedState.bind(this)\n  }\n\n  getCheckedState(id) {\n    return (id in this.state.checkListItems) ? this.state.checkListItems[id] : false\n  }\n\n  toggleCheckListItem(node) {\n    this.setState((prevState) => ({\n      checkListItems: { ...prevState.checkListItems, [node]: !prevState.checkListItems[node] }\n    }))\n  }\n\n  componentDidMount() {\n    let scen = this.props.scenario;\n    let crits = {}\n    scen.criticalCriteria.forEach((cc) => { crits[cc.id] = false });\n    let cli = {}\n    // eslint-disable-next-line\n    for (const [key, value] of Object.entries(scen.items)) {\n      value.forEach((item) => {\n        cli[item.id] = false;\n      })\n    }\n    this.setState({\n      // ui-related state vars\n      callouts: {},\n      vitals: {},\n      // domain stuff (log to db)\n      checkListItems: cli,\n      criticalCriteria: crits\n    });\n  }\n\n  render() {\n    const scen = this.props.scenario;\n\n    // const lhs = <CheckList\n    //               stateGetter={this.getCheckedState}\n    //               stateToggler={this.toggleCheckListItem}\n    //               key=\"first\"\n    //               heading=\"Checklist\"\n    //               steps={scen.steps}\n    //               first={true}\n    //             />\n    const lhs = <Accordian\n                  stateGetter={this.getCheckedState}\n                  stateToggler={this.toggleCheckListItem}\n                  key=\"first\"\n                  heading=\"Checklist\"\n                  steps={scen.steps}\n                  first={true}\n                />\n    // const lhs = (<div>placeholder</div>)\n    const rhs = <RaterInfo scenario={scen} />\n    // const rhs = (<div>placeholder</div>)\n\n    return <MDBContainer\n              lhs={lhs}\n              rhs={rhs}\n              lhsWidth={7}\n              rhsWidth={5}\n            />;\n    }\n}\n\nexport default Mockup2;\n","import React, {useState} from \"react\"\n\nimport MDBNavBar from \"./components/MDBNavBar\"\nimport MDBModal from \"./components/MDBModal\"\nimport ScenarioInfo from \"./components/ScenarioInfo\"\n\nimport Mockup1 from \"./Mockup1\"\nimport Mockup2 from \"./Mockup2\"\n\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\nconst App = (props) => {\n    const [showInfo, setShowInfo] = useState(false);\n    const toggleShowInfo = () => {\n        setShowInfo(!showInfo);\n    }\n    const scen = props.scenario;\n\n    return (\n        <Router>\n            <MDBNavBar\n                title={scen.info.name}\n                toggler={toggleShowInfo}\n            />\n            <Switch>\n                <Route exact path=\"/\">\n                    <h3>Click on one of the mockups listed above</h3>\n                </Route>\n                <Route path=\"/mockup1\">\n                    <Mockup1 scenario={scen} />\n                </Route>\n                <Route path=\"/mockup2\">\n                    <Mockup2 scenario={scen} />\n                </Route>\n            </Switch>\n\n            <MDBModal\n                title=\"Scenario Info\"\n                show={showInfo}\n                toggler={toggleShowInfo}\n            >\n                <ScenarioInfo scenario={scen} />\n            </MDBModal>\n\n        </Router>\n    )\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport { scenarioBuilder } from \"./scenario-builder\";\nimport { scenario } from \"./data/scenario\";\n\nimport App from \"./App\"\n\n// hack to load in the scenario data. this would be coming from some database\n// after you logged in and clicked on your assignment, but this works for now\n// scenarioBuilder() reads in scen file which in turn loads in the trauma file and\n// *weaves* them together.  this would be done beforehand by some scenario editing\n// too, but it's instantaneous, so I'm just doing it here for now\nlet builtScen = scenarioBuilder(scenario);\nconsole.log(builtScen)\n// reactstrap is using some deprecated stuff, which is causing React.StrictMode\n// to output warnings which make the console difficult to read. Disabling for now\n// <React.StrictMode>\n//     <App scenario={builtScen} />\n// </React.StrictMode>\n\nReactDOM.render(\n  <App scenario={builtScen} />,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}