{"version":3,"sources":["data/traumaScenarioIndexer.js","contexts/PreferencesContext.js","data/scenario.js","contexts/ScenarioContext.js","components/MDBContainer.js","components/CheckBox.js","components/CallOutText.js","components/CallOutIcon.js","components/InterventionButton.js","components/InterventionForm.js","components/CheckListItem.js","components/CheckList.js","components/RevealTableRow.js","components/RevealTable.js","components/RaterInfo.js","components/CheckListRaterInfoLayout.js","components/Outline.js","components/Panel.js","components/MDBDetailsPane.js","components/NavigationDetailsLayout.js","components/MDBNavBar.js","components/MDBModal.js","components/ScenarioInfo.js","components/PreferencesForm.js","routes/Scenario.js","App.js","index.js"],"names":["HEADING","ASSESS","INTERV","REQURED","CRIT_FAIL","TRAUMA_SCENARIO_STRUCTURE","nodeLabels","tree","id","type","children","leaves","label","callouts","stepId","calloutLabel","criticalCriteria","parent","interventionForms","interventions","steps","addNodeLabelsToBranches","labelsMap","map","step","found","console","error","addLeavesToBranches","items","item","deepCopy","object","JSON","parse","stringify","getAssessmentNodes","assessments","node","push","traumaScenarioIndexer","scenario","assessmentFindings","data","scenarioType","info","initialVitalSigns","SAMPLE","reassessmentVitals","Object","entries","key","value","find","ca","calloutText","log","process","exit","keys","callout","addAssessmentFindingsToLeaves","forEach","element","critsWithParents","filter","crit","heading","addCriticalCriteriaToLeaves","intervention","addInterventionCategorizationsToLeaves","assessmentSteps","defaultPrefs","dispLeafNodesInline","dispAssessmentFindingsInline","inhibitRaterOversharing","PreferencesContext","React","createContext","setPref","PreferencesProvider","props","useState","setDispLeafNodesInline","setDispAssessmentFindingsInline","setInhibitRaterOversharing","Provider","name","usePrefs","useContext","scenarioData","instructorInformation","patientInformation","moulage","position","actions","dispatchInfo","sceneAssessment","BP","P","R","Skin","Spo2","ETCO2","GCS","Glucose","Pain","Temp","S","A","M","L","E","goodVitals","badVitals","ScenarioContext","ScenarioProvider","defaultValues","currentNode","setCurrentNode","currentAssessmentFinding","setCurrentAssessmentFinding","checkListItems","setCheckListItems","setCriticalCriteria","showForm","showInterventionForm","setShowInterventionForm","vitals","currentVitals","setCurrentVitals","vitalsRecomputed","setVitalsRecomputed","isChecked","setChecked","boolVal","prevState","toggleChecked","setDisplayInterventionForm","useEffect","isCurrentAssessmentFinding","toggleAssessmentFinding","stepIsChecked","shouldDisplayInterventionForm","includes","toggleDisplayInterventionForm","setVital","vital","MDBContainer","lhs","rhs","lhsWidth","rhsWidth","Container","fluid","className","Row","Col","md","CheckBox","clickHandler","inlineChildren","classnames","onClick","CallOutText","currentCallOut","CallOutIcon","style","color","InterventionButton","InterventionForm","intv","cl","cc","CheckListItem","inlines","ib","isLeafNode","length","CheckList","depth","first","collapsed","setCollapsed","RevealTableRow","values","show","setShow","index","hidden","RevealTable","title","headings","rows","Table","striped","size","row","RaterInfo","defaultTab","activeTab","setActiveTab","activateTab","tab","isActiveTab","Nav","tabs","NavItem","NavLink","active","TabContent","displayAssessmentFindings","TabPane","tabId","getAssessmentFindingsTabPane","vitalsHeaders","iv","getVitalsTabPane","sample","rec","getSampleTabPane","CheckListRaterInfoLayout","hasChildren","allChildrenAreHeadings","every","child","Outline","Button","Panel","centerTitle","titleSize","Card","CardHeader","CardTitle","CardBody","MDBDetailsPane","setLabel","setChildren","NavigationDetailsLayout","MDBNavBar","scenInfoToggler","prefsToggler","activeMockup","setActiveMockup","isCurrentMockup","mockup","Navbar","dark","event","preventDefault","NavbarText","tag","MDBModal","dismiss","Modal","isOpen","toggle","backdrop","ModalHeader","ModalBody","ScenarioInfo","PreferencesForm","handleInputChange","target","checked","onChange","mapArrayOfObjKeysToFalse","array","dict","obj","mapChildObjKeysToFalse","Scenario","scenarioId","setScenario","initValues","setInitValues","showPrefs","setShowPrefs","showScenInfo","setShowScenInfo","scen","defaults","reduce","getDefaultValues","loadScen","togglePrefs","toggleScenInfo","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.415b77c2.chunk.js","sourcesContent":["// the scenarios entered via forms are merely a set of fields and values and\n// aren't organized as steps.  the purpose of this file is to define the\n// structure of a trauma scenario, as\n// * a tree of steps (and weave the scenario-speific info into them)\n// * various other mappings of things so they can be looked up by id,  more details later\n\n// const CHECK = \"check-box\";\n// const RADIO = \"radio-button\";\n\nconst HEADING = \"heading\"; //not a leaf node, simply a step which has child steps\n\nconst ASSESS    = \"assessment\";\nconst INTERV    = \"intervention\"; // an action performed on the patient\nconst REQURED   = \"required-action\"   // an action the EMT performs, but not on the patient\nconst CRIT_FAIL = \"critical-criteria\";\n\nconst TRAUMA_SCENARIO_STRUCTURE = {\n    nodeLabels: {\n        \"bsi\":                              \"BSI\",\n        \"scene-size-up\":                    \"Scene Size-Up\",\n        \"initial-assessment-resuscitation\": \"Primary Survey/Resuscitation\",\n        \"general-assessment\":               \"General Impression and LOC\",\n        \"airway\":                           \"Airway\",\n        \"breathing\":                        \"Breathing\",\n        \"circulation\":                      \"Circulation\",\n        \"transport-decision\":               \"Transport Decision\",\n        \"history-taking\":                   \"History Taking\",\n        \"detailed-physical-examination\":    \"Secondary Assessment\",\n        \"head\":                             \"Head\",\n        \"neck\":                             \"Neck**\",\n        \"chest\":                            \"Chest**\",\n        \"abdomen-pelvis\":                   \"Abdomen/pelvis**\",\n        \"lower-extremities\":                \"Lower extremities**\",\n        \"upper-extremities\":                \"Upper extremities\",\n        \"posterior-thorax-lumbar-buttocks\": \"Posterior thorax, lumbar, and buttocks**\",\n        \"misc\":                             \"Ongoing management and reassessment\",\n        \"critical-criteria\":                \"Critical Criteria\"\n    },\n    tree: [\n        { id: \"bsi\",           type: HEADING },\n        { id: \"scene-size-up\", type: HEADING },\n        {\n            id: \"initial-assessment-resuscitation\",\n            type: HEADING,\n            children: [\n                { id: 'general-assessment', type: HEADING },\n                { id: \"airway\",             type: HEADING },\n                { id: \"breathing\",          type: HEADING },\n                { id: \"circulation\",        type: HEADING },\n                { id: \"transport-decision\", type: HEADING }\n            ]\n        },\n        { id: \"history-taking\", type: HEADING },\n        {\n            id: \"detailed-physical-examination\",\n            type: HEADING,\n            children: [\n                { id: \"head\",                             type: HEADING },\n                { id: \"neck\",                             type: HEADING },\n                { id: \"chest\",                            type: HEADING },\n                { id: \"abdomen-pelvis\",                   type: HEADING },\n                { id: \"lower-extremities\",                type: HEADING },\n                { id: \"upper-extremities\",                type: HEADING },\n                { id: \"posterior-thorax-lumbar-buttocks\", type: HEADING },\n                { id: \"misc\",                             type: HEADING }\n            ]\n        },\n        { id: \"critical-criteria\", type: HEADING }\n    ],\n    leaves: {\n        'bsi': [\n            { id: \"apply-ppe\",  type: REQURED, label: \"Takes or verbalizes appropriate PPE precautions.\" } // crit criteria 590\n        ],\n        'scene-size-up': [\n            { id: \"assess-scene-safety\",     type: ASSESS, label: \"Determines the scene/situation is safe\" },\n            { id: \"assess-injury-mechanism\", type: ASSESS, label: \"Determines the mechanism of injury/nature of illness\" },\n            { id: \"assess-num-patients\",     type: ASSESS, label: \"Determines the number of patients\" },\n            { id: \"request-addl-help\",       type: ASSESS, label: \"Requests additional help if necessary\" },\n            { id: \"stabilizes-spine\",        type: INTERV, label: \"Stabilizes or directs assistant to stabilize the cervical spine, as indicated\" } // crit criteria 610\n        ],\n        'general-assessment': [\n            { id: \"verbalizes-patient-condition\", type: ASSESS, label: \"Verbalizes general impression of the patient\" },\n            { id: \"determines-loc\",               type: ASSESS, label: \"Determines responsiveness/level of consciousness\" },\n            { id: \"determines-life-threats\",      type: ASSESS, label: \"Determines chief complaint/apparent life-threats\" }\n        ],\n        'airway': [\n            { id: \"assess-airway\",    type: ASSESS, label: \"Opens and assesses airway\" },\n            { id: \"inserts-adjunct\",  type: INTERV, label: \"Inserts adjunct as indicated\" }, // action / crit criteria 690\n            { id: \"manages-airway\",   type: INTERV, label: \"Appropriately manages any problems associated with airway\"}\n        ],\n        'breathing': [\n            { id: \"assess-breathing\",        type: ASSESS, label: \"Assesses breathing\" },\n            { id: \"assess-ventilation\",      type: ASSESS, label: \"Assures adequate ventilation\" },\n            { id: \"oxygen-therapy\",          type: INTERV, label: \"Initiates appropriate oxygen therapy\" }, // crit criteria 620\n            { id: \"manage-breathing-injury\", type: INTERV, label: \"Manages any injury that may compromise breathing/ventilation\" } // crit criteria 630\n        ],\n        'circulation': [\n            { id: \"assess-pulse\",     type: ASSESS, label: \"Checks pulse\" },\n            { id: \"assess-skin\",      type: ASSESS, label: \"Assesses skin [either skin color, temperature, or condition]\" },\n            { id: \"assess-bleeding\",  type: ASSESS, label: \"Assesses for major bleeding\" },\n            { id: \"control-bleeding\", type: INTERV, label: \"Controls major bleeding if present\" },\n            { id: \"control-shock\",    type: INTERV, label: \"Initiates shock management as indicated\" } // crit criteria 640\n        ],\n        'transport-decision': [\n            { id: \"transport-priority\", type: REQURED, label: \"Identifies priority patients/makes transport decision based upon calculated GCS\" } // crit criteria 650\n        ],\n        'history-taking': [\n            { id: \"obtains-vitals\",        type: ASSESS, label: \"Obtains, or directs assistant to obtain, baseline vital signs\" }, // point to vitals\n            { id: \"attempt-obtain-sample\", type: ASSESS, label: \"Attempts to obtain SAMPLE history\" } // point to SAMPLE\n        ],\n        'head': [\n            { id: \"assess-mouth-nose-face\", type: ASSESS, label: \"Inspects mouth**, nose**, and assesses facial area\" },\n            { id: \"assess-scape-ears\",      type: ASSESS, label: \"Inspects and palpates scalp and ears\" },\n            { id: \"assess-perrl\",           type: ASSESS, label: \"Assesses eyes for PERRL**\" }\n        ],\n        'neck': [\n            { id: \"assess-trachea\", type: ASSESS, label: \"Checks position of trachea\" },\n            { id: \"assess-jugular\", type: ASSESS, label: \"Checks jugular veins\" },\n            { id: \"assess-spine\",   type: ASSESS, label: \"Palpates cervical spine\" }\n        ],\n        'chest': [\n            { id: \"inspects-chest\",   type: ASSESS, label: \"Inspects chest\" },\n            { id: \"palpate-chest\",    type: ASSESS, label: \"Palpates chest\" },\n            { id: \"auscultate-chest\", type: ASSESS, label: \"Auscultates chest\" }\n        ],\n        'abdomen-pelvis': [\n            { id: \"assess-abdomen\",   type: ASSESS, label: \"Inspects and palpates abdomen\" },\n            { id: \"assess-pelvis\",    type: ASSESS, label: \"Assesses pelvis\" },\n            { id: \"assess-genitalia\", type: ASSESS, label: \"Verbalizes assessment of genitalia/perineum as needed\" }\n        ],\n        'lower-extremities': [\n            { id: \"assess-right-leg\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right lower extremity\" },\n            { id: \"assess-left-leg\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left lower extremity\" }\n        ],\n        'upper-extremities': [\n            { id: \"assess-right-arm\", type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on right upper extremity\" },\n            { id: \"assess-left-arm\",  type: ASSESS, label: \"Inspects, palpates, and assesses motor, sensory, and distal circulatory functions on left upper extremity\" }\n        ],\n        \"posterior-thorax-lumbar-buttocks\": [\n            { id: \"assess-posterior-thorax\", type: ASSESS, label: \"Inspects and palpates posterior thorax\" },\n            { id: \"assess-lumbar-buttocks\",  type: ASSESS, label: \"Inspects and palpates lumbar and buttocks area\" }\n        ],\n        \"misc\": [\n            { id: \"manage-secondary-injuries\", type: REQURED, label: \"Manages secondary injuries and wounds appropriately\" },\n            { id: \"performs-ongoing-assessment\", type: REQURED, label: \"Performs ongoing assessment\" }\n        ],\n        \"critical-criteria\": [] // these need to all be woven in by the scenario builder, as what goes here is depending on some options\n    },\n    callouts: [\n        { stepId: \"assess-scene-safety\",           calloutLabel: \"Scene Safety\" },\n        { stepId: \"assess-injury-mechanism\",       calloutLabel: \"Mechanism of Injury\" },\n        { stepId: \"assess-num-patients\",           calloutLabel: \"Num Patients\" },\n        { stepId: \"request-addl-help\",             calloutLabel: \"Additional Help\" },\n        { stepId: \"verbalizes-patient-condition\",  calloutLabel: \"Condition\" },\n        { stepId: \"determines-loc\",                calloutLabel: \"LOC\" },\n        { stepId: \"determines-life-threats\",       calloutLabel: \"Life Threats\" },\n        { stepId: \"assess-airway\",                 calloutLabel: \"Airway\" },\n        { stepId: \"assess-breathing\",              calloutLabel: \"Breathing\" },\n        { stepId: \"assess-ventilation\",            calloutLabel: \"Ventilations\" },\n        { stepId: \"assess-pulse\",                  calloutLabel: \"Pulse\" },\n        { stepId: \"assess-skin\",                   calloutLabel: \"Skin\" },\n        { stepId: \"assess-bleeding\",               calloutLabel: \"Bleeding\" },\n        { stepId: \"assess-mouth-nose-face\",        calloutLabel: \"Face\" },\n        { stepId: \"assess-scape-ears\",             calloutLabel: \"Ears\" },\n        { stepId: \"assess-perrl\",                  calloutLabel: \"PERRL\" },\n        { stepId: \"assess-trachea\",                calloutLabel: \"Trachea\" },\n        { stepId: \"assess-jugular\",                calloutLabel: \"Jugular\" },\n        { stepId: \"assess-spine\",                  calloutLabel: \"Assess C-Spine\" },\n        { stepId: \"inspects-chest\",                calloutLabel: \"Inspect Chest\" },\n        { stepId: \"palpate-chest\",                 calloutLabel: \"Palpate Chest\" },\n        { stepId: \"auscultate-chest\",              calloutLabel: \"Auscultates Chest\" },\n        { stepId: \"assess-abdomen\",                calloutLabel: \"Abdomen\" },\n        { stepId: \"assess-pelvis\",                 calloutLabel: \"Pelvis\" },\n        { stepId: \"assess-genitalia\",              calloutLabel: \"Genitalia\" },\n        { stepId: \"assess-left-leg\",               calloutLabel: \"Left Leg\" },\n        { stepId: \"assess-right-leg\",              calloutLabel: \"Right Leg\" },\n        { stepId: \"assess-left-arm\",               calloutLabel: \"Left Arm\" },\n        { stepId: \"assess-right-arm\",              calloutLabel: \"Right Arm\" },\n        { stepId: \"assess-posterior-thorax\",       calloutLabel: \"Posterior/Thorax\" },\n        { stepId: \"assess-lumbar-buttocks\",        calloutLabel: \"Lumbar/Buttocks\" }\n    ],\n    criticalCriteria: [\n        // we might be able to auto-check based off of timer expiring\n        { id: \"critial-failure-timely-transport-decision\",       type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to initiate or call for transport of the patient within 10 minute time limit\" },\n        // true if 'apply-ppe' not checked?\n        { id: \"critical-failure-ppe\",                            type: CRIT_FAIL, parent: \"bsi\",                label: \"Failure to take or verbalize appropriate PPE precautions\" },\n        // true if 'assess-scene-safety' not checked?\n        { id: \"critical-failure-scene-safety\",                   type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to determine scene safety\" },\n        // true if 'stabilize-spine' not checked AND indicated?\n        { id: \"critical-failure-spinal-protection\",              type: CRIT_FAIL, parent: \"scene-size-up\",      label: \"Failure to assess for and provide spinal protection when indicated\" },\n        { id: \"critical-failure-oxygen-supply\",                  type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to voice and ultimately provide high concentration of oxygen\" },\n        // true if ANY of the ventiliation\n        { id: \"critical-failure-ventilation\",                    type: CRIT_FAIL, parent: \"breathing\",          label: \"Failure to assess/provide adequate ventilation\" },\n        // not giving this one a parent, as it belongs to a heading whose only other children are other headings, making it\n        // problematic in the navigation/details layout - readdress this if we don't go with that\n        { id: \"critical-failure-manage-life-threats\",            type: CRIT_FAIL,                               label: \"Failure to find or appropriately manage problems associated with airway, breathing, hemorrhage or shock [hypoperfusion]\" },\n        // combine below with 580?\n        { id: \"critical-failure-differentiate-immediate-transport-vs-on-scene-treatment\",  type: CRIT_FAIL, parent: \"transport-decision\", label: \"Failure to differentiate patient's need for immediate transportation versus continued assessment/treatment at the scene\" },\n        { id: \"critical-failure-prioritizing-non-life-threats\",  type: CRIT_FAIL,                               label: \"Does other detailed history or physical exam before assessing/treating threats to airway, breathing, and circulation\" },\n        { id: \"critical-failure-incompetence\",                   type: CRIT_FAIL,                               label: \"Failure to manage the patient as a competent EMT\" },\n        { id: \"critical-failure-unacceptable-affect\",            type: CRIT_FAIL,                               label: \"Exhibits unacceptable affect with patient or other personnel\" },\n        { id: \"critical-failure-inapproriate-intervention\",      type: CRIT_FAIL,                               label: \"Uses or orders a dangerous or inappropriate intervention\" }\n    ],\n    interventionForms: {\n        // Each selected intervention should, by default, also include an 'other / incorrect intervention' option\n        // Each object title matches checklist item id for easier mapping\n        \"stabilizes-spine\": {\n            id: \"c-spine-interventions\",\n            interventions: [\n                { id: \"c-spine-intervention-10\", label: \"Holds manual stabilization\" },\n                { id: \"c-spine-intervention-20\", label: \"Applies cervical collar\" }\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" },\n                { id: 'bogus-step-2', label: \"bogus step 2\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"inserts-adjunct\": {\n            id: \"adjunct-interventions\",\n            interventions: [\n                { id: \"adjunct-intervention-10\", label: \"Inserts OPA\" },\n                { id: \"adjunct-intervention-20\", label: \"Inserts NPA\" },\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" },\n                { id: 'bogus-step-2', label: \"bogus step 2\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"manages-airway\": {\n            id: \"airway-interventions\",\n            interventions: [\n                { id: \"airway-intervention-10\", label: \"bogus intervetion1\" },\n                { id: \"airway-intervention-20\", label: \"bogus intervention2\" },\n            ],\n            steps: [\n                { id: 'bogus-step-1', label: \"bogus step 1\" }\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n                { id: \"bogus-crit-3\", label: \"bogus critical criteria 3\" },\n            ]\n        },\n        \"oxygen-therapy\": {\n            id: \"oxygen-therapy-interventions\",\n            interventions: [\n                { id: \"ventilation-intervention-10\", label: \"Endotracheal intubation\" },\n                { id: \"ventilation-intervention-20\", label: \"Bag-valve mask\" },\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n            ]\n        },\n        \"manage-breathing-injury\": {\n            id: \"manage-breathing-injury-intervention\",\n            interventions: [\n                {id: \"manage-breathing-intervention-10\", label: \"bogus intervention 1\"},\n                {id: \"manage-breathing-intervention-29\", label: \"bogus intervention 2\"}\n            ],\n            steps: [\n                {id: \"bogus-step-1\", label: \"bogus step 1\" },\n                {id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"bogus-crit-1\", label: \"bogus critical criteria 1\" },\n                { id: \"bogus-crit-2\", label: \"bogus critical criteria 2\" },\n\n            ]\n        },\n        \"control-bleeding\": {\n            id: \"bleeding-interventions\",\n            interventions: [\n                { id: \"bleeding-intervention-10\", label: \"Applies direct pressure\" },\n                { id: \"bleeding-intervention-20\", label: \"Applies tourniquet\" }\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [ // Critical criteria should automatically be check boxes\n                { id: \"bleeding-crit-30\", type: CRIT_FAIL, label: \"Did not control hemorrhage using correct procedures in a timely manner\" },\n                { id: \"bleeding-crit-40\", type: CRIT_FAIL, label: \"Did not apply direct pressure to wound before applying tourniquet\" },\n                { id: \"bleeding-crit-50\", type: CRIT_FAIL, label: \"Did not properly position the patient\" },\n                { id: \"bleeding-crit-60\", type: CRIT_FAIL, label: \"Did not take steps to prevent heat loss\" }\n            ]\n        },\n        \"control-shock\": {\n            id: \"shock-interventions\",\n            interventions: [\n                { id: \"shock-intervention-10\", label: \"IV fluid therapy--Peripheral IV insertion\" },\n                { id: \"shock-intervention-20\", label: \"IV fluid therapy--IV Push/Bolus\" },\n                { id: \"shock-intervention-30\", label: \"Covers patient\" }\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"shock-crit-10\", type: CRIT_FAIL, label: \"Fails to establish a patent and properly adjusted IV within 6-minute time limit\" },\n                { id: \"shock-crit-20\", type: CRIT_FAIL, label: \"Fails to establish IV within 3 attempts during 6-minute time limit\" },\n                { id: \"shock-crit-30\", type: CRIT_FAIL, label: \"Contaminates equipment or site without appropriately correcting situation\" },\n                { id: \"shock-crit-40\", type: CRIT_FAIL, label: \"Performs any improper technique resulting in the potential for uncontrolled hemorrhage, catheter shear, or air embolism\" },\n                { id: \"shock-crit-50\", type: CRIT_FAIL, label: \"Fails to dispose/verbalize disposal of blood-contaminated sharps immediately in proper container at point of use\" }\n            ]\n        },\n        \"transport-priority\": {\n            id: \"transport-interventions\",\n            interventions: [\n                { id: \"transport-intervention-10\", label: \"Scoop Stretcher\" },\n                { id: \"transport-intervention-20\", label: \"Supine Long Backboard\" },\n            ],\n            steps: [\n                { id: \"bogus-step-1\", label: \"bogus step 1\" },\n                { id: \"bogus-step-2\", label: \"bogus step 2\" },\n            ],\n            criticalCriteria: [\n                { id: \"transport-crit-10\", type: CRIT_FAIL, label: \"Did not immediately direct or take manual immobilization of head\" },\n                { id: \"transport-crit-20\", type: CRIT_FAIL, label: \"Did not properly apply appropriately sized cervical collar before ordering releaseof manual immobilization\" },\n                { id: \"transport-crit-30\", type: CRIT_FAIL, label: \"Released or ordered relase of manual immobilization before it was maintained mechanically\" },\n                { id: \"transport-crit-40\", type: CRIT_FAIL, label: \"Manipulated or moved patient excessively causing potential spinal compromise\" },\n                { id: \"transport-crit-50\", type: CRIT_FAIL, label: \"Head immobilized to the device before device sufficiently secured to torso\" },\n                { id: \"transport-crit-60\", type: CRIT_FAIL, label: \"Patient moves excessively up, down, left, or right on the device\" },\n                { id: \"transport-crit-70\", type: CRIT_FAIL, label: \"Head immobilization allows for excessive movement\" },\n                { id: \"transport-crit-80\", type: CRIT_FAIL, label: \"Upon completion of immobilization, head is not in a neutral, in-line position\" },\n                { id: \"transport-crit-90\", type: CRIT_FAIL, label: \"Did not reassess motor, sensory, and circulatory functions in each extremity after immobilizing patient to the device\" }\n            ]\n        }\n    }\n};\n\n\n\nfunction addAssessmentFindings(assessmentFindings) {\n    return Object.entries(assessmentFindings).map(([key, value]) => {\n        const found = TRAUMA_SCENARIO_STRUCTURE.callouts.find((ca) => ca.stepId === key)\n        if (found) {\n            found.calloutText = value;\n        } else {\n            console.log(\"ERROR key not found!\", key);\n            process.exit(1)\n        }\n        return found;\n    })\n}\n\n\n// eslint-disable-next-line\nfunction addAssessmentFindingsToLeaves(items, callouts) {\n\n    for (const { stepId, calloutLabel, calloutText } of callouts) {\n        // console.log(stepId, calloutLabel, calloutText)\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? { ...item, calloutLabel: calloutLabel, callout: calloutText }\n                    : item\n            )\n            items[key] = children\n        }\n    }\n    return items;\n}\n\nfunction addInterventionCategorizationsToLeaves(items, interventions) {\n    for (const [stepId, value] of Object.entries(interventions)) {\n        for (const key of Object.keys(items)) {\n            let children = items[key].map((item) =>\n                item.id === stepId\n                    ? {...item, intervention: value}\n                    : item\n            )\n            items[key] = children\n        }\n    }\n}\n\nfunction addCriticalCriteriaToLeaves(items, criticalCriteria) {\n    // add all to the critical criteria step, components can elect not to display\n    // ones with parents\n    criticalCriteria.forEach(element => {\n        items['critical-criteria'].push(element)\n    });\n    // append specific ones to the approriate 'items' based off their parent\n    // (if present)\n\n    const critsWithParents = criticalCriteria.filter((crit) => !!crit.parent)\n    for (const heading of Object.keys(items)) {\n        // console.log(\"\\n\", heading)\n        for (const crit of critsWithParents.filter((crit) => crit.parent === heading)) {\n            items[heading].push(crit)\n        }\n    }\n    // process.exit(0)\n}\n\n\n\nfunction addEmptyChildren(array) {\n    return array.map((item) =>\n        !item.children\n            ? { ...item, children: [] }\n            : item\n    )\n}\n\nfunction addNodeLabelsToBranches(steps, labelsMap) {\n    return steps.map((step) => {\n        let found = (step.id in labelsMap) ? labelsMap[step.id] : false;\n        if (!found) {\n            console.error(`label for ${step.id} not found!`)\n        } else {\n            step.label = found;\n        }\n        if (step.children) {\n            step.children = addNodeLabelsToBranches(step.children, labelsMap)\n        }\n        return step\n    })\n}\n\nfunction addLeavesToBranches(steps, items) {\n    return steps.map((step) => {\n        if (!step.children) {\n            step.children = (step.id in items) ? addEmptyChildren(items[step.id]) : []\n        } else {\n            step.children = addLeavesToBranches(step.children, items);\n        }\n        return step;\n    });\n}\n\nfunction deepCopy(object) {\n    return JSON.parse(JSON.stringify(object))\n}\n\nfunction getAssessmentNodes(tree, assessments=[]) {\n    // console.log(tree)\n    for (const node of tree) {\n        if (node.type === 'assessment') {\n            assessments.push(node)\n        } else if (node.type === 'heading') {\n            assessments = getAssessmentNodes(node.children, assessments)\n        }\n    }\n    return assessments;\n}\n\nconst traumaScenarioIndexer = (scenario) => {\n    const data = {\n        id: scenario.id,\n        scenarioType: scenario.scenarioType,\n        info: scenario.info,\n        initialVitalSigns: scenario.initialVitalSigns,\n        SAMPLE: scenario.SAMPLE,\n        reassessmentVitals: scenario.reassessmentVitals,\n        interventionForms: deepCopy(TRAUMA_SCENARIO_STRUCTURE.interventionForms),\n        criticalCriteria: deepCopy(TRAUMA_SCENARIO_STRUCTURE.criticalCriteria),\n        nodeLabels: deepCopy(TRAUMA_SCENARIO_STRUCTURE.nodeLabels),\n        items: deepCopy(TRAUMA_SCENARIO_STRUCTURE.leaves),\n    }\n    // callouts are defined separately, as 1. it's easier to access them from the\n    // right pane this way, and 2. it's easier to modify their labels if they're listed\n    // sequentially, rather than in the tree or leaves structures\n    // also, while we've changed the labels to 'Assessment Findings', I'm keeping things\n    // as callouts now, so we don't have to change all of the props, code, etc\n    data.callouts = addAssessmentFindings(scenario.assessmentFindings)\n    addAssessmentFindingsToLeaves(data.items, data.callouts)\n    addCriticalCriteriaToLeaves(data.items, TRAUMA_SCENARIO_STRUCTURE.criticalCriteria)\n    addInterventionCategorizationsToLeaves(data.items, scenario.interventions)\n    const steps = addNodeLabelsToBranches(TRAUMA_SCENARIO_STRUCTURE.tree, TRAUMA_SCENARIO_STRUCTURE.nodeLabels)\n    data.steps = addLeavesToBranches(steps, data.items)\n\n    // filter through tree of steps, creating ordered list of assessment steps'\n    const assessments = getAssessmentNodes(steps)\n    // console.log(assessments)\n    data.assessmentSteps = assessments;\n    return data;\n}\n\n\nexport default traumaScenarioIndexer\n","import React, {useState, useContext} from \"react\"\n\n// const defaultPrefs = {\n//     dispLeafNodesInline: true,\n//     dispAssessmentFindingsInline: true,\n//     inhibitRaterOversharing: false\n// }\n\nconst defaultPrefs = {\n    dispLeafNodesInline: false,\n    dispAssessmentFindingsInline: true,\n    inhibitRaterOversharing: false\n}\n\nconst noop = () => {}\nexport const PreferencesContext = React.createContext({...defaultPrefs, setPref: noop})\n\n\nexport const PreferencesProvider = (props) => {\n    const [dispLeafNodesInline, setDispLeafNodesInline] = useState(defaultPrefs.dispLeafNodesInline)\n    const [dispAssessmentFindingsInline, setDispAssessmentFindingsInline] = useState(defaultPrefs.dispAssessmentFindingsInline)\n    const [inhibitRaterOversharing, setInhibitRaterOversharing] = useState(defaultPrefs.inhibitRaterOversharing)\n\n    const setPref = (name, value) => {\n        switch(name) {\n            case \"dispLeafNodesInline\":\n                setDispLeafNodesInline(value)\n                break\n            case \"dispAssessmentFindingsInline\":\n                setDispAssessmentFindingsInline(value)\n                break;\n            case \"inhibitRaterOversharing\":\n                setInhibitRaterOversharing(value)\n                break\n            default:\n                console.log(`not setting unknown pref ${name} to ${value}`)\n        }\n    }\n\n    return (\n        <PreferencesContext.Provider\n            value={{\n                dispLeafNodesInline,\n                dispAssessmentFindingsInline,\n                inhibitRaterOversharing,\n                setPref\n            }}\n        >\n            {props.children}\n        </PreferencesContext.Provider>\n    )\n}\n\nexport const usePrefs = () => useContext(PreferencesContext)\n","const scenarioData = {\n  id: \"PHTC M2CA\",\n  scenarioType: \"trauma\",\n  info: {\n    instructorInformation: \"This skill station involves a middle-aged patient who experienced a rollover with a riding lawn mower. The patient requires airway/breathing management, hemorrhage control, immobilization, and rapid transport to a trauma center. Follow the written scenario, and provide information to all team members as the scenario progresses or as the team members ask.\",\n    patientInformation: {\n      moulage: \"Multiple lacerations to upper and lower extremities; partial amputation of right lower extremity with active bleeding; multiple bruises to chest and abdomen; flail segment to right upper chest; pale, cool, and diaphoretic skin\",\n      position: \"Supine\",\n      actions: \"Opens eyes to pain and becomes progressively more unresponsive\"\n    },\n    dispatchInfo: \"You and your partners work for a transporting EMS agency and have been dispatched to a residential housing development for a lawn mower accident. It is 1330 hr on a Saturday afternoon and the temperature is 90°F (32°C). You are 5 minutes away from a level III trauma center and 25 minutes from a level I trauma center.\",\n    sceneAssessment: \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n  },\n  assessmentFindings: {\n      \"assess-scene-safety\": \"scene is safe\",\n      \"assess-injury-mechanism\": \"Patient experienced a rollover with a riding lawn mower\",\n      \"assess-num-patients\": \"1 patient\",\n      \"request-addl-help\": \"Additional EMS is on the way.\",\n      \"verbalizes-patient-condition\": \"You arrive at a suburban yard where you observe a large riding lawn mower on its side at the bottom of an 8-ft (2.5-m) hill. A bystander is holding a towel to the patient’s right lower leg. As you approach the patient, the bystander tells you that he saw the mower tip over while the patient was driving it.\",\n      \"determines-loc\": \"Opens eyes to pain and becomes progressively more unresponsive\",\n      \"determines-life-threats\": \"Multiple lacerations to face, scalp, right arm, amputation at the right ankle\",\n      \"assess-airway\": \"Airway is patent\",\n      \"assess-breathing\": \"8 BPM\", // point to vitals?\n      \"assess-ventilation\": \"shallow, irregular\",\n      \"assess-pulse\": \"130; weak radial pulses\", // point to vitals?\n      \"assess-skin\": \"Cyanonic, diaphoretic\",\n      \"assess-bleeding\": \"Major external hemorrhage at lower right leg\",\n      \"assess-mouth-nose-face\": \"Multiple lacerations with minor bleeding\",\n      \"assess-scape-ears\": \"Unremarkable\",\n      \"assess-perrl\": \"Pupils equal, round, and responsive\", // point to vitals?\n      \"assess-trachea\": \"Neck unremarkable\",\n      \"assess-jugular\": \"No JVD\",\n      \"assess-spine\": \"Unremarkable / No step-off\",\n      \"inspects-chest\": \"Multiple lacerations; red marks to right chest\",\n      \"palpate-chest\": \"Flail segment to right upper chest\",\n      \"auscultate-chest\": \"Crepitus on right\",\n      \"assess-abdomen\": \"Soft, nontender\",\n      \"assess-pelvis\": \"Stable\",\n      \"assess-genitalia\": \"Unremarkable\",\n      \"assess-left-leg\": \"Multiple lacerations\",\n      \"assess-right-leg\": \"Amputation of right leg at the ankle\",\n      \"assess-left-arm\": \"Multiple lacerations\",\n      \"assess-right-arm\": \"Multiple lacerations\",\n      \"assess-posterior-thorax\": \"Unremarkable\",\n      \"assess-lumbar-buttocks\": \"Unremarkable\"\n  },\n  initialVitalSigns: {\n    BP: \"96 / palpation\",\n    P: \"130, weak radial pulses\",\n    R: \"38, shallow; LS clear and equal with crepitus on right\",\n    Skin: \"Cyanonic, diaphoretic\",\n    Spo2: \"78 % /RA\",\n    ETCO2: \"64 mm Hg\",\n    GCS: \"8 (E-2, V-2, M-4), PERRLA\",\n    Glucose: \"86 mg/dl(4.8 mmol / l)\",\n    Pain: \"Unable to access\",\n    Temp: \"96.5 F(35.8 C)\"\n  },\n  SAMPLE: {\n    S: \"shortness of breath\",\n    A: \"unknown\",\n    M: \"unknown\",\n    P: \"unknown\",\n    L: \"unknown\",\n    E: \"Riding a lawnmower on an incline and it rolled over the patient\"\n  },\n  reassessmentVitals: {\n    BP: {\n      \"goodVitals\": \"96 / P\",\n      \"badVitals\": \"78 / P\"\n    },\n    P: {\n      \"goodVitals\": \"120, weak\",\n      \"badVitals\": \"130, weak radial pulses\"\n    },\n    R: {\n      \"goodVitals\": \"12, LS clear and equal with crepitus on right\",\n      \"badVitals\": \"38, shallow; LS clear and equal with crepitus on right\"\n    },\n    Skin: {\n      \"goodVitals\": \"Pale, diaphoretic\",\n      \"badVitals\": \"Cyanonic, diaphoretic\"\n    },\n    Spo2: {\n      \"goodVitals\": \"99%, O2 \",\n      \"badVitals\": \"No capture\"\n    },\n    ETCO2: {\n      goodVitals: \"45 mm Hg\",\n      badVitals: \"32 mm Hg\"\n    },\n    GCS: {\n      \"goodVitals\": \"8\",\n      \"badVitals\": \"4\"\n    },\n    Glucose: {\n      \"goodVitals\": \"86 mg/dl(4.8 mmol / l)\",\n      \"badVitals\": \"86 mg/dl(4.8 mmol / l)\"\n    },\n    Pain: {\n      \"goodVitals\": \"Unable to access\",\n      \"badVitals\": \"Unable to access\"\n    },\n    Temp: {\n      \"goodVitals\": \"96.5 F(35.8 C)\",\n      \"badVitals\": \"94.8\"\n    }\n  },\n  interventions: {\n    \"stabilizes-spine\": \"do\", // \"c-spine-interventions\"\n    \"inserts-adjunct\": \"na\",\n    \"manages-airway\": \"do\", // \"airway-interventions\"\n    \"oxygen-therapy\": \"do\", // na?? - no intervention list for it but should be done\n    \"manage-breathing-injury\": \"do\", // ventilation-interventions\n    \"control-bleeding\": \"do\", // \"bleeding-interventions\"\n    \"control-shock\": \"say\", // \"shock-interventions\"\n    \"transport-priority\": \"do\", // \"transport-interventions\"\n  }\n};\n\n\nexport default scenarioData;","import React, {\n    useState,\n    useEffect\n} from \"react\"\n\nexport const ScenarioContext = React.createContext()\n\nexport const ScenarioProvider = ({scenario, defaultValues, children}) =>{\n\n    const [currentNode, setCurrentNode] = useState(defaultValues.currentNode)\n    const [currentAssessmentFinding, setCurrentAssessmentFinding] = useState(null)\n    const [checkListItems, setCheckListItems] = useState(defaultValues.checkListItems)\n    const [criticalCriteria, setCriticalCriteria] = useState(defaultValues.criticalCriteria)\n    const [showInterventionForm, setShowInterventionForm] = useState(defaultValues.showForm)\n    const [currentVitals, setCurrentVitals] = useState(defaultValues.vitals)\n    const [vitalsRecomputed, setVitalsRecomputed] = useState(defaultValues.vitalsRecomputed)\n\n    const isChecked = (id) => {\n        return checkListItems[id]\n    }\n\n    const setChecked = (id, boolVal) => {\n        setCheckListItems(prevState => ({\n            ...prevState, [id]: boolVal\n        }))\n    }\n\n    const toggleChecked = (id) => {\n        setChecked(id, !checkListItems[id])\n    }\n\n    const isCurrentAssessmentFinding = (id) => {\n        return !!currentAssessmentFinding && currentAssessmentFinding === id\n    }\n\n    const toggleAssessmentFinding = (id) => {\n        const stepIsChecked = isChecked(id)\n        setCurrentAssessmentFinding(!stepIsChecked ? id : null)\n        toggleChecked(id)\n    }\n\n    const shouldDisplayInterventionForm = (id) => {\n        return Object.keys(showInterventionForm).includes(id) && showInterventionForm[id]\n    }\n\n    const setDisplayInterventionForm = (id, boolVal) => {\n        setShowInterventionForm(prevState => ({\n            ...prevState, [id]: boolVal\n        }))\n    }\n\n    const toggleDisplayInterventionForm = (id) => {\n        setDisplayInterventionForm(id, !showInterventionForm[id])\n    }\n\n    const setVital = (vital, value) => {\n        setCurrentVitals(prevState => ({\n            ...prevState, [vital]: value\n        }))\n    }\n\n    useEffect(\n        () => {\n            // as both class components .setState() and functional components useState() setters\n            // both actually queue the setting of state, as an performance optimization for when\n            // there are individual requests for state changes made in a relatively short period\n            // of time,  making use of a useEffect() with a dependency array of all state variables\n            // we're interested in persisting to the db is a perfect place to capture when they\n            // have actually been changed, and thus persist those changes.  since we're not hooked\n            // up to the db yet, I'm merely console.log()ing that things have changed, and listing\n            // what state we'll be persisting to the db.\n            console.log(\"current state\", {\n                currentNode,\n                currentAssessmentFinding,\n                checkListItems,\n                criticalCriteria,\n                showInterventionForm,\n                currentVitals,\n                vitalsRecomputed\n            })\n        },\n        [\n            currentNode,\n            currentAssessmentFinding,\n            checkListItems,\n            criticalCriteria,\n            showInterventionForm,\n            currentVitals,\n            vitalsRecomputed\n        ]\n    )\n\n    return (\n        <ScenarioContext.Provider\n            value={{\n                scenario,\n                isChecked,\n                setChecked,\n                toggleChecked,\n                currentNode,\n                setCurrentNode,\n                isCurrentAssessmentFinding,\n                toggleAssessmentFinding,\n                shouldDisplayInterventionForm,\n                setDisplayInterventionForm,\n                toggleDisplayInterventionForm,\n                setCriticalCriteria,\n                currentVitals,\n                setVital,\n                vitalsRecomputed,\n                setVitalsRecomputed\n            }}\n        >\n            {children}\n        </ScenarioContext.Provider>\n    )\n}","import React from 'react'\nimport {\n    Container,\n    Row,\n    Col\n} from 'reactstrap'\n\nconst MDBContainer = ({lhs, rhs, lhsWidth=6, rhsWidth=6}) => {\n\n    return (\n        <Container fluid={true} className=\"main\">\n            <Row>\n                <Col md={lhsWidth} className=\"col\">\n                    {lhs}\n                </Col>\n                <Col md={rhsWidth} className=\"col\">\n                    {rhs}\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default MDBContainer","import React, { useContext } from \"react\";\n\nimport classnames from \"classnames\"\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nconst CheckBox = (props) => {\n  // need props param to exist in order to access props.children\n\n  const { step, clickHandler, inlineChildren = [] } = props\n\n  const { isChecked } = useContext(ScenarioContext)\n\n  return (\n    <>\n      <label\n        className={classnames({\"text-danger\": step.type === 'critical-criteria'})}\n        onClick={() => clickHandler(step.id)}\n      >\n        <span\n          className=\"checkbox-icon material-icons-outlined\"\n        >\n          {isChecked(step.id) ? \"check_box\": \"check_box_outline_blank\"}\n        </span>\n        <b>{step.label}</b>\n        {inlineChildren}\n      </label>\n      { !!props.children &&\n        props.children\n      }\n    </>\n  )\n\n}\n\nexport default CheckBox;\n","import React, { useContext } from \"react\";\n\nimport classnames from \"classnames\";\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\n\nconst CallOutText = ({ step }) => {\n\n  const {isCurrentAssessmentFinding} = useContext(ScenarioContext)\n\n  return  (\n    <span className={classnames(\"callout\", {currentCallOut: isCurrentAssessmentFinding(step.id)})}>\n      {step.callout}\n    </span>\n  )\n\n}\n\nexport default CallOutText;","import React, { useContext } from \"react\";\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nconst CallOutIcon = ({ step }) => {\n\n  const { isChecked } = useContext(ScenarioContext)\n\n  return (\n    isChecked(step.id)\n    ?\n      <span\n        className=\"callout-icon material-icons-outlined\"\n        style={{color:'grey'}}\n      >\n        message\n      </span>\n    :\n      <span\n        className=\"callout-icon material-icons-outlined\"\n      >\n        message\n      </span>\n  )\n}\nexport default CallOutIcon;\n","import React from \"react\"\n\nimport classnames from \"classnames\"\n\nconst InterventionButton = ({step}) => {\n\n    return (\n        <>\n        &nbsp;\n        <button\n            className={classnames(\"btn\", \"btn-sm\", (step.intervention === \"na\") ? \"btn-danger\" :\"btn-primary\")}\n            type=\"button\"\n        >\n            {step.intervention}\n        </button>\n        </>\n    )\n}\n\nexport default InterventionButton","import React, { useContext } from \"react\"\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nconst InterventionForm = ({step}) => {\n\n    const { scenario, shouldDisplayInterventionForm, toggleChecked } = useContext(ScenarioContext)\n\n    const getInterventionsList = () => {\n        return (\n            scenario.interventionForms[step.id].interventions.map((intv) => (\n                <div key={intv.id}>\n                    <label>\n                        <input type=\"checkbox\" />\n                        {intv.label}\n                    </label>\n                </div>\n            ))\n        )\n    }\n\n    const getChecklistItems = () => {\n        return (\n            scenario.interventionForms[step.id].steps.map((cl) => (\n                <div key={cl.id}>\n                    <label>\n                        <input type=\"checkbox\" />\n                        {cl.label}\n                    </label>\n                </div>\n            ))\n        )\n    }\n\n    const getCriticalCriteria = () => {\n        return (\n            scenario.interventionForms[step.id].criticalCriteria.map((cc) => (\n                <div key={cc.id}>\n                    <label className=\"text-danger\">\n                        <input type=\"checkbox\" />\n                        {cc.label}\n                    </label>\n                </div>\n            ))\n        )\n    }\n\n    if (!shouldDisplayInterventionForm(step.id)) {\n        return (<div></div>)\n    } else {\n        return (\n            <div className=\"intervention-form\">\n                <form>\n                    <h5>Relevant Interventions</h5>\n                    { getInterventionsList() }\n                    <h5>Checklist</h5>\n                    { getChecklistItems() }\n                    <h5>Critical Criteria</h5>\n                    { getCriticalCriteria() }\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-primary btn-small\"\n                        onClick={() => toggleChecked(step.id)}\n                    >\n                        Submit\n                    </button>\n                </form>\n            </div>\n        )\n    }\n}\n\nexport default InterventionForm","import React, { useContext } from \"react\"\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\nimport { usePrefs } from \"../contexts/PreferencesContext\"\n\nimport CheckBox from \"./CheckBox\"\nimport CallOutText from \"./CallOutText\"\nimport CallOutIcon from \"./CallOutIcon\"\nimport InterventionButton from \"./InterventionButton\"\nimport InterventionForm from \"./InterventionForm\"\n\nconst CheckListItem = ({step}) => {\n    const { dispAssessmentFindingsInline } = usePrefs()\n    const {\n        isChecked,\n        toggleChecked,\n        toggleAssessmentFinding,\n        toggleDisplayInterventionForm\n    } = useContext(ScenarioContext)\n\n    switch (step.type) {\n        case 'assessment':\n            const inlines = (<CallOutIcon step={step} />)\n            return (\n                <CheckBox\n                    step={step}\n                    clickHandler={toggleAssessmentFinding}\n                    inlineChildren={inlines}\n                >\n                    {dispAssessmentFindingsInline &&\n                        <div>\n                            {isChecked(step.id) &&\n                                <CallOutText step={step} />\n                            }\n                        </div>\n                    }\n                </CheckBox>\n            )\n        case 'intervention':\n            const clickHandler = (step.intervention === \"say\")\n                ? toggleChecked\n                : toggleDisplayInterventionForm\n\n            const ib = (<InterventionButton step={step} /> )\n\n            return (\n                <CheckBox\n                    step={step}\n                    clickHandler={clickHandler}\n                    inlineChildren={ib}\n                >\n                    <InterventionForm step={step} />\n                </CheckBox>\n            )\n        default:\n            // case 'required-action':\n            // case 'critical-criteria':\n            // case 'execution-error':\n            return (\n                <CheckBox\n                    step={step}\n                    clickHandler={toggleChecked}\n                />\n            )\n        }\n\n}\n\n\nexport default CheckListItem;","import React, { useState } from \"react\";\n\nimport classnames from \"classnames\";\n\nimport CheckListItem from \"./CheckListItem\"\n\nconst isLeafNode = (step) => {\n  return !step.children.length > 0\n}\n\nexport default function CheckList({ steps, heading, depth = 3, first = false}){\n  const [collapsed, setCollapsed] = useState(false);\n  const toggle = () => {\n    console.log(\"toggling\");\n    setCollapsed(!collapsed);\n  }\n  return (\n    <ul className={classnames({first:  first})}>\n      {steps.map((step) => (\n        <li key={`li-${step.id}`}>\n          {isLeafNode(step)\n          ?\n            <CheckListItem step={step} />\n          :\n            <>\n              <p\n                className={`h${depth}`}\n                onClick={() => toggle()}>\n                  {step.label}\n              </p>\n              <CheckList\n                  steps={step.children}\n                  depth={depth + 1}\n              />\n            </>\n          }\n        </li>\n      )\n      )}\n    </ul>\n  )\n\n}\n","import React, { useState } from \"react\"\n\nimport { usePrefs } from \"../contexts/PreferencesContext\"\n\nimport classnames from \"classnames\"\n\n\nexport default function RevealTableRow({label, values}) {\n    const {inhibitRaterOversharing} = usePrefs()\n    const [show, setShow] = useState(false)\n    const toggle = () => setShow(!show)\n\n    return (\n        <tr>\n            { (!inhibitRaterOversharing)\n            ?\n                <th>{label}</th>\n            :\n                <th onClick={() => toggle()}>{label} </th>\n            }\n            {\n                values.map((value, index) => (\n                    <td key={ index }>\n                        {(!inhibitRaterOversharing)\n                            ?\n                            <span >{value}</span>\n                            :\n                            <span className={classnames({ hidden: !show })}>\n                                {value}\n                            </span>\n                        }\n                    </td>\n                ))\n            }\n        </tr>\n    )\n\n}","import React from \"react\"\n\nimport { Table } from \"reactstrap\"\n\nimport RevealTableRow from \"./RevealTableRow\"\n\nexport default function RevealTable({title, headings=[], rows=[]}) {\n\n    return (\n        <Table striped={true} size=\"sm\">\n            <thead>\n                <tr>\n                    {\n                        headings.map((heading, index) => (\n                            <th key={index}>{heading}</th>\n                        ))\n                    }\n                </tr>\n            </thead>\n            <tbody>\n                {rows.map((row, index) =>\n                    <RevealTableRow\n                        key={index}\n                        label={row.label}\n                        values={row.value}\n                    />\n                )}\n            </tbody>\n        </Table>\n    )\n}","\nimport React,{ useState, useContext, useEffect } from \"react\"\n\nimport {\n    Nav,\n    NavItem,\n    NavLink,\n    TabContent,\n    TabPane\n} from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nimport { usePrefs } from \"../contexts/PreferencesContext\"\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nimport CallOutText from \"./CallOutText\"\nimport RevealTable from \"./RevealTable\"\n\nexport default function RaterInfo({defaultTab = \"callouts\"}) {\n    const {dispAssessmentFindingsInline} = usePrefs()\n    const {scenario, currentVitals, vitalsRecomputed} = useContext(ScenarioContext)\n    const [activeTab, setActiveTab] = useState(defaultTab)\n    const activateTab = (tab) => {\n        if (activeTab !== tab) setActiveTab(tab)\n    }\n    const isActiveTab = (tab) => tab === activeTab\n\n    useEffect(\n        () => {\n            console.log(activeTab)\n            // disable the callouts tab ability to be active if assessment findings\n            // are supposed to be displayed inline\n            if (activeTab === \"callouts\" && dispAssessmentFindingsInline) {\n                setActiveTab(\"vitals\")\n            }\n        }, [dispAssessmentFindingsInline, activeTab]\n    )\n\n    const getAssessmentFindingsTabPane = () => {\n        const callouts = scenario.assessmentSteps.map(step => {\n            return {\n                id: step.id,\n                label: step.calloutLabel,\n                value: [\n                    <CallOutText\n                        step={step}\n                        displayAssessmentFindings={true}\n                    />\n                ]\n            }\n        })\n        return (\n            <TabPane tabId = \"callouts\" >\n                <RevealTable\n                    title=\"Assessment Findings\"\n                    headings={[\"Asssesment\", \"Finding\"]}\n                    rows={callouts}\n                />\n            </TabPane >\n        )\n    }\n\n    const getSampleTabPane = () => {\n        const sample = Object.entries(scenario.SAMPLE).map(rec => {\n            return { label: rec[0], value: [rec[1]] }\n        })\n        return (\n            <TabPane tabId = \"sample\" >\n                <RevealTable\n                    title=\"SAMPLE\"\n                    headings={[\"Type\", \"Value\"]}\n                    rows={sample}\n                />\n            </TabPane >\n        )\n    }\n\n    const getVitalsTabPane = () => {\n        // vitals tab will display either 2 or 3 columns, depending on\n        // whether vitals have been recomputed, and thus we need to display\n        // both the initial and current value\n        const vitalsHeaders =\n            vitalsRecomputed\n            ? [\"Vital Sign\", \"Initial Value\", \"Current Value\"]\n            : [\"Vital Sign\", \"Current Value\"]\n\n        const vitals = Object.entries(scenario.initialVitalSigns).map(iv => {\n            const value =\n                vitalsRecomputed\n                ? [ iv[1], currentVitals[iv[0]] ]\n                : [ iv[1] ]\n\n            return {\n                label: iv[0],\n                value: value\n            }\n        })\n\n        return (\n            <TabPane tabId = \"vitals\" >\n                <RevealTable\n                    title=\"Vitals\"\n                    headings={vitalsHeaders}\n                    rows={vitals}\n                />\n            </TabPane >\n        )\n    }\n\n    return (\n        <>\n            <Nav tabs>\n                {!dispAssessmentFindingsInline &&\n                    <NavItem>\n                        <NavLink\n                            className={classnames({ active: isActiveTab('callouts') })}\n                            onClick={() => activateTab('callouts')}\n                        >\n                            Assessment Findings\n                        </NavLink>\n                    </NavItem>\n                }\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: isActiveTab('vitals') })}\n                        onClick={() => activateTab('vitals')}\n                    >\n                        Vitals\n                    </NavLink>\n                </NavItem>\n                <NavItem>\n                    <NavLink\n                        className={classnames({ active: isActiveTab('sample') })}\n                        onClick={() => activateTab('sample')}\n                    >\n                        SAMPLE\n                    </NavLink>\n                </NavItem>\n            </Nav>\n            <TabContent activeTab={activeTab}>\n                {!dispAssessmentFindingsInline && getAssessmentFindingsTabPane() }\n                { getVitalsTabPane() }\n                { getSampleTabPane() }\n            </TabContent>\n        </>\n    );\n}","import React, {\n    useContext,\n    // useState\n} from \"react\"\n\nimport {usePrefs} from \"../contexts/PreferencesContext\"\nimport {ScenarioContext} from \"../contexts/ScenarioContext\"\n\nimport MDBContainer from \"./MDBContainer\"\nimport CheckList from \"./CheckList\"\nimport RaterInfo from \"./RaterInfo\"\n\nconst CheckListRaterInfoLayout = (props) => {\n    const { scenario } = useContext(ScenarioContext)\n    const {dispAssessmentFindingsInline} = usePrefs()\n\n    const lhs = (\n        <CheckList\n            heading=\"Checklist\"\n            steps={scenario.steps}\n            first={true}\n            displayAssessmentFindings={dispAssessmentFindingsInline}\n        />\n    )\n    const rhs = (\n        <RaterInfo />\n    )\n    return (\n        <MDBContainer\n            lhs={lhs}\n            rhs={rhs}\n            lhsWidth={7}\n            rhsWidth={5}\n        />\n    )\n}\n\nexport default CheckListRaterInfoLayout","import React, { useContext } from \"react\"\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nimport { Button } from \"reactstrap\"\n\n// I guess I don't need these functions anymore, now that they are only\n// evaluated in a single location\nfunction hasChildren(step) {\n    return step.children && step.children.length > 0\n}\nfunction allChildrenAreHeadings(step) {\n    return step.children.every((child) => child.type === 'heading')\n}\n\nconst Outline = ({ steps, depth = 3, first=false}) => {\n\n    const {setCurrentNode} = useContext(ScenarioContext)\n    return (\n        <ul className={first ? \"first\" : \"\"}>\n        {steps.map((step) => (\n            <li key={step.id}>\n            {\n                (hasChildren(step) && allChildrenAreHeadings(step))\n                ?\n                    <>\n                        <div className={`h${depth + 1} text-primary empty-heading`}>\n                            {step.label}\n                        </div>\n                        <Outline\n                            steps={step.children}\n                            depth={depth + 1}\n                        />\n                    </>\n                :\n                    <Button\n                        color=\"link\"\n                        onClick={() => setCurrentNode(step.id)}>\n                        <span className={`h${depth + 1}`}>\n                            {step.label}\n                        </span>\n                    </Button>\n            }\n            </li>\n\n        ))}\n        </ul>\n    )\n}\n\nexport default Outline;","// Implements a bootstrap 3 panel using Bootstrap4/5 card\n// this *should* be a reusable, purely presentational component\n// not making use of any of our app-specific props/state\nimport React from \"react\"\n\nimport {\n    Card,\n    CardHeader,\n    CardTitle,\n    CardBody\n} from \"reactstrap\"\n\nimport classnames from \"classnames\"\n\nexport default function Panel(props) {\n    const {centerTitle = true, titleSize = \"h3\"} = props\n    return (\n        <Card>\n            <CardHeader>\n                <CardTitle\n                    className={classnames({\"text-center\": centerTitle}, titleSize)}\n                >\n                    {props.title}\n                </CardTitle>\n            </CardHeader>\n            <CardBody>\n                {props.children}\n            </CardBody>\n        </Card>\n    )\n}","import React, { useContext, useEffect, useState } from 'react'\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nimport CheckListItem from \"./CheckListItem\"\nimport Panel from \"./Panel\"\nimport RaterInfo from \"./RaterInfo\"\n\n\nconst MDBDetailsPane = () => {\n    const { scenario, currentNode } = useContext(ScenarioContext)\n    const [label, setLabel] = useState(null)\n    const [children, setChildren] = useState([])\n\n\n    useEffect(\n        () => {\n            if(!!currentNode) {\n                setLabel(scenario.nodeLabels[currentNode])\n                setChildren(scenario.items[currentNode])\n            } else {\n                setLabel(null)\n                setChildren([])\n            }\n        },[scenario, currentNode]\n    )\n\n    if (null === label) {\n        return <div></div>\n    }\n    return (\n        <>\n            <Panel title={`${label} Details`}>\n                <ul>\n                    {children.map((child) =>\n                        <li key={child.id}>\n                            <CheckListItem step={child} />\n                        </li>\n                    )}\n                </ul>\n            </Panel>\n            <RaterInfo defaultTab={\"vitals\"} />\n        </>\n    )\n}\n\nexport default MDBDetailsPane;","import React, {\n    useContext,\n    // useState\n} from \"react\"\n\n// import {usePrefs} from \"../contexts/PreferencesContext\"\nimport {ScenarioContext} from \"../contexts/ScenarioContext\"\n\nimport MDBContainer from \"./MDBContainer\"\nimport Outline from \"./Outline\"\nimport MDBDetailsPane from \"./MDBDetailsPane\"\n\nconst NavigationDetailsLayout = (props) => {\n    const { scenario } = useContext(ScenarioContext)\n    // const {dispAssessmentFindingsInline} = usePrefs()\n\n    const lhs = (\n        <Outline\n            heading=\"Navigation\"\n            steps={scenario.steps}\n            first={true}\n        />\n    )\n    const rhs = (\n        <MDBDetailsPane />\n    )\n    return (\n        <MDBContainer lhs={lhs} rhs={rhs} lhsWidth=\"5\" rhsWidth=\"7\"/>\n    )\n}\n\nexport default NavigationDetailsLayout","import React, { useEffect, useState } from 'react';\n\nimport { usePrefs } from \"../contexts/PreferencesContext\"\n\nimport {\n    Button,\n    Nav,\n    // NavItem,\n    Navbar,\n    NavbarBrand,\n    NavbarText,\n} from \"reactstrap\";\n\n\n// {/*\n//     <NavbarBrand href=\"#\">\n//     MedDBriefer\n//             </NavbarBrand> */}\n\n// {/* <Button color=\"primary\" onClick={prefsToggler}>\n//     Preferences\n// </Button> */}\n\n\nconst MDBNavBar = ({title, scenInfoToggler, prefsToggler}) => {\n\n    const {setPref} = usePrefs()\n    const [activeMockup, setActiveMockup] = useState(\"mockup1\")\n\n    const isCurrentMockup = (mockup) => mockup === activeMockup\n\n    const setMockup1Prefs = (event) => {\n        event.preventDefault()\n        setPref(\"dispLeafNodesInline\", false)\n        setPref(\"dispAssessmentFindingsInline\", true)\n        setPref(\"inhibitRaterOversharing\", false)\n        setActiveMockup(\"mockup1\")\n    }\n\n    const setMockup2Prefs = (event) => {\n        event.preventDefault()\n        setPref(\"dispLeafNodesInline\", true)\n        setPref(\"dispAssessmentFindingsInline\", true)\n        setPref(\"inhibitRaterOversharing\", false)\n        setActiveMockup(\"mockup2\")\n    }\n    const setMockup3Prefs = (event) => {\n        event.preventDefault()\n        setPref(\"dispLeafNodesInline\", true)\n        setPref(\"dispAssessmentFindingsInline\", false)\n        setPref(\"inhibitRaterOversharing\", false)\n        setActiveMockup(\"mockup3\")\n    }\n\n    useEffect(() => {\n\n    },[])\n\n    return (\n        <Navbar color=\"dark\" dark>\n\n            <Nav>\n                <Button color={isCurrentMockup(\"mockup1\") ? \"success\" : \"primary\"}\n                        onClick={setMockup1Prefs}>\n                    Mockup 1\n                </Button>\n                <Button color={isCurrentMockup(\"mockup2\") ? \"success\" : \"primary\"}\n                        onClick={setMockup2Prefs}>\n                    Mockup 2\n                </Button>\n                <Button color={isCurrentMockup(\"mockup3\") ? \"success\" : \"primary\"}\n                        onClick={setMockup3Prefs}>\n                    Mockup 3\n                </Button>\n            </Nav>\n           {!!title &&\n                <NavbarText tag=\"h3\">{title}</NavbarText>\n            }\n            <Nav>\n                <Button color=\"success\" onClick={scenInfoToggler}>\n                    Scenario Info\n                </Button>\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default MDBNavBar;\n","import React from 'react'\n\nimport {Modal, ModalHeader, ModalBody} from 'reactstrap';\n\n\nconst MDBModal = (props) => {\n    const {title, show, dismiss, children} = props;\n    return (\n        <Modal isOpen={show} toggle={dismiss} size=\"xl\" backdrop=\"static\">\n            <ModalHeader toggle={dismiss}>\n                <span className=\"h2\">{title}</span>\n            </ModalHeader>\n            <ModalBody>\n                {children}\n            </ModalBody>\n        </Modal>\n    );\n}\n\nexport default MDBModal;","\nimport React, { useContext } from \"react\"\n\nimport MDBModal from \"./MDBModal\"\n\nimport { ScenarioContext } from \"../contexts/ScenarioContext\"\n\nexport default function ScenarioInfo({show, dismiss}) {\n\n    const { scenario } = useContext(ScenarioContext)\n\n\n    return (\n        <MDBModal\n            name=\"Scenario Info\"\n            show={show}\n            dismiss={dismiss}\n        >\n            <div className=\"container-fluid\">\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h3>Instructor Information</h3>\n                        <p>{scenario.info.instructorInformation}</p>\n                    </div>\n                    <div className=\"col-6\">\n                        <h3>Patient Information</h3>\n                        <ul>\n                            <li><b>Moulage:</b> {scenario.info.patientInformation.moulage}</li>\n                            <li><b>Position:</b> {scenario.info.patientInformation.position}</li>\n                            <li><b>Actions:</b> {scenario.info.patientInformation.actions}</li>\n                        </ul>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-6\">\n                        <h3>Dispatch Information</h3>\n                        <p>{scenario.info.dispatchInfo}</p>\n                    </div>\n                    <div className=\"col-6\">\n                        <h3>Scene Assessment</h3>\n                        <p>{scenario.info.sceneAssessment}</p>\n                    </div>\n                </div>\n            </div>\n        </MDBModal>\n\n    )\n}","import React from \"react\"\n\nimport { Button } from \"reactstrap\"\n\nimport { usePrefs } from \"../contexts/PreferencesContext\"\n\nimport MDBModal from \"./MDBModal\"\n\nconst PreferencesForm = ({show, dismiss}) => {\n\n    const {\n        dispLeafNodesInline,\n        dispAssessmentFindingsInline,\n        inhibitRaterOversharing,\n        setPref\n    } = usePrefs()\n\n    const handleInputChange = (event) => {\n        const target = event.target\n        const value = target.type === \"checkbox\" ? target.checked : target.value\n        const name = target.name\n        setPref(name, value)\n    }\n\n    return (\n        <MDBModal\n            title=\"User Preferences\"\n            show={show}\n            dismiss={dismiss}\n        >\n            <div className=\"container\">\n                <div className=\"row\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"dispLeafNodesInline\"\n                            checked={dispLeafNodesInline}\n                            onChange={handleInputChange}\n                        />\n                        &nbsp; Embed Checkboxes within Checklist Outline\n                    </label>\n                </div>\n                <div className=\"row\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"dispAssessmentFindingsInline\"\n                            checked={dispAssessmentFindingsInline}\n                            onChange={handleInputChange}\n                        />\n                        &nbsp; Embed Assessment Findings within Checklist\n                    </label>\n                </div>\n                <div className=\"row\">\n                    <label>\n                        <input\n                            type=\"checkbox\"\n                            name=\"inhibitRaterOversharing\"\n                            checked={inhibitRaterOversharing}\n                            onChange={handleInputChange}\n                        />\n                        &nbsp; Inhibit Rater Oversharing of Information\n                    </label>\n                </div>\n\n                <Button\n                    type=\"button\"\n                    className=\"btn btn-success\"\n                    onClick={dismiss}\n                >\n                    Dismiss\n                </Button>\n            </div>\n        </MDBModal>\n    )\n}\n\nexport default PreferencesForm","import React, {\n    useState,\n    // useContext,\n    useEffect\n} from \"react\"\n\nimport traumaScenarioIndexer from \"../data/traumaScenarioIndexer\"\nimport scenarioData from \"../data/scenario\"\n\nimport { usePrefs } from \"../contexts/PreferencesContext\"\nimport { ScenarioProvider } from \"../contexts/ScenarioContext\"\n\nimport CheckListRaterInfoLayout from \"../components/CheckListRaterInfoLayout\"\nimport NavigationDetailsLayout from \"../components/NavigationDetailsLayout\"\nimport MDBNavBar from \"../components/MDBNavBar\"\nimport ScenarioInfo from \"../components/ScenarioInfo\"\nimport PreferencesForm from \"../components/PreferencesForm\"\n\nfunction mapKeysToFalse(dict) {\n    const newDict = Object.keys(dict).reduce((obj, key) => {\n        obj[key] = false;\n        return obj;\n    }, {})\n    return newDict;\n}\n\nfunction mapArrayOfObjKeysToFalse(array) {\n    const dict = {}\n    array.forEach((obj) => {dict[obj.id] = false})\n    // console.log(dict)\n    return dict\n}\n\nfunction mapChildObjKeysToFalse(parent) {\n    const dict = {}\n    Object.keys(parent).forEach((key) => {\n        // console.log(key)\n        parent[key].forEach(child => {\n            dict[child.id] = false\n        })\n    })\n    // console.log(dict)\n    return dict\n}\n\nconst getDefaultValues = (scen) => {\n    return {\n        vitals: scen.initialVitalSigns,\n        vitalsRecomputed: false,\n        currentNode: null,\n        checkListItems: mapChildObjKeysToFalse(scen.items),\n        criticalCriteria: mapArrayOfObjKeysToFalse(scen.criticalCriteria),\n        showForm: mapKeysToFalse(scen.interventionForms)\n    }\n}\n\n\nconst Scenario = ({scenarioId}) => {\n\n    const { dispLeafNodesInline } = usePrefs()\n\n    const [scenario, setScenario] = useState(null)\n\n    const [initValues, setInitValues] = useState(null)\n    const [showPrefs, setShowPrefs] = useState(false)\n    const [showScenInfo, setShowScenInfo] = useState(false)\n\n\n    useEffect(\n        () => {\n            const loadScen = () => {\n                console.log(\"loadScen() called\")\n                //ignore scenarioId for now importing hardcoded scen file\n                const scen = traumaScenarioIndexer(scenarioData)\n                setScenario(scen)\n                // console.log(scen)\n                const defaults = getDefaultValues(scen)\n                setInitValues(defaults)\n            }\n            loadScen()\n        }, []\n    )\n\n    useEffect(\n        () => {\n            if (!!scenario || !!initValues) {\n                console.log(\"Scenario::useEffect()::values changed\")\n                // console.log(JSON.stringify(scenario, null, 4))\n                // console.log(JSON.stringify(initValues, null, 4))\n            }\n        }, [scenario, initValues]\n    )\n\n    const togglePrefs = (event) => {\n        event.preventDefault()\n        setShowPrefs(!showPrefs)\n    }\n    const toggleScenInfo = (event) => {\n        event.preventDefault()\n        setShowScenInfo(!showScenInfo)\n    }\n\n\n\n    const getLayout = () => {\n        return dispLeafNodesInline\n        ? <CheckListRaterInfoLayout />\n        : <NavigationDetailsLayout />\n    }\n\n\n\n    return (\n        !scenario\n        ? <div>still loading</div>\n        :\n        <ScenarioProvider\n            scenario={scenario}\n            defaultValues={initValues}\n        >\n            <MDBNavBar\n                title={`Scenario: ${scenario.id}`}\n                scenInfoToggler={toggleScenInfo}\n                prefsToggler={togglePrefs}\n            />\n            {getLayout()}\n            <PreferencesForm show={showPrefs} dismiss={togglePrefs} />\n            <ScenarioInfo show={showScenInfo} dismiss={toggleScenInfo} />\n\n        </ScenarioProvider>\n    )\n}\n\nexport default Scenario","import React from \"react\"\n\nimport { PreferencesProvider } from \"./contexts/PreferencesContext\"\n\nimport Scenario from \"./routes/Scenario\"\n\nimport {\n    HashRouter as Router,\n    Switch,\n    Route\n} from \"react-router-dom\"\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"./styles.css\";\n\n\nconst App = (props) => {\n\n    return (\n        <PreferencesProvider>\n            <Router>\n                <Switch>\n                    <Route exact path=\"/\" component={Scenario} />\n                </Switch>\n            </Router>\n        </PreferencesProvider>\n    )\n}\n\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\"\n\n// reactstrap is using some deprecated stuff, which brings up warnings, making\n// the console difficult to read.\n//\n// for instance the following pair of warnings, rear their ugly head whenever\n// you display/hide a\n// Modal:\n//\n//   Warning: Legacy context API has been detected within a strict - mode tree.\n\n//       The old API will be supported in all 16.x releases, but applications\n//       using it should migrate to the new version.\n\n//       Please update the following components: Transition\n//\n//   Warning: findDOMNode is deprecated in StrictMode.\n//       findDOMNode was passed an instance of Transition which is inside StrictMode.\n//       Instead, add a ref directly to the element you want to reference.\n//       Learn more about using refs safely here: https://reactjs.org/link/strict-mode-find-node\n//\n// this is simply the reactstrap project being slow to make use of a dep which\n// fixes the problem. Everything works for the timebeing, and the warning only\n// comes up in development builds (not production)\n//\n// if this is causing you difficulties, you can temporarily (IMPORTANT!\n// remember to re-enable this) not wrapping <App />  with <React.StrictMode>\n// again, I stress *temporarily* as StrictMode will help find other issues as\n// well, and they'll mostly be **our** issues, not 3rd party stuff\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}